// Sass Mix In's
//==================================================//
//
// rem font sizin
@mixin font-size($size-value) {
  font-size: ($size-value) + px;
  font-size: ($size-value / 10) + rem;
}

// vendor prefixing
@mixin css3($property, $value...) {
  @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {
    #{$prefix}#{$property}: $value;
  }
}

// set opacity cross browser
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// Util For Rem Mixin
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Util To Disable Select
@mixin no-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// Handle Rems with pixel fallback
@mixin rem($property, $values...) {
  $max: length($values);
  $px-values: '';
  $rem-values: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $px-values: #{$px-values + $value*16}px;

    @if $i < $max {
      $px-values: #{$px-values + " "};
    }
  }

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $rem-values: #{$rem-values + $value}rem;

    @if $i < $max {
      $rem-values: #{$rem-values + " "};
    }
  }

  #{$property}: $px-values;
  #{$property}: $rem-values;
}

// Respond-To different device sizes (Responsive Breakpoints)
@mixin respond-to($media) {
  @if $media == phone {
    @media (max-width: $breakpoint-phone-to-tablet - 1) { @content; }
  } @else if $media == tablet {
    @media (min-width: $breakpoint-phone-to-tablet) and (max-width: $breakpoint-tablet-to-desktop - 1) { @content; }
  } @else if $media == desktop {
    @media (min-width: $breakpoint-tablet-to-desktop) and (max-width: $breakpoint-desktop-to-extralarge - 1) { @content; }
  } @else if $media == extralarge {
    @media (min-width: $breakpoint-desktop-to-extralarge) { @content; }
  }
}

// Apply Font Face
@mixin font-face($family, $src, $weight: normal, $style: normal) {
  @font-face {
    font-family: $family;
    src: url('#{$src}.eot'); // IE9 compat
    src: url('#{$src}.eot?#iefix') format('embedded-opentype'), // IE8 and below
    url('#{$src}.woff') format('woff'), // standards
    url('#{$src}.woff2') format('woff2'), // standards
    url('#{$src}.ttf') format('truetype'), // Safari, Android, iOS
    url('#{$src}.svg##{$family}') format('svg'); // legacy iOS
    font-style: $style;
    font-weight: $weight;
  }
}

// Align Vertically to Parent
@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
