// Sliders
//================================================== //

// Avoid the FoUC
// Ranges are styled similarly to their pseudo-markup in size.
input[type="range"] {
  height: 4px;
  margin: 20px 4% 35px;
  position: relative;
  visibility: hidden;
  width: 92%;

  &.vertical {
    -webkit-appearance: slider-vertical;
    writing-mode: bt-lr;
  }
}

.slider-wrapper {
  background-color: $slider-bg-color;
  position: relative;
  @include css3(touch-callout, none);
  @include css3(user-select, none);

  &:not(.vertical) {
    height: 4px;
    margin: 25px 0 50px;
    width: 92%;

    .slider-hit-area {
      bottom: -10px;
      left: 0;
      right: 0;
      top: -10px;
    }

    > .tick {
      margin-top: -4px;

      &::after {
        margin-left: -6px;
      }

      > .label {
        left: 3px;
        top: 26px;
      }
    }

    .slider-handle {
      margin-top: -10px;

      &.is-animated {
        @include css3(transition, left 200ms, right 200ms);
      }
    }

    .slider-range {
      height: inherit;

      &.is-animated {
        @include css3(transition, top 200ms, bottom 200ms);
      }
    }
  }

  &.vertical {
    height: 94%;
    margin: calc(25px + 4%) 50px calc(50px + 4%);
    min-height: 150px;
    width: 4px;

    .slider-hit-area {
      bottom: 0;
      left: -10px;
      right: -10px;
      top: 0;
    }

    > .tick {
      margin-left: -4px;

      &::after {
        margin-left: -6px;
      }

      > .label {
        right: 24px;
        text-align: right;
        top: 0;
      }
    }

    .slider-handle {
      margin-left: -10px;

      &.is-animated {
        @include css3(transition, top 200ms, bottom 200ms);
      }
    }

    .slider-range {
      width: inherit;

      &.is-animated {
        @include css3(transition, left 200ms, right 200ms);
      }
    }
  }

  .slider-hit-area {
    cursor: pointer;
    position: absolute;
  }

  > .tick {
    background-color: transparent;
    border-radius: 12px;
    cursor: pointer;
    display: inline-block;
    height: 12px;
    line-height: 12px;
    outline: 0;
    position: absolute;
    text-align: center;
    text-decoration: none;
    -webkit-touch-callout: none;
    -ms-user-select: none;
    -webkit-user-select: none;
    width: 12px;

    &.complete:after {
      background-color: $slider-active-bg-color;
    }

    &:after {
      background-color: $slider-bg-color;
      border-radius: 50%;
      content: '';
      height: 12px;
      position: absolute;
      width: 12px;
    }

    &.inherit:after {
      background-color: inherit !important;
    }

    > .label {
      color: $font-color-highcontrast;
      position: absolute;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

  }

  &.is-disabled {
    background-color: $pager-disabled-color !important;

    > .tick {
      background-color: $pager-disabled-color !important;
      cursor: default;

      > .label {
        opacity: .4;
      }

      &:after {
        background-color: $pager-disabled-color;
        // background-color: transparent;
      }
    }

    > .slider-range {
      visibility: hidden;
    }

    > .slider-handle {
      cursor: default;
      visibility: hidden;
    }
  }

}

.ie9 {
  .slider-wrapper > .tick::after {
    margin-left: 0;
    z-index: -1;
  }
}

.ie11 {
  .slider-wrapper > .tick::after {
    margin-left: -1px;
  }
}

.slider-handle {
  background-color: $slider-active-bg-color;
  border: 6px solid $slider-active-bg-color;
  border-radius: 24px;
  box-shadow: 0 0 0 20px transparent; //Increase touch point
  color: transparent;
  cursor: pointer;
  display: inline-block;
  height: 24px;
  line-height: 24px;
  position: absolute;
  width: 24px;
  @include css3(touch-callout, none);
  z-index: 20;

  // Focus Border
  &::after {
    border: 1px solid;
    border-color: inherit;
    border-radius: 50%;
    content: '';
    height: 40px;
    left: -15px;
    position: absolute;
    @include scale(0);
    top: -15px;
    @include transition(transform 200ms ease 0s);
    width: 40px;
    z-index: 19;
  }

  // Transparent BGs
  &::before {
    border: 21px solid;
    border-color: inherit;
    border-radius: 50%;
    content: '';
    left: -14px;
    opacity: .1;
    position: absolute;
    top: -15px;
    @include transition(transform 200ms ease 0s);
    @include scale(0);
    z-index: 19;
  }

  &:focus,
  &:active {
    background-color: $inverse-color !important; // Needs !important to override inline CSS for background color on active state.
    border-color: $slider-active-bg-color;
    outline: 0;
  }

  &:focus {
    &::before,
    &::after {
      @include scale(.96);
    }
  }

  &:active,
  &.is-active {
    &::after {
      border: 0;
    }
  }

  &.is-dragging {
    @include css3(transition, none);
  }

}

.slider-range {
  background-color: $primary-color;
  cursor: pointer;
  display: block;
  position: absolute;

  &.is-dragging {
    @include css3(transition, none);
  }
}

@include respond-to(large) {
  .slider-wrapper {
    &:not(.vertical) {
      margin: 25px 3% 50px;
      width: 94%;
    }

    &.vertical {
      height: 94%;
    }
  }
}

@include respond-to(extralarge) {
  .slider-wrapper {
    &:not(.vertical) {
      margin: 25px 2.5% 50px;
      width: 95%;
    }

    &.vertical {
      height: 95%;
    }
  }
}


//RTL Styles
html[dir='rtl'] {
  .slider-wrapper {
      &.vertical {
        > .tick {
          margin-left: inherit;
          margin-right: -4px;

          &::after {
            margin-left: inherit;
            margin-right: -6px;
          }

          > .label {
            left: 24px;
            right: auto;
            text-align: left;
          }
        }

        .slider-handle {
          margin-left: inherit;
          margin-right: -10px;
        }

      }

    > .tick {
      &.inherit:after {
        background-color: transparent !important;
      }
    }

    &.is-disabled {
      > .tick {
        &:after {
          background-color: transparent;
        }
      }
    }
  }
}
