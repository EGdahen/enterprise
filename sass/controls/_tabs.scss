// Tabs (Vertical and Horizontal)
//==================================================/
@mixin tab-outline {
  border: 1px solid transparent;
  border-radius: 2px;
  bottom: 7px;
  content: '';
  left: 7px;
  position: absolute;
  right: 7px;
  top: 7px;
}

@mixin tab-outline-focus {
  border-color: $tab-selected-color;
}

@mixin tab-after-off {
  background-color: rgba($tab-hover-color, 0); //background: transparent;
  bottom: 0;
  content: '';
  display: block;
  height: 3px;
  position: absolute;
  @include css3(transition, background-color .25s ease);
  width: 0;
}

@mixin tab-after-hover {
  background-color: $tab-hover-color;
  width: 100%;
}

@mixin tab-after-selected-hover {
  background-color: $tab-selected-color;
  width: 100%;
}

.tab-container {
  font-size: 0;
  position: relative;

  &.has-more-button {
    .tab-more {
      visibility: visible;
    }
  }

  &.is-disabled {
    .tab {
      cursor: default !important;
    }
  }
}

.tab-list {
  list-style: none outside none;
  overflow: hidden;
}

// Styles specific to any tabs used in SoHo Xi
// (padding/color rules are different for all tabs so they aren't in the generic class)
.tab {
  cursor: pointer;
  display: inline-block;
  position: relative;
  text-overflow: ellipsis;

  > * {
    vertical-align: middle;
  }

  > a {
    color: inherit;
    cursor: inherit;
    display: inline-block;
    text-decoration: none;

    * {
      pointer-events: none;
    }

    span {
      color: inherit;
    }
  }

  &.is-disabled {
    cursor: default !important;

    .icon {
      color: $disabled-color !important;
    }
  }
}

// Animated Bar
.animated-bar {
  @include transition(left .25s ease, width .25s ease);
  background-color: rgba($tab-selected-color, 0); //background: transparent;
  bottom: 0;
  display: inline-block;
  height: 3px;
  left: 0;
  position: absolute;
  width: 20px;

  &.visible {
    @include transition(background-color .25s ease, left .25s ease, width .25s ease);
    background-color: rgba($tab-selected-color, 1);
  }
}

// Tab Focus State
// Isn't actually attached to each tab, but is a separate element that moves around
// This helps break overflow issues and simplifies the CSS
.tab-focus-indicator {
  @include tab-outline;
  pointer-events: none;
  z-index: 10;

  &.is-visible {
    @include tab-outline-focus;
  }
}

// Tab Body
.tab-panel {
  //Thinking about this but might be better to do it inline in the page
  //display: none;
  padding-top: 20px;

  &.padding {
    padding: 20px !important;
  }

  &.alternate {
    background-color: $body-bg-color;
    min-height: 100%;
  }

  // Change text color when disabled
  &.is-disabled {
    color: $disabled-color;

    label,
    .label {
      color: inherit;
    }

    h1,
    h2,
    h3,
    h4,
    p {
      color: inherit;
    }

  }
}

// Page containers that directly house '.tab-panel' elements will allow them to fill the height of the container
// Used in vertical/header/module tabs.
.page-container > .tab-panel {
  height: 100%;
  padding-top: 0;
}

// More Button
.tab-more {
  @include css3(transition, background-color .25s ease);
  cursor: pointer;
  display: inline-block;
  position: absolute;
  right: 0;
  top: 0;
  visibility: hidden;

  &:focus {
    outline: none;
  }

  // Position Elements in menu
  > * {
    vertical-align: middle;
  }
}

// Common styles between Horizontal and Header tabs
.tab-container.horizontal,
.tab-container.header-tabs {

  .tab-more {
    @include font-size(14);
    background-color: transparent;
    max-width: 102px;

    .icon {
      height: 16px;
      margin: 0;
      vertical-align: middle;
      width: 32px;
    }
  }

  // Tab Headers aka Notches
  // Ref: http://bradsknutson.com/blog/css-sliding-underline/
  .tab-list {
    padding: 0;
    width: 100%;
  }

  > .tab-list {
    > .tab {
      border-radius: 2px 2px 0 0;
      padding: 0;
      @include css3(transition, background-color .25s ease);

      &:not(.last-child) {
        margin-right: 10px;
      }

      &:before {
        @include tab-after-off;
      }

      &:not(.separator):hover {
        &::before {
          @include tab-after-hover;
        }

        &:first-child::before,
        &:last-child::before {
          width: calc(100% - 1px);
        }
      }

      &.is-focused {
        &:after {
          @include tab-outline-focus;
        }
      }

      &.is-disabled {
        color: $disabled-color !important;

        &:before {
          content: none !important;
        }

        a,
        &:hover a,
        &.is-selected a {
          cursor: default;
        }
      }

      &.dismissible {
        padding-right: 10px;

        .icon {
          position: relative;
        }

        .icon.close {
          height: 10px;
          margin-left: -3px;
          margin-top: -1px;
          padding-right: 1px;
          right: auto;
          top: 1px;
        }

        .icon.icon-error {
          height: 16px;
          right: -9px;
          top: -1px;
          width: 16px;
        }
      }

      &.has-popupmenu {
        .icon {
          height: 16px;
          margin: 0 0 0 -10px;
          width: 32px;
        }

        .icon-error {
          height: 16px;
          right: -5px;
          top: 11px;
          width: 16px;
        }
      }

      a {
        color: inherit;
        @include antialiased();
        @include font-size(14);
        font-weight: normal;
        text-decoration: none;

        > * {
          line-height: 1.14;
        }

        span {
          color: inherit;
        }
      }

      .count {
        display: block;
        font-size: 180%;
      }

      .icon-error {
        fill: $error-icon-fill;
        height: 14px;
        position: absolute;
        right: -10px;
        top: 18px;
        width: 18px;
      }
    }

    .separator {
      cursor: default;
      display: inline-block;
      margin: 0 12px;
      padding: 11px 0;
      position: relative;
      @include css3(user-select, none);

      &:before {
        border-left: 1px solid $tab-border-color;
        content: '';
        display: block;
        height: 100%;
        position: absolute;
        top: calc(50% - 6px);
        @include css3(transition, none);
        width: 1px;
      }

      &:after {
        display: none;
        @include css3(transition, none);
      }

      &:hover {
        background-color: transparent;
      }

      &:hover:before {
        background-color: transparent;
      }
    }
  }

  &.has-more-button .tab-list {
    padding-right: 102px;
  }

  // Entire tab control disabled state
  &.is-disabled {
    color: $disabled-color;

    label,
    .label {
      color: inherit;
    }

    h1, h2, h3, h4, p {
      color: inherit;
    }

    .tab-list {
      border-bottom-color: $disabled-color;
    }

    .tab,
    .separator {
      cursor: default;
    }

    .tab {
      color: $disabled-color !important;

      &::before {
        content: none !important;
      }

      > a,
      &:hover > a,
      &.is-selected > a,
      .count {
        color: $disabled-color !important;
        cursor: default;
      }

      .icon {
        fill: $disabled-color !important;
      }
    }

    .separator {
      &::before {
        border-left-color: $input-disabled-border-color;
      }
    }

    .animated-bar {
      background-color: rgba($disabled-color, 0);

      &.visible {
        background-color: rgba($disabled-color, 1);
      }
    }

  }
}

.popupmenu.tab-list-spillover,
.popupmenu.dropdown-tab {

  .icon.icon-error {
    height: 14px;
    left: auto !important;
    width: 14px;
  }

  li.dismissible {
    > a {
      padding-right: 40px;

      > .icon.close {
        display: none;
        height: 14px;
        position: absolute;
        right: 5px;
        top: 9px;
      }
    }

    &.is-focused {
      > a > .icon.close {
        background-color: $popupmenu-hover-color;
        display: inline-block;
      }
    }
  }
}

// On iOS/Android, need to always show the icon so that it can be activated by touch.
.ios,
.android {
  .popupmenu.tab-list-spillover,
  .popupmenu.dropdown-tab {

    li.dismissible {
      > a {

        > .icon.close {
          position: absolute;
          display: inline-block;
        }
      }
    }
  }
}

@import './horizontaltabs';
@import './verticaltabs';
@import './headertabs';
@import './moduletabs';

//RTL Styles
html[dir='rtl'] {
  // More Button
  .tab-more {
    left: 0;
    padding: 8px 14px 8px 0;
    right: auto;
  }

  .tab-container:not(.vertical) {
    &.has-more-button {
      .tab-list {
        padding-left: 102px;
        padding-right: inherit;
      }
    }

    .tab {
      &:not(.last-child) {
        margin-left: 10px;
        margin-right: inherit;
      }

      .icon-error {
        left: -10px;
        right: auto;
      }
    }
  }

  .tab-focus-indicator {
    right: auto;
  }
}
