// Toolbars
//================================================== */

$toolbar-buttonset-height: 40px;

// See also Colors.scss
.toolbar,
.formatter-toolbar {
  position: relative;
  text-align: left;
  -webkit-touch-callout: none;

  &.has-title {
    text-align: right;
  }

  &.right-aligned {
    text-align: right;
  }

  // Acts as a spacer that causes the toolbar items to vertically align.
  &::before {
    @include vertical-alignment-spacer;
  }

  > * {
    display: inline-block;
    vertical-align: middle;
  }

  .buttonset {
    @include no-select();
    height: $toolbar-buttonset-height;
    overflow: hidden;
    padding-left: 1px;  //for the focus state
    width: 100%; // Overridden by sizing calculation.

    > .separator {
      background-color: $formatter-toolbar-separator-color;
      display: inline-block;
      height: 20px;
      margin: 3px 16px 0;
      position: relative;
      top: 6px;
      width: 1px;
    }

    > * {
      margin: 3px 5px 3px 0;
      vertical-align: top;

      &:last-child {
        margin-right: 1px;
      }

      &.is-overflowed {
        display: none;
      }
    }

    > [class^="btn"] {
      min-width: 34px;
    }
  }

  .title {
    @include enable-select();
    height: $toolbar-buttonset-height;
    left: 1px; //FOUC - Interacts with other title widths
    overflow: hidden;
    position: relative;
    text-align: left;
    text-overflow: ellipsis;
    top: 0;
    white-space: nowrap;
    width: 45%; // Overridden by sizing calculation.

    // Acts as a spacer that causes the toolbar items to vertically align.
    &::before {
      @include vertical-alignment-spacer;
    }

    > * {
      display: inline-block;
      margin: auto 0;
      vertical-align: middle;
      white-space: nowrap;
    }

    > h1 {
      text-overflow: ellipsis;

      + [class^="btn"] {
        margin-left: 5px;
      }
    }

    + .buttonset {
      text-align: right;
      width: calc(55% - 1px); // -1px for the spacer in the ::after pseudo on the toolbar elem.
    }
  }

  // Container for More Button
  .more {
    @include no-select();
    display: none;
    text-align: right;

    > * {
      margin-right: 1px;
    }
  }

  &.do-resize {
    .buttonset {
      width: auto;
    }

    .title {
      position: absolute;
      width: auto;
    }

    &.has-more-button {
      .buttonset {
        width: calc(100% - 44px);
      }

      .title + .buttonset {
        width: auto;
      }
    }
  }

  &.has-more-button {
    .title {
      left: -5px; //FOUC
    }

    .buttonset {
      width: calc(100% - 44px);

      > *:last-child {
        margin-right: 5px; // Add back the 5px since we need to visually separate the More button from the others.
      }
    }

    &.has-title {
      .buttonset {
        width: calc(55% - 44px);
      }
    }

    .more {
      // scss-lint:disable ImportantRule
      display: inline-block !important;
      // scss-lint:enable ImportantRule
    }
  }

  // Standalone Toolbar simply has a background and border that surrounds its boundaries
  &.standalone {
    background-color: $toolbar-standalone-bg-color;
    border-bottom: 1px solid $toolbar-standalone-border-color;
    padding: 0 1rem;

    [class^="btn"] {
      &[disabled],
      &[disabled]:hover {
        color: $toolbar-standalone-disabled-color;
      }
    }
  }
}

// Styles for regular toolbar only
.toolbar {
  font-size: 0;
  margin-bottom: 5px;

  .title {
    @include antialiased();
    @include font-size(16);
    color: $font-color-extrahighcontrast;

    + .buttonset {
      text-align: right;
    }
  }

  // This touches all buttons, but specifcally changes the ".btn" class to be more like
  // ".btn-tertiary/destructive" specifically on toolbars.
  [class^="btn"],
  .btn {
    background-color: transparent;
    border: 1px solid transparent;
    box-shadow: none;
    color: $tertiary-btn-color;
    overflow: hidden;

    &.btn-actions {
      border-radius: 18px;
    }

    .icon {
      fill: $tertiary-btn-color;
    }

    &:hover:not([disabled]) {
      color: $tertiary-btn-hover-color;

      .icon {
        fill: $tertiary-btn-hover-color;
      }
    }

    &.is-open,
    &.is-open:hover {
      color: $tertiary-btn-active-color;

      .icon {
        fill: $tertiary-btn-active-color;
      }
    }


    &[disabled],
    &[disabled]:hover {
      background-color: transparent;
      border-color: transparent;
      color: $btn-disabled-color;
      cursor: default;

      .icon {
        fill: $btn-disabled-color;
      }
    }

    &:focus {

      // Prevents the normal .btn background color from fading in
      &:active {
        // scss-lint:disable ImportantRule
        background-color: transparent !important;
        // scss-lint:enable ImportantRule
      }

      &:not(.hide-focus) {
        box-shadow: 0 0 0 2px transparent, 0 0 0 1px $primary-color;
        color: $tertiary-btn-active-color;

        &.searchfield-category-button {
          box-shadow: none;
        }

        &:active {
          // scss-lint:disable ImportantRule
          background-color: transparent !important;
          // scss-lint:enable ImportantRule
          box-shadow: none;
        }

        .icon {
          fill: $tertiary-btn-active-color;
        }
      }
    }

    .ripple-effect {
      background-color: $tertiary-btn-ripple-color;
    }
  }

  // Add special coloring to toolbar buttons for ".is-selected" state
  [class^="btn"].is-selected:focus:not(.hide-focus) {
    border: 1px solid transparent;
    color: $tertiary-btn-hover-color;

    .icon {
      fill: $tertiary-btn-hover-color;
    }
  }
}

// Used in Editor, some card menus, etc.
.popupmenu.toolbar-options {
  li {
    > a {
      padding: 0 30px;
    }

    > .icon,
    > b {
      margin-left: 10px;
      width: 28px;
    }

    &.is-selected {
      background-color: $popupmenu-hover-color;
      color: $font-color-highcontrast;

      > .icon {
        fill: $font-color-highcontrast;
      }
    }
  }

  &.has-icons {
    li {
      > a {
        padding: 0 30px 0 45px;
      }
    }
  }
}

.is-safari .toolbar,
.is-safari .formatter-toolbar {
  overflow-x: initial;
}

// Styles for contextual toolbar
.contextual-toolbar {
  background-color: $contextual-toolbar-bg-color;
  margin: 0;
  // scss-lint:disable ImportantRule
  overflow: hidden !important;
  // scss-lint:enable ImportantRule
  z-index: 20;

  + .listview {
    @include css3(transition, height 300ms cubic-bezier(.17, .04, .03, .94));
    height: calc(100% - 44px);
  }

  // Updated changes from listview button and font sizes
  // Override Toolbar styles
  &.toolbar {
    height: 52px;
    margin-bottom: 0;
    padding: 0 20px;

    .title {
      @include font-size(14);
      color: $contextual-toolbar-color;
    }

    .buttonset {
      height: 40px;
    }

    [class^="btn"] {
      color: $contextual-toolbar-button-color;
      height: 30px;
      margin-top: 5px;
      min-width: 0;
      padding: 0 10px;

      > .icon {
        // scss-lint:disable ImportantRule
        fill: $contextual-toolbar-button-color !important;
        // scss-lint:enable ImportantRule
      }

      &.btn-actions {
        margin-top: 0;
      }

      &:focus {
        box-shadow: 0 0 0 2px transparent, 0 0 0 1px $contextual-toolbar-color;

        &:not(.hide-focus) {
          color: $contextual-toolbar-color;

          > .icon {
            fill: $contextual-toolbar-color;
          }
        }
      }

      &:hover {
        color: $contextual-toolbar-button-hover-color;

        > .icon {
          fill: $contextual-toolbar-button-hover-color;
        }
      }

      &.is-selected {
        color: $contextual-toolbar-color;

        &:focus:not(.hide-focus) {
          color: $contextual-toolbar-color;

          > .icon {
            fill: $contextual-toolbar-color;
          }
        }
      }

      .ripple {
        background-color: $contextual-toolbar-color;
      }
    }
  }

  &.is-hidden {
    display: none;
    height: 0;
  }
}

@include respond-to(phone) {
  .toolbar {
    .btn,
    .btn-tertiary {
      padding: 0 5px;
    }
  }
}

@media (max-width: $breakpoint-phone-to-tablet - 1) {
  .toolbar {
    // Show text with icon buttons by using this class.
    // Text will still become invisible on small breakpoint (but still visible to screen readers).
    // See respond-to(tabletdown) below.
    [class^="btn"] {
      width: auto;

      > .icon + span {
        display: inline-block;
        visibility: hidden;
        width: 0;

        &:not(.audible) {
          padding-left: 0;
        }

        + .icon {
          margin-left: 0;
        }
      }
    }
  }
}

//RTL Styles
html[dir='rtl'] {

  .toolbar,
  .formatter-toolbar {
    text-align: right;

    &.has-title {
      text-align: left;
    }

    &.right-aligned {
      text-align: left;
    }

    .title {
      left: auto;
      right: 1rem;
      text-align: right;

      + .buttonset {
        text-align: left;
      }
    }

    &.has-more-button {
      .buttonset > *:last-child {
        margin-left: 5px;
        margin-right: 0;
      }
    }

  }

}
