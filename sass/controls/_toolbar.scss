// Toolbars
//================================================== */

$toolbar-buttonset-height: 44px;

// See also Colors.scss
.toolbar,
.formatter-toolbar {
  overflow-x: hidden;
  overflow-y: visible;
  position: relative;
  -webkit-touch-callout: none;
  -webkit-user-select: none;

  // Acts as a spacer that causes the toolbar items to vertically align.
  &::before {
    @include vertical-alignment-spacer;
  }

  > * {
    display: inline-block;
    vertical-align: middle;
  }

  .buttonset {
    height: $toolbar-buttonset-height;
    overflow: hidden;
    width: 98%;

    > * {
      margin: 5px 5px 5px 0;
      vertical-align: top;

      &:last-child {
        margin-right: 1px;
      }

      &.is-overflowed {
        display: block;
      }
    }

    > [class^="btn"] {
      min-width: 34px;

      .icon:not(.icon-dropdown) {
        height: 22px;
      }
    }
  }

  .title {
    overflow: hidden;
    white-space: nowrap;
    width: 45%;

    > * {
      vertical-align: middle;
    }

    > h1 {
      text-overflow: ellipsis;
    }

    + .buttonset {
      text-align: right;
      width: calc(55% - 1px); // 1px is the width of the pseudo-element preceeding the title used for vertical alignment
    }
  }

  // Container for More Button
  .more {
    display: none;
    text-align: right;
    width: 38px;

    > * {
      margin-right: 1px;
    }
  }

  .separator {
    background-color: #b6b6b6;
    display: inline-block;
    height: 20px;
    margin: 3px 16px 0;
    position: relative;
    top: 6px;
    width: 1px;
  }

  &.has-more-button {
    .buttonset {
      width: calc(100% - 39px); // 39px = width of the ".more" container + 1px for vertical spacing pseudo-element

      > *:last-child {
        margin-right: 5px; // Add back the 5px since we need to visually separate the More button from the others.
      }
    }

    .title {
      width: calc(45%); // 1px for the "vertical alignment" helper psuedo-element

      + .buttonset {
        width: calc(55% - 39px); // 55% - (width of the possible 'more' button + weird, inexplicable spacing that's necessary)
      }
    }

    .more {
      display: inline-block !important;
    }
  }

}

// Styles for regular toolbar only
.toolbar {
  margin-bottom: 5px;
  font-size: 0;

  .title {
    color: $font-color;
    @include antialiased();
    @include font-size(16);

    + .buttonset {
      text-align: right;
    }
  }

  // This touches all buttons, but specifcally changes the ".btn" class to be more like
  // ".btn-tertiary/destructive" specifically on toolbars.
  [class^="btn"],
  .btn {
    background-color: transparent;
    border: 1px solid transparent;
    border-radius: 18px;
    box-shadow: none;
    color: $tertiary-btn-color;
    overflow: hidden;

    .icon {
      fill: $tertiary-btn-color;
    }

    &:hover:not([disabled]) {
      color: $tertiary-btn-hover-color;

      .icon {
        fill: $tertiary-btn-hover-color;
      }
    }

    &[disabled],
    &[disabled]:hover {
      background-color: transparent;
      border-color: transparent;
      color: $tertiary-btn-disabled-color;
      cursor: default;

      .icon {
        fill: $tertiary-btn-disabled-color;
      }
    }

    &:focus:not(.hide-focus) {
      box-shadow: 0 0 0 2px transparent, 0 0 0 1px $tertiary-btn-active-color;
      color: $tertiary-btn-active-color;

      &:active {
        background-color: transparent !important;
        box-shadow: none;
      }

      .icon {
        fill: $tertiary-btn-active-color;
      }
    }

    .ripple-effect {
      background: #8dd2fb;
    }
  }

  // Add special coloring to toolbar buttons for ".is-selected" state
  [class^="btn"].is-selected:focus:not(.hide-focus) {
    color: $tertiary-btn-hover-color;

    .icon {
      fill: $tertiary-btn-hover-color;
    }
  }
}

// Used in Editor, some card menus, etc.
.popupmenu.toolbar-options {
  li {
    > a {
      padding: 0 30px;
    }

    > .icon,
    > b {
      margin-left: 10px;
      width: 28px;
    }

    &.is-selected {
      background-color: $popupmenu-hover-color;
      color: $font-color-highcontrast;

      > .icon {
        fill: $font-color-highcontrast;
      }
    }
  }

  &.has-icons {
    li {
      > a {
        padding: 0 30px 0 45px;
      }
    }
  }
}

@media (max-width: $breakpoint-phone-to-tablet - 1) {
  .toolbar:not(.formatter-toolbar) {
    // Show text with icon buttons by using this class.
    // Text will still become invisible on small breakpoint (but still visible to screen readers).
    // See respond-to(tabletdown) below.
    .btn-tertiary,
    .btn {
      min-width: 0;
      padding: 0;
      width: auto;

      span:not(.audible) {
        display: inline-block;
        padding: 0 10px;
      }

      .icon {
        width: 32px;

        + span {
          padding: 0;
          position: absolute;
          width: 0;
        }
      }
    }
  }
}
