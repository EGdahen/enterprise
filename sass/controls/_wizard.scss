// Wizard Control
//================================================== //

// NOTE: See also "_header.scss" for Wizard styles that are specific to the header control.

//Internal Variables
$wizard-height: 164px;
$wizard-tick-border-width: 4px;
$wizard-tick-size: 18px;
$wizard-focus-state-size: ($wizard-tick-size * 1.5);

.wizard-header {
  background-color: $wizard-default-bg;
  padding: (($wizard-height/2) - $wizard-tick-border-width) ($wizard-height/4);
  position: relative;

  .bar {
    background-color: $wizard-bar-bg;
    height: 4px;
    position: relative;
  }

  .completed-range {
    background-color: $wizard-active-color;
    height: 4px;
    left: 0;
    position: absolute;
    top: 0;
    @include transition(width 200ms cubic-bezier(.17, .04, .03, .94));
    width: 0%;
  }

  .tick {
    background-color: $wizard-default-bg;
    border-radius: ($wizard-tick-size/2);
    display: inline-block;
    height: $wizard-tick-size;
    margin-left: -4px;
    margin-top: -($wizard-tick-size/2) + ($wizard-tick-border-width/2);
    position: absolute;
    width: $wizard-tick-size;

    // Border for incomplete or non-current ticks
    &::after {
      border: $wizard-tick-border-width solid $wizard-bar-bg;
      border-radius: ($wizard-tick-size/2);
      content: '';
      height: $wizard-tick-size - $wizard-tick-border-width*2;
      left: 0;
      position: absolute;
      top: 0;
      @include transition(border 200ms cubic-bezier(.17, .04, .03, .94),
        left 200ms cubic-bezier(.17, .04, .03, .94),
        top 200ms cubic-bezier(.17, .04, .03, .94));
      width: $wizard-tick-size - ($wizard-tick-border-width * 2);
    }

    // Default Placement for Focus State
    &::before {
      border: 1px solid rgba($wizard-active-color, 0);
      border-radius: 0;
      content: '';
      height: 0;
      left: $wizard-tick-size/2;
      position: absolute;
      top: $wizard-tick-size/2;
      @include transition(border 200ms cubic-bezier(.17, .04, .03, .94),
        border-radius 200ms cubic-bezier(.17, .04, .03, .94),
        height 200ms cubic-bezier(.17, .04, .03, .94),
        left 200ms cubic-bezier(.17, .04, .03, .94),
        top 200ms cubic-bezier(.17, .04, .03, .94),
        width 200ms cubic-bezier(.17, .04, .03, .94));
      width: 0;
    }

    &:focus::before {
      border: 1px solid rgba($wizard-active-color, 1);
      border-radius: ($wizard-focus-state-size/2) + $wizard-tick-border-width;
      height: $wizard-focus-state-size;
      left: -.5em;
      top: -.5em;
      width: $wizard-focus-state-size;
    }

    .label {
      color: $font-color-lowcontrast;
      position: absolute;
      top: -($wizard-tick-size * 2);
      white-space: nowrap;
    }

    &.current,
    &.complete {
      &::after {
        border: 0;
        left: $wizard-tick-border-width;
        top: $wizard-tick-border-width;
      }

      .label {
        top: -($wizard-tick-size * 2);
      }
    }

    &.current {
      background-color: $wizard-active-color;
      border-radius: 50%;
      color: $wizard-active-color;

      .label {
        color: $wizard-active-color;
        font-weight: bold;
      }
    }

    &.complete {
      background-color: $wizard-active-color;
      color: $font-color;

      .label {
        color: $font-color;
      }
    }
  }
}

// Styles used by the Header Wizard Control
$header-wizard-bar: $slate08;
$header-wizard-active-color: $white;

.header {
  .wizard {
    margin: 0 20px;
  }

  .wizard-header {
    background-color: transparent;
    padding: (($wizard-height/8) - $wizard-tick-border-width) ($wizard-height/4) (($wizard-height/4) - $wizard-tick-border-width);

    .bar {
      background-color: $header-wizard-bar;
    }

    .completed-range {
      background-color: $header-wizard-active-color;
    }

    .tick {
      background-color: $header-bg-color;

      &::after {
        border: $wizard-tick-border-width solid $header-wizard-bar;
      }

      &::before {
        border: 1px solid rgba($header-wizard-active-color, 0);
      }

      &:focus {
        &::before {
          border: 1px solid rgba($header-wizard-active-color, 1);
        }
      }

      .label {
        color: $font-color-lowcontrast;
        top: $wizard-tick-size * 2;
      }

      &.current,
      &.complete {
        &::after {
          border: 0;
        }
      }

      &.current {
        background-color: $header-wizard-active-color;
        color: $header-wizard-active-color;

        .label {
          color: $header-wizard-active-color;
        }
      }

      &.complete {
        background-color: $header-wizard-active-color;
        color: $header-wizard-active-color;

        .label {
          color: $header-wizard-active-color;
        }
      }
    }
  }

}

// Toolbar with wizard for some patterns
.wizard-toolbar {
  background-color: $panel-bg-color;
  border-bottom: 1px solid $panel-border-color;
  display: inline-block;
  height: 72px;
  padding: 0 30px;
  width: 100%;

  .hyperlink {
    display: inline-block;
    margin-top: -22px;
    position: relative;
    top: 50%;
  }

  .wizard-header {
    background-color: $panel-bg-color;
    padding: 27px 0 0;
  }

  .wizard {
    display: inline-block;
    float: right;
    padding-right: 30px;
    width: 45%;

    .label {
      padding-left: 2.5px;
      top: 27px !important;
    }

    .tick {
      height: 12px;
      margin-top: -5px;
      width: 12px;

      &:before {
        transition: none;
      }

      &:focus::before {
        height: 20px;
        width: 20px;
      }

      &.current {
        height: 24px;
        margin-bottom: 5px;
        margin-top: -10px;
        width: 24px;

        .label {
          top: 32px !important;
        }

        &:focus::before {
          height: 32px;
          left: -5px;
          top: -5px;
          width: 32px;
        }
      }

      &:not(.current):not(.complete) {
        background-color: $panel-bg-color;
        margin-top: -7px;
        width: 18px;

        &:focus::before {
          height: 25px;
          width: 25px;
        }

      }
    }
  }
}

// Sectional Wizard (used as an alternative to Wizard in the Header)
.section-wizard {
  background-color: $white;
  border-bottom: 1px solid $graphite02;
  padding: 20px 0 0;

  .wizard-header {
    background-color: transparent;

    .tick:not(.complete):not(.current) {
      background-color: $white;
    }
  }
}

// Hide the text from the non-current ticks in small form factors
@include respond-to(phone) {
  .wizard-header {
    .tick:not(.current) {
      .label {
        visibility: hidden;
      }
    }
  }
}


//RTL Styles
html[dir='rtl'] {
  .wizard-header {
    .completed-range {
      left: auto;
      right: 0;
    }

    .tick {
      margin-left: inherit;
      margin-right: -4px;

      // Border for incomplete or non-current ticks
      &::after {
        left: auto;
        right: 0;
      }

      // Default Placement for Focus State
      &::before {
        left: auto;
        right: $wizard-tick-size / 2;
      }

      &:focus::before {
        left: auto;
        right: -.5em;
      }

      &.current,
      &.complete {
        &::after {
          left: auto;
          right: $wizard-tick-border-width;
        }
      }
    }
  }

  // Toolbar with wizard for some patterns
  .wizard-toolbar {
    .wizard {
      float: left;
      padding-left: 30px;
      padding-right: inherit;

      .label {
        padding-left: inherit;
        padding-right: 2.5px;
      }
    }
  }
}
