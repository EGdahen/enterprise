0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', 'pg-native' ]
2 info using npm@1.4.9
3 info using node@v0.10.28
4 verbose node symlink /usr/local/bin/node
5 warn package.json webdriverjs-selenium-bundle@0.0.2 No repository field.
6 verbose readDependencies using package.json deps
7 verbose cache add [ 'pg-native@^1.8.0', null ]
8 verbose cache add name=undefined spec="pg-native@^1.8.0" args=["pg-native@^1.8.0",null]
9 verbose parsed url { protocol: null,
9 verbose parsed url   slashes: null,
9 verbose parsed url   auth: null,
9 verbose parsed url   host: null,
9 verbose parsed url   port: null,
9 verbose parsed url   hostname: null,
9 verbose parsed url   hash: null,
9 verbose parsed url   search: null,
9 verbose parsed url   query: null,
9 verbose parsed url   pathname: 'pg-native@^1.8.0',
9 verbose parsed url   path: 'pg-native@^1.8.0',
9 verbose parsed url   href: 'pg-native@^1.8.0' }
10 verbose cache add name="pg-native" spec="^1.8.0" args=["pg-native","^1.8.0"]
11 verbose parsed url { protocol: null,
11 verbose parsed url   slashes: null,
11 verbose parsed url   auth: null,
11 verbose parsed url   host: null,
11 verbose parsed url   port: null,
11 verbose parsed url   hostname: null,
11 verbose parsed url   hash: null,
11 verbose parsed url   search: null,
11 verbose parsed url   query: null,
11 verbose parsed url   pathname: '^1.8.0',
11 verbose parsed url   path: '^1.8.0',
11 verbose parsed url   href: '^1.8.0' }
12 verbose addNamed [ 'pg-native', '^1.8.0' ]
13 verbose addNamed [ null, '>=1.8.0-0 <2.0.0-0' ]
14 silly lockFile 6c0ab8f5-pg-native-1-8-0 pg-native@^1.8.0
15 verbose lock pg-native@^1.8.0 /Users/arobinson/.npm/6c0ab8f5-pg-native-1-8-0.lock
16 silly addNameRange { name: 'pg-native',
16 silly addNameRange   range: '>=1.8.0-0 <2.0.0-0',
16 silly addNameRange   hasData: false }
17 verbose url raw pg-native
18 verbose url resolving [ 'https://registry.npmjs.org/', './pg-native' ]
19 verbose url resolved https://registry.npmjs.org/pg-native
20 info trying registry request attempt 1 at 15:34:14
21 verbose etag "CIM6YAN4YGWMHH4W5AV94Q5DJ"
22 http GET https://registry.npmjs.org/pg-native
23 http 304 https://registry.npmjs.org/pg-native
24 silly registry.get cb [ 304,
24 silly registry.get   { date: 'Fri, 06 Feb 2015 20:34:15 GMT',
24 silly registry.get     server: 'Apache',
24 silly registry.get     via: '1.1 varnish',
24 silly registry.get     'last-modified': 'Fri, 06 Feb 2015 20:34:15 GMT',
24 silly registry.get     'cache-control': 'max-age=60',
24 silly registry.get     etag: '"CIM6YAN4YGWMHH4W5AV94Q5DJ"',
24 silly registry.get     age: '58',
24 silly registry.get     'x-served-by': 'cache-jfk1030-JFK',
24 silly registry.get     'x-cache': 'HIT',
24 silly registry.get     'x-cache-hits': '1',
24 silly registry.get     'x-timer': 'S1423254855.199308,VS0,VE0',
24 silly registry.get     vary: 'Accept',
24 silly registry.get     'content-length': '0',
24 silly registry.get     'keep-alive': 'timeout=10, max=50',
24 silly registry.get     connection: 'Keep-Alive' } ]
25 verbose etag pg-native from cache
26 silly addNameRange number 2 { name: 'pg-native', range: '>=1.8.0-0 <2.0.0-0', hasData: true }
27 silly addNameRange versions [ 'pg-native',
27 silly addNameRange   [ '0.0.1',
27 silly addNameRange     '0.0.2',
27 silly addNameRange     '0.1.0',
27 silly addNameRange     '0.2.0',
27 silly addNameRange     '0.3.0',
27 silly addNameRange     '0.4.0',
27 silly addNameRange     '0.4.1',
27 silly addNameRange     '0.5.0',
27 silly addNameRange     '0.5.1',
27 silly addNameRange     '0.5.2',
27 silly addNameRange     '1.0.0',
27 silly addNameRange     '1.0.1',
27 silly addNameRange     '1.0.2',
27 silly addNameRange     '1.0.3',
27 silly addNameRange     '1.1.0',
27 silly addNameRange     '1.2.0',
27 silly addNameRange     '1.3.0',
27 silly addNameRange     '1.4.0',
27 silly addNameRange     '1.4.1',
27 silly addNameRange     '1.4.2',
27 silly addNameRange     '1.4.3',
27 silly addNameRange     '1.5.0',
27 silly addNameRange     '1.7.2',
27 silly addNameRange     '1.7.3',
27 silly addNameRange     '1.8.0' ] ]
28 verbose addNamed [ 'pg-native', '1.8.0' ]
29 verbose addNamed [ '1.8.0', '1.8.0' ]
30 silly lockFile d94512f5-pg-native-1-8-0 pg-native@1.8.0
31 verbose lock pg-native@1.8.0 /Users/arobinson/.npm/d94512f5-pg-native-1-8-0.lock
32 silly lockFile d94512f5-pg-native-1-8-0 pg-native@1.8.0
33 silly lockFile d94512f5-pg-native-1-8-0 pg-native@1.8.0
34 silly lockFile 6c0ab8f5-pg-native-1-8-0 pg-native@^1.8.0
35 silly lockFile 6c0ab8f5-pg-native-1-8-0 pg-native@^1.8.0
36 silly resolved [ { name: 'pg-native',
36 silly resolved     version: '1.8.0',
36 silly resolved     description: 'A slightly nicer interface to Postgres over node-libpq',
36 silly resolved     main: 'index.js',
36 silly resolved     scripts: { test: 'mocha' },
36 silly resolved     repository:
36 silly resolved      { type: 'git',
36 silly resolved        url: 'git://github.com/brianc/node-pg-native.git' },
36 silly resolved     keywords: [ 'postgres', 'pg', 'libpq' ],
36 silly resolved     author: { name: 'Brian M. Carlson' },
36 silly resolved     license: 'MIT',
36 silly resolved     bugs: { url: 'https://github.com/brianc/node-pg-native/issues' },
36 silly resolved     homepage: 'https://github.com/brianc/node-pg-native',
36 silly resolved     dependencies:
36 silly resolved      { libpq: '^1.5.0',
36 silly resolved        'pg-types': '1.6.0',
36 silly resolved        'readable-stream': '1.0.31' },
36 silly resolved     devDependencies:
36 silly resolved      { 'generic-pool': '^2.1.1',
36 silly resolved        async: '^0.9.0',
36 silly resolved        'concat-stream': '^1.4.6',
36 silly resolved        lodash: '^2.4.1',
36 silly resolved        mocha: '^1.21.4',
36 silly resolved        okay: '^0.3.0',
36 silly resolved        pg: '^3.4.2',
36 silly resolved        semver: '^4.1.0' },
36 silly resolved     readme: '#node-pg-native\n\n[![Build Status](https://travis-ci.org/brianc/node-pg-native.svg?branch=master)](https://travis-ci.org/brianc/node-pg-native)\n\nHigh performance native bindings between node.js and PostgreSQL via [libpq](https://github.com/brianc/node-libpq) with a simple API.\n\n## install\n\nYou need PostgreSQL client libraries & tools installed. An easy way to check is to type `pg_config`. If `pg_config` is in your path, you should be good to go. If it\'s not in your path you\'ll need to consult operating specific instructions on how to go about getting it there.\n\nSome ways I\'ve done it in the past:\n\n- On OS X: `brew install postgres`\n- On Ubuntu: `apt-get install libpq-dev`\n- On Windows:\n 1. Install Visual Studio C++ (successfully built with Express 2010). Express is free.\n 2. Add your Postgre Installation\'s `bin` folder to the system path (i.e. `C:\\Program Files\\PostgreSQL\\9.3\\bin`).\n 3. Make sure that both `libpq.dll` and `pg_config.exe` are in that folder.\n\nAfterwards `pg_config` should be in your path. Then...\n\n```sh\n$ npm i pg-native\n```\n\n## use\n\n### async\n\n```js\nvar Client = require(\'pg-native\')\n\nvar client = new Client();\nclient.connect(function(err) {\n  if(err) throw err\n\n  //text queries\n  client.query(\'SELECT NOW() AS the_date\', function(err, rows) {\n    if(err) throw err\n\n    console.log(rows[0].the_date) //Tue Sep 16 2014 23:42:39 GMT-0400 (EDT)\n\n    //parameterized statements\n    client.query(\'SELECT $1::text as twitter_handle\', [\'@briancarlson\'], function(err, rows) {\n      if(err) throw err\n\n      console.log(rows[0].twitter_handle) //@briancarlson\n    })\n\n    //prepared statements\n    client.prepare(\'get_twitter\', \'SELECT $1::text as twitter_handle\', 1, function(err) {\n      if(err) throw err\n\n      //execute the prepared, named statement\n      client.execute(\'get_twitter\', [\'@briancarlson\'], function(err, rows) {\n        if(err) throw err\n\n        console.log(rows[0].twitter_handle) //@briancarlson\n\n        //execute the prepared, named statement again\n        client.execute(\'get_twitter\', [\'@realcarrotfacts\'], function(err, rows) {\n          if(err) throw err\n\n          console.log(rows[0].twitter_handle) //@realcarrotfacts\n          \n          client.end(function() {\n            console.log(\'ended\')\n          })\n        })\n      })\n    })\n  })\n})\n\n```\n\n### sync\n\nBecause `pg-native` is bound to [libpq](https://github.com/brianc/node-libpq) it is able to provide _sync_ operations for both connecting and queries. This is a bad idea in _non-blocking systems_ like web servers, but is exteremly convienent in scripts and bootstrapping applications - much the same way `fs.readFileSync` comes in handy.\n\n```js\nvar Client = require(\'pg-native\')\n\nvar client = new Client()\nclient.connectSync()\n\n//text queries\nvar rows = client.querySync(\'SELECT NOW() AS the_date\')\nconsole.log(rows[0].the_date) //Tue Sep 16 2014 23:42:39 GMT-0400 (EDT)\n\n//parameterized queries\nvar rows = client.querySync(\'SELECT $1::text as twitter_handle\', [\'@briancarlson\'])\nconsole.log(rows[0].twitter_handle) //@briancarlson\n\n//prepared statements\nclient.prepareSync(\'get_twitter\', \'SELECT $1::text as twitter_handle\', 1)\n\nvar rows = client.executeSync(\'get_twitter\', [\'@briancarlson\'])\nconsole.log(rows[0].twitter_handle) //@briancarlson\n\nvar rows = client.executeSync(\'get_twitter\', [\'@realcarrotfacts\'])\nconsole.log(rows[0].twitter_handle) //@realcarrotfacts\n```\n\n## api\n\n### constructor\n\n- __`constructor Client()`__\n\nConstructs and returns a new `Client` instance\n\n### async functions\n\n- __`client.connect(<params:string>, callback:function(err:Error))`__\n\nConnect to a PostgreSQL backend server. \n\n__params__ is _optional_ and is in any format accepted by [libpq](http://www.postgresql.org/docs/9.3/static/libpq-connect.html#LIBPQ-CONNSTRING).  The connection string is passed _as is_ to libpq, so any format supported by libpq will be supported here.  Likewise, any format _unsupported_ by libpq will not work.  If no parameters are supplied libpq will use [environment variables](http://www.postgresql.org/docs/9.3/static/libpq-envars.html) to connect.\n\nReturns an `Error` to the `callback` if the connection was unsuccessful.  `callback` is _required_.\n\n##### example\n\n```js\nvar client = new Client()\nclient.connect(function(err) {\n  if(err) throw err\n  \n  console.log(\'connected!\')\n})\n\nvar client2 = new Client()\nclient2.connect(\'postgresql://user:password@host:5432/database?param=value\', function(err) {\n  if(err) throw err\n  \n  console.log(\'connected with connection string!\')\n})\n```\n\n- __`client.query(queryText:string, <values:string[]>, callback:Function(err:Error, rows:Object[]))`__\n\nExecute a query with the text of `queryText` and _optional_ parameters specified in the `values` array. All values are passed to the PostgreSQL backend server and executed as a parameterized statement.  The callback is _required_ and is called with an `Error` object in the event of a query error, otherwise it is passed an array of result objects.  Each element in this array is a dictionary of results with keys for column names and their values as the values for those columns.\n\n##### example\n\n```js\nvar client = new Client()\nclient.connect(function(err) {\n  if (err) throw err\n  \n  client.query(\'SELECT NOW()\', function(err, rows) {\n    if (err) throw err\n    \n    console.log(rows) // [{ "now": "Tue Sep 16 2014 23:42:39 GMT-0400 (EDT)" }]\n    \n    client.query(\'SELECT $1::text as name\', [\'Brian\'], function(err, rows) {\n      if (err) throw err\n      \n      console.log(rows) // [{ "name": "Brian" }]\n      \n      client.end()\n    })\n  })\n})\n```\n\n\n- __`client.prepare(statementName:string, queryText:string, nParams:int, callback:Function(err:Error))`__\n\nPrepares a _named statement_ for later execution.  You _must_ supply the name of the statement via `statementName`, the command to prepare via `queryText` and the number of parameters in `queryText` via `nParams`. Calls the callback with an `Error` if there was an error.\n\n##### example\n\n```js\nvar client = new Client()\nclient.connection(function(err) {\n  if(err) throw err\n  \n  client.prepare(\'prepared_statement\', \'SELECT $1::text as name\', 1, function(err) {\n    if(err) throw err\n    \n    console.log(\'statement prepared\')\n    client.end()\n  })\n  \n})\n```\n\n- __`client.execute(statementName:string, <values:string[]>, callback:Function(err:err, rows:Object[]))`__\n\nExecutes a previously prepared statement on this client with the name of `statementName`, passing it the optional array of query parameters as a `values` array.  The `callback` is mandatory and is called with and `Error` if the execution failed, or with the same array of results as would be passed to the callback of a `client.query` result.\n\n##### example\n\n\n```js\nvar client = new Client()\nclient.connection(function(err) {\n  if(err) throw err\n  \n  client.prepare(\'i_like_beans\', \'SELECT $1::text as beans\', 1, function(err) {\n    if(err) throw err\n    \n    client.execute(\'i_like_beans\', [\'Brak\'], function(err, rows) {\n      if(err) throw err\n      \n      console.log(rows) // [{ "i_like_beans": "Brak" }]\n      client.end()\n    })\n  })\n})\n```\n\n- __`client.end(<callback:Function()>`__\n\nEnds the connection. Calls the _optional_ callback when the connection is terminated.\n\n##### example\n\n```js\nvar client = new Client()\nclient.connect(function(err) {\n  if(err) throw err\n  client.end(function() {\n    console.log(\'client ended\') // client ended\n  })\n})\n```\n\n- __`client.cancel(callback:function(err))`__\n\nCancels the active query on the client. Callback receives an error if there was an error _sending_ the cancel request.\n\n##### example\n```js\nvar client = new Client()\nclient.connectSync()\n//sleep for 100 seconds\nclient.query(\'select pg_sleep(100)\', function(err) {\n  console.log(err) // [Error: ERROR: canceling statement due to user request]\n})\nclient.cancel(function(err) {\n  console.log(\'cancel dispatched\')\n})\n\n```\n\n### sync functions\n\n- __`client.connectSync(params:string)`__\n\nConnect to a PostgreSQL backend server. Params is in any format accepted by [libpq](http://www.postgresql.org/docs/9.3/static/libpq-connect.html#LIBPQ-CONNSTRING).  Throws an `Error` if the connection was unsuccessful.\n\n- __`client.querySync(queryText:string, <values:string[]>) -> results:Object[]`__\n\nExecutes a query with a text of `queryText` and optional parameters as `values`. Uses a parameterized query if `values` are supplied.  Throws an `Error` if the query fails, otherwise returns an array of results.\n\n- __`client.prepareSync(statementName:string, queryText:string, nParams:int)`__\n\nPrepares a name statement with name of `statementName` and a query text of `queryText`. You must specify the number of params in the query with the `nParams` argument.  Throws an `Error` if the statement is un-preparable, otherwise returns an array of results.\n\n- __`client.executeSync(statementName:string, <values:string[]>) -> results:Object[]`__\n\nExecutes a previously prepared statement on this client with the name of `statementName`, passing it the optional array of query paramters as a `values` array.  Throws an `Error` if the execution fails, otherwas returns an array of results.\n\n## testing\n\n```sh\n$ npm test\n```\n\nTo run the tests you need a PostgreSQL backend reachable by typing `psql` with no connection parameters in your terminal. The tests use [environment variables](http://www.postgresql.org/docs/9.3/static/libpq-envars.html) to connect to the backend. \n\nAn example of supplying a specific host the tests:\n\n```sh\n$ PGHOST=blabla.mydatabasehost.com npm test\n```\n\n\n## license\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Brian M. Carlson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n',
36 silly resolved     readmeFilename: 'README.md',
36 silly resolved     _id: 'pg-native@1.8.0',
36 silly resolved     _shasum: 'dfbc8b80ec121e4eae854eac3a4b5628694ee30b',
36 silly resolved     _from: 'pg-native@^1.8.0',
36 silly resolved     _resolved: 'https://registry.npmjs.org/pg-native/-/pg-native-1.8.0.tgz' } ]
37 info install pg-native@1.8.0 into /Users/arobinson/Documents/Projects/controls
38 info installOne pg-native@1.8.0
39 info /Users/arobinson/Documents/Projects/controls/node_modules/pg-native unbuild
40 verbose tar unpack /Users/arobinson/.npm/pg-native/1.8.0/package.tgz
41 silly lockFile d5923f16--controls-node-modules-pg-native tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native
42 verbose lock tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native /Users/arobinson/.npm/d5923f16--controls-node-modules-pg-native.lock
43 silly lockFile d6a7ce22--npm-pg-native-1-8-0-package-tgz tar:///Users/arobinson/.npm/pg-native/1.8.0/package.tgz
44 verbose lock tar:///Users/arobinson/.npm/pg-native/1.8.0/package.tgz /Users/arobinson/.npm/d6a7ce22--npm-pg-native-1-8-0-package-tgz.lock
45 silly gunzTarPerm modes [ '755', '644' ]
46 silly gunzTarPerm extractEntry package.json
47 silly gunzTarPerm extractEntry .npmignore
48 silly gunzTarPerm extractEntry README.md
49 silly gunzTarPerm extractEntry index.js
50 silly gunzTarPerm extractEntry bench/index.js
51 silly gunzTarPerm extractEntry bench/leaks.js
52 silly gunzTarPerm extractEntry .travis.yml
53 silly gunzTarPerm extractEntry Makefile
54 silly gunzTarPerm extractEntry lib/copy-stream.js
55 silly gunzTarPerm extractEntry test/array-mode.js
56 silly gunzTarPerm extractEntry test/custom-types.js
57 silly gunzTarPerm extractEntry test/domains.js
58 silly gunzTarPerm extractEntry test/huge-query.js
59 silly gunzTarPerm extractEntry test/copy-to.js
60 silly gunzTarPerm extractEntry test/async-workflow.js
61 silly gunzTarPerm extractEntry test/many-connections.js
62 silly gunzTarPerm extractEntry test/many-errors.js
63 silly gunzTarPerm extractEntry test/query-sync.js
64 silly gunzTarPerm extractEntry test/multiple-queries.js
65 silly gunzTarPerm extractEntry test/copy-from.js
66 silly gunzTarPerm extractEntry test/notify.js
67 silly gunzTarPerm extractEntry test/connection.js
68 silly gunzTarPerm extractEntry test/prepare.js
69 silly gunzTarPerm extractEntry test/cancel.js
70 silly gunzTarPerm extractEntry test/query-async.js
71 silly gunzTarPerm extractEntry test/index.js
72 silly gunzTarPerm extractEntry test/version.js
73 silly gunzTarPerm extractEntry test/load.js
74 silly gunzTarPerm extractEntry test/mocha.opts
75 silly lockFile d5923f16--controls-node-modules-pg-native tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native
76 silly lockFile d5923f16--controls-node-modules-pg-native tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native
77 silly lockFile d6a7ce22--npm-pg-native-1-8-0-package-tgz tar:///Users/arobinson/.npm/pg-native/1.8.0/package.tgz
78 silly lockFile d6a7ce22--npm-pg-native-1-8-0-package-tgz tar:///Users/arobinson/.npm/pg-native/1.8.0/package.tgz
79 info preinstall pg-native@1.8.0
80 verbose readDependencies using package.json deps
81 verbose readDependencies using package.json deps
82 verbose cache add [ 'libpq@^1.5.0', null ]
83 verbose cache add name=undefined spec="libpq@^1.5.0" args=["libpq@^1.5.0",null]
84 verbose parsed url { protocol: null,
84 verbose parsed url   slashes: null,
84 verbose parsed url   auth: null,
84 verbose parsed url   host: null,
84 verbose parsed url   port: null,
84 verbose parsed url   hostname: null,
84 verbose parsed url   hash: null,
84 verbose parsed url   search: null,
84 verbose parsed url   query: null,
84 verbose parsed url   pathname: 'libpq@^1.5.0',
84 verbose parsed url   path: 'libpq@^1.5.0',
84 verbose parsed url   href: 'libpq@^1.5.0' }
85 verbose cache add name="libpq" spec="^1.5.0" args=["libpq","^1.5.0"]
86 verbose parsed url { protocol: null,
86 verbose parsed url   slashes: null,
86 verbose parsed url   auth: null,
86 verbose parsed url   host: null,
86 verbose parsed url   port: null,
86 verbose parsed url   hostname: null,
86 verbose parsed url   hash: null,
86 verbose parsed url   search: null,
86 verbose parsed url   query: null,
86 verbose parsed url   pathname: '^1.5.0',
86 verbose parsed url   path: '^1.5.0',
86 verbose parsed url   href: '^1.5.0' }
87 verbose addNamed [ 'libpq', '^1.5.0' ]
88 verbose addNamed [ null, '>=1.5.0-0 <2.0.0-0' ]
89 silly lockFile 89c9c90e-libpq-1-5-0 libpq@^1.5.0
90 verbose lock libpq@^1.5.0 /Users/arobinson/.npm/89c9c90e-libpq-1-5-0.lock
91 verbose cache add [ 'pg-types@1.6.0', null ]
92 verbose cache add name=undefined spec="pg-types@1.6.0" args=["pg-types@1.6.0",null]
93 verbose parsed url { protocol: null,
93 verbose parsed url   slashes: null,
93 verbose parsed url   auth: null,
93 verbose parsed url   host: null,
93 verbose parsed url   port: null,
93 verbose parsed url   hostname: null,
93 verbose parsed url   hash: null,
93 verbose parsed url   search: null,
93 verbose parsed url   query: null,
93 verbose parsed url   pathname: 'pg-types@1.6.0',
93 verbose parsed url   path: 'pg-types@1.6.0',
93 verbose parsed url   href: 'pg-types@1.6.0' }
94 verbose cache add name="pg-types" spec="1.6.0" args=["pg-types","1.6.0"]
95 verbose parsed url { protocol: null,
95 verbose parsed url   slashes: null,
95 verbose parsed url   auth: null,
95 verbose parsed url   host: null,
95 verbose parsed url   port: null,
95 verbose parsed url   hostname: null,
95 verbose parsed url   hash: null,
95 verbose parsed url   search: null,
95 verbose parsed url   query: null,
95 verbose parsed url   pathname: '1.6.0',
95 verbose parsed url   path: '1.6.0',
95 verbose parsed url   href: '1.6.0' }
96 verbose addNamed [ 'pg-types', '1.6.0' ]
97 verbose addNamed [ '1.6.0', '1.6.0' ]
98 silly lockFile 5da5f546-pg-types-1-6-0 pg-types@1.6.0
99 verbose lock pg-types@1.6.0 /Users/arobinson/.npm/5da5f546-pg-types-1-6-0.lock
100 verbose cache add [ 'readable-stream@1.0.31', null ]
101 verbose cache add name=undefined spec="readable-stream@1.0.31" args=["readable-stream@1.0.31",null]
102 verbose parsed url { protocol: null,
102 verbose parsed url   slashes: null,
102 verbose parsed url   auth: null,
102 verbose parsed url   host: null,
102 verbose parsed url   port: null,
102 verbose parsed url   hostname: null,
102 verbose parsed url   hash: null,
102 verbose parsed url   search: null,
102 verbose parsed url   query: null,
102 verbose parsed url   pathname: 'readable-stream@1.0.31',
102 verbose parsed url   path: 'readable-stream@1.0.31',
102 verbose parsed url   href: 'readable-stream@1.0.31' }
103 verbose cache add name="readable-stream" spec="1.0.31" args=["readable-stream","1.0.31"]
104 verbose parsed url { protocol: null,
104 verbose parsed url   slashes: null,
104 verbose parsed url   auth: null,
104 verbose parsed url   host: null,
104 verbose parsed url   port: null,
104 verbose parsed url   hostname: null,
104 verbose parsed url   hash: null,
104 verbose parsed url   search: null,
104 verbose parsed url   query: null,
104 verbose parsed url   pathname: '1.0.31',
104 verbose parsed url   path: '1.0.31',
104 verbose parsed url   href: '1.0.31' }
105 verbose addNamed [ 'readable-stream', '1.0.31' ]
106 verbose addNamed [ '1.0.31', '1.0.31' ]
107 silly lockFile 5c814a69-readable-stream-1-0-31 readable-stream@1.0.31
108 verbose lock readable-stream@1.0.31 /Users/arobinson/.npm/5c814a69-readable-stream-1-0-31.lock
109 silly addNameRange { name: 'libpq', range: '>=1.5.0-0 <2.0.0-0', hasData: false }
110 verbose url raw libpq
111 verbose url resolving [ 'https://registry.npmjs.org/', './libpq' ]
112 verbose url resolved https://registry.npmjs.org/libpq
113 info trying registry request attempt 1 at 15:34:15
114 verbose etag "AN2DEHZNQVHGUTDJ09RKXB1EQ"
115 http GET https://registry.npmjs.org/libpq
116 verbose url raw pg-types
117 verbose url resolving [ 'https://registry.npmjs.org/', './pg-types' ]
118 verbose url resolved https://registry.npmjs.org/pg-types
119 info trying registry request attempt 1 at 15:34:15
120 verbose etag "3A8J9YG9DIRUKCAG9SDH7BZU8"
121 http GET https://registry.npmjs.org/pg-types
122 verbose url raw readable-stream
123 verbose url resolving [ 'https://registry.npmjs.org/', './readable-stream' ]
124 verbose url resolved https://registry.npmjs.org/readable-stream
125 info trying registry request attempt 1 at 15:34:15
126 verbose etag "5EIEZURAU6SU61INLWGE66IW9"
127 http GET https://registry.npmjs.org/readable-stream
128 http 304 https://registry.npmjs.org/pg-types
129 silly registry.get cb [ 304,
129 silly registry.get   { date: 'Fri, 06 Feb 2015 20:34:15 GMT',
129 silly registry.get     server: 'Apache',
129 silly registry.get     via: '1.1 varnish',
129 silly registry.get     'last-modified': 'Fri, 06 Feb 2015 20:11:11 GMT',
129 silly registry.get     'cache-control': 'max-age=60',
129 silly registry.get     etag: '"3A8J9YG9DIRUKCAG9SDH7BZU8"',
129 silly registry.get     age: '57',
129 silly registry.get     'x-served-by': 'cache-jfk1028-JFK',
129 silly registry.get     'x-cache': 'HIT',
129 silly registry.get     'x-cache-hits': '18',
129 silly registry.get     'x-timer': 'S1423254855.462423,VS0,VE0',
129 silly registry.get     vary: 'Accept',
129 silly registry.get     'content-length': '0',
129 silly registry.get     'keep-alive': 'timeout=10, max=50',
129 silly registry.get     connection: 'Keep-Alive' } ]
130 verbose etag pg-types from cache
131 http 304 https://registry.npmjs.org/libpq
132 silly registry.get cb [ 304,
132 silly registry.get   { date: 'Fri, 06 Feb 2015 20:34:15 GMT',
132 silly registry.get     server: 'Apache',
132 silly registry.get     via: '1.1 varnish',
132 silly registry.get     'last-modified': 'Fri, 06 Feb 2015 20:34:15 GMT',
132 silly registry.get     'cache-control': 'max-age=60',
132 silly registry.get     etag: '"AN2DEHZNQVHGUTDJ09RKXB1EQ"',
132 silly registry.get     age: '57',
132 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
132 silly registry.get     'x-cache': 'HIT',
132 silly registry.get     'x-cache-hits': '1',
132 silly registry.get     'x-timer': 'S1423254855.464515,VS0,VE0',
132 silly registry.get     vary: 'Accept',
132 silly registry.get     'content-length': '0',
132 silly registry.get     'keep-alive': 'timeout=10, max=50',
132 silly registry.get     connection: 'Keep-Alive' } ]
133 verbose etag libpq from cache
134 http 304 https://registry.npmjs.org/readable-stream
135 silly registry.get cb [ 304,
135 silly registry.get   { date: 'Fri, 06 Feb 2015 20:34:15 GMT',
135 silly registry.get     server: 'Apache',
135 silly registry.get     via: '1.1 varnish',
135 silly registry.get     'last-modified': 'Fri, 06 Feb 2015 20:33:43 GMT',
135 silly registry.get     'cache-control': 'max-age=60',
135 silly registry.get     etag: '"5EIEZURAU6SU61INLWGE66IW9"',
135 silly registry.get     age: '40',
135 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
135 silly registry.get     'x-cache': 'HIT',
135 silly registry.get     'x-cache-hits': '10',
135 silly registry.get     'x-timer': 'S1423254855.465142,VS0,VE0',
135 silly registry.get     vary: 'Accept',
135 silly registry.get     'content-length': '0',
135 silly registry.get     'keep-alive': 'timeout=10, max=50',
135 silly registry.get     connection: 'Keep-Alive' } ]
136 verbose etag readable-stream from cache
137 silly lockFile 5da5f546-pg-types-1-6-0 pg-types@1.6.0
138 silly lockFile 5da5f546-pg-types-1-6-0 pg-types@1.6.0
139 silly addNameRange number 2 { name: 'libpq', range: '>=1.5.0-0 <2.0.0-0', hasData: true }
140 silly addNameRange versions [ 'libpq',
140 silly addNameRange   [ '0.2.0',
140 silly addNameRange     '0.2.1',
140 silly addNameRange     '0.2.2',
140 silly addNameRange     '0.2.3',
140 silly addNameRange     '0.2.4',
140 silly addNameRange     '0.2.5',
140 silly addNameRange     '0.3.0',
140 silly addNameRange     '0.4.0',
140 silly addNameRange     '0.4.1',
140 silly addNameRange     '0.5.0',
140 silly addNameRange     '0.5.1',
140 silly addNameRange     '0.5.2',
140 silly addNameRange     '0.5.3',
140 silly addNameRange     '1.0.0',
140 silly addNameRange     '1.0.1',
140 silly addNameRange     '1.1.0',
140 silly addNameRange     '1.2.0',
140 silly addNameRange     '1.2.1',
140 silly addNameRange     '1.3.0',
140 silly addNameRange     '1.3.1',
140 silly addNameRange     '1.4.0',
140 silly addNameRange     '1.4.1',
140 silly addNameRange     '1.4.2',
140 silly addNameRange     '1.5.1' ] ]
141 verbose addNamed [ 'libpq', '1.5.1' ]
142 verbose addNamed [ '1.5.1', '1.5.1' ]
143 silly lockFile f4661499-libpq-1-5-1 libpq@1.5.1
144 verbose lock libpq@1.5.1 /Users/arobinson/.npm/f4661499-libpq-1-5-1.lock
145 silly lockFile 5c814a69-readable-stream-1-0-31 readable-stream@1.0.31
146 silly lockFile 5c814a69-readable-stream-1-0-31 readable-stream@1.0.31
147 silly lockFile f4661499-libpq-1-5-1 libpq@1.5.1
148 silly lockFile f4661499-libpq-1-5-1 libpq@1.5.1
149 silly lockFile 89c9c90e-libpq-1-5-0 libpq@^1.5.0
150 silly lockFile 89c9c90e-libpq-1-5-0 libpq@^1.5.0
151 silly resolved [ { name: 'pg-types',
151 silly resolved     version: '1.6.0',
151 silly resolved     description: 'Query result type converters for node-postgres',
151 silly resolved     main: 'index.js',
151 silly resolved     scripts: { test: 'mocha' },
151 silly resolved     repository:
151 silly resolved      { type: 'git',
151 silly resolved        url: 'git://github.com/brianc/node-pg-types.git' },
151 silly resolved     keywords: [ 'postgres', 'PostgreSQL', 'pg' ],
151 silly resolved     author: { name: 'Brian M. Carlson' },
151 silly resolved     license: 'MIT',
151 silly resolved     bugs: { url: 'https://github.com/brianc/node-pg-types/issues' },
151 silly resolved     homepage: 'https://github.com/brianc/node-pg-types',
151 silly resolved     devDependencies: { mocha: '^1.18.0' },
151 silly resolved     readme: '# pg-types\n\nThis is the code that turns all the raw text from postgres into JavaScript types for [node-postgres](https://github.com/brianc/node-postgres.git)\n\n## use\n\nThis module is consumed and exported from the root `pg` object of node-postgres.  To access it, do the following:\n\n```js\nvar types = require(\'pg\').types\n```\n\nGenerally what you\'ll want to do is override how a specific data-type is parsed and turned into a JavaScript type.  By default the PostgreSQL backend server returns everything as strings.  Every data type corresponds to a unique `OID` within the server, and these `OIDs` are sent back with the query response.  So, you need to match a particluar `OID` to a function you\'d like to use to take the raw text input and produce a valid JavaScript object as a result.\n\nLet\'s do something I commonly like to do on projects: return 64-bit integers `(int8)` as JavaScript integers.  Because JavaScript doesn\'t have support for 64-bit integers node-postgres cannot confidently parse `int8` data type results as numbers because if you have a _huge_ number it will overflow and the result you\'d get back from node-postgres would not be the result in the datbase.  That would be a __very bad thing__ so node-postgres just returns `int8` results as strings and leaves the parsing up to you.  Let\'s say that you know you don\'t and wont ever have numbers greater than `int4` in your database, but you\'re tired of recieving results from the `COUNT(*)` function as strings (because that function returns `int8`).  You would do this:\n\n```js\nvar types = require(\'pg\').types\ntypes.setTypeParser(20, function(val) {\n  //remember: all values returned from the server are either NULL or a string\n  return val === null ? null : parseInt(val)\n})\n```\n\n__boom__: now you get numbers instead of strings.\n\nJust as another example -- not saying this is a good idea -- let\'s say you want to return all dates from your database as [moment](http://momentjs.com/docs/) objects.  Okay, do this:\n\n```js\nvar types = require(\'pg\').types\nvar moment = require(\'moment\')\nvar TIMESTAMPTZ_OID = 1114\nvar TIMESTAMP_OID = 1184\nvar parseFn = function(val) {\n   return val === null ? null : moment(val)\n}\ntypes.setTypeParser(TIMESTAMPTZ_OID, parseFn)\ntypes.setTypeParser(TIMESTAMP_OID, parseFn)\n```\n_note: I\'ve never done that with my dates, and I\'m not 100% sure moment can parse all the date strings returned from postgres.  It\'s just an example!_\n\nIf you\'re thinking "gee, this seems pretty handy, but how can I get a list of all the OIDs in the database and what the correspond to?!?!?!" worry not:\n\n```bash\n$ psql -c "select oid, typname from pg_type where typtype = \'b\' order by oid"\n```\n\n:smile:\n\n## license\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Brian M. Carlson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n',
151 silly resolved     readmeFilename: 'README.md',
151 silly resolved     _id: 'pg-types@1.6.0',
151 silly resolved     _shasum: '3872a0f199143025497f4ee2a65fdaf00d7ea8b3',
151 silly resolved     _from: 'pg-types@1.6.0',
151 silly resolved     _resolved: 'https://registry.npmjs.org/pg-types/-/pg-types-1.6.0.tgz' },
151 silly resolved   { name: 'readable-stream',
151 silly resolved     version: '1.0.31',
151 silly resolved     description: 'Streams2, a user-land copy of the stream library from Node.js v0.10.x',
151 silly resolved     main: 'readable.js',
151 silly resolved     dependencies:
151 silly resolved      { 'core-util-is': '~1.0.0',
151 silly resolved        isarray: '0.0.1',
151 silly resolved        string_decoder: '~0.10.x',
151 silly resolved        inherits: '~2.0.1' },
151 silly resolved     devDependencies: { tap: '~0.2.6' },
151 silly resolved     scripts: { test: 'tap test/simple/*.js' },
151 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/readable-stream' },
151 silly resolved     keywords: [ 'readable', 'stream', 'pipe' ],
151 silly resolved     browser: { util: false },
151 silly resolved     author:
151 silly resolved      { name: 'Isaac Z. Schlueter',
151 silly resolved        email: 'i@izs.me',
151 silly resolved        url: 'http://blog.izs.me/' },
151 silly resolved     license: 'MIT',
151 silly resolved     readme: '# readable-stream\n\n***Node-core streams for userland***\n\n[![NPM](https://nodei.co/npm/readable-stream.png?downloads=true)](https://nodei.co/npm/readable-stream/)\n[![NPM](https://nodei.co/npm-dl/readable-stream.png)](https://nodei.co/npm/readable-stream/)\n\nThis package is a mirror of the Streams2 and Streams3 implementations in Node-core.\n\nIf you want to guarantee a stable streams base, regardless of what version of Node you, or the users of your libraries are using, use **readable-stream** *only* and avoid the *"stream"* module in Node-core.\n\n**readable-stream** comes in two major versions, v1.0.x and v1.1.x. The former tracks the Streams2 implementation in Node 0.10, including bug-fixes and minor improvements as they are added. The latter tracks Streams3 as it develops in Node 0.11; we will likely see a v1.2.x branch for Node 0.12.\n\n**readable-stream** uses proper patch-level versioning so if you pin to `"~1.0.0"` you’ll get the latest Node 0.10 Streams2 implementation, including any fixes and minor non-breaking improvements. The patch-level versions of 1.0.x and 1.1.x should mirror the patch-level versions of Node-core releases. You should prefer the **1.0.x** releases for now and when you’re ready to start using Streams3, pin to `"~1.1.0"`\n\n',
151 silly resolved     readmeFilename: 'README.md',
151 silly resolved     bugs: { url: 'https://github.com/isaacs/readable-stream/issues' },
151 silly resolved     homepage: 'https://github.com/isaacs/readable-stream',
151 silly resolved     _id: 'readable-stream@1.0.31',
151 silly resolved     _shasum: '8f2502e0bc9e3b0da1b94520aabb4e2603ecafae',
151 silly resolved     _from: 'readable-stream@1.0.31',
151 silly resolved     _resolved: 'https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.31.tgz' },
151 silly resolved   { name: 'libpq',
151 silly resolved     version: '1.5.1',
151 silly resolved     description: 'Low-level native bindings to PostgreSQL libpq',
151 silly resolved     main: 'index.js',
151 silly resolved     keywords: [ 'postgres', 'libpq' ],
151 silly resolved     repository: { type: 'git', url: 'git://github.com/brianc/node-libpq.git' },
151 silly resolved     scripts:
151 silly resolved      { test: 'node-gyp rebuild && node_modules/.bin/mocha',
151 silly resolved        install: 'node-gyp rebuild' },
151 silly resolved     author: { name: 'Brian M. Carlson' },
151 silly resolved     license: 'MIT',
151 silly resolved     dependencies: { nan: '1.5.0', bindings: '1.2.1' },
151 silly resolved     devDependencies:
151 silly resolved      { async: '^0.9.0',
151 silly resolved        lodash: '^2.4.1',
151 silly resolved        mocha: '^1.21.4',
151 silly resolved        okay: '^0.3.0' },
151 silly resolved     gypfile: true,
151 silly resolved     readme: '# node-libpq\n\n[![Build Status](https://travis-ci.org/brianc/node-libpq.svg?branch=master)](https://travis-ci.org/brianc/node-libpq)\n\nNode native bindings to the PostgreSQL [libpq](http://www.postgresql.org/docs/9.3/interactive/libpq.html) C client library.  This module attempts to mirror _as closely as possible_ the C API provided by libpq and provides the absolute minimum level of abstraction.  It is intended to be extremely low level and allow you the same access as you would have to libpq directly from C, except in node.js! The obvious trade-off for being "close to the metal" is having to use a very "c style" API in JavaScript.\n\nIf you have a good understanding of libpq or used it before hopefully the methods within node-libpq will be familiar; otherwise, you should probably spend some time reading [the official libpq C library documentation](http://www.postgresql.org/docs/9.3/interactive/libpq.html) to become a bit familiar. Referencing the libpq documentation directly should also provide you with more insight into the methods here. I will do my best to explain any differences from the C code for each method.\n\nI am also building some [higher level abstractions](https://github.com/brianc/node-pg-native) to eventually replace the `pg.native` portion of node-postgres.  They should help as reference material.\n\nThis module relies heavily on [nan](https://github.com/rvagg/nan) and wouldn\'t really be possible without it. Mucho thanks to the node-nan team.\n\n## install\n\nYou need libpq installed & the `pg_config` program should be in your path.  You also need [node-gyp](https://github.com/TooTallNate/node-gyp) installed.\n\n```bash\n$ npm install libpq\n```\n\n## use\n\n```js\nvar Libpq = require(\'libpq\');\nvar pq = new Libpq();\n```\n\n## API\n\n### connection functions\n\nLibpq provides a few different connection functions, some of which are "not preferred" anymore.  I\'ve opted to simplify this interface a bit into a single __async__ and single __sync__ connnection function.  The function accepts an  connection string formatted as outlined [in this documentation in section 31.1.1](http://www.postgresql.org/docs/9.3/static/libpq-connect.html). If the parameters are not supplied, libpq will automatically use environment variables, a pgpass file, and other options.  Consult the libpq documentation for a better rundown of all the ways it tries to determine your connection parameters.\n\nI personally __always__ connect with environment variables and skip supplying the optional `connectionParams`.  Easier, more 12 factor app-ish, and you never risk hard coding any passwords. YMMV. :smile:\n\n##### `pq.connect([connectionParams:string], callback:function)`\n\nAsyncronously attempts to connect to the postgres server.\n\n- `connectionParams` is an optional string\n- `callback` is mandatory. It is called when the connection has successfully been established.\n\n__async__ Connects to a PostgreSQL backend server process.\n\nThis function actually calls the `PQconnectdb` blocking connection method in a background thread within node\'s internal thread-pool. There is a way to do non-blocking network I/O for some of the connecting with libpq directly, but it still blocks when your local file system looking for config files, SSL certificates, .pgpass file, and doing possible dns resolution.  Because of this, the best way to get _fully_ non-blocking is to juse use `libuv_queue_work` and let node do it\'s magic and so that\'s what I do.  This function _does not block_.\n\n##### `pq.connectSync([connectionParams:string])`\n\nAttempts to connect to a PostgreSQL server. __BLOCKS__ until it either succeedes, or fails.  If it fails it will throw an exception.\n\n- `connectionParams` is an optional string\n\n##### `pq.finish()`\n\nDisconnects from the backend and cleans up all memory used by the libpq connection.\n\n### Connection Status Functions\n\n##### `pq.errorMessage():string`\n\nRetrieves the last error message from the connection.  This is intended to be used after most functions which return an error code to get more detailed error information about the connection.  You can also check this _before_ issuing queries to see if your connection has been lost.\n\n##### `pq.socket():int`\n\nReturns an int representing the file descriptor for the socket used internally by the connection\n\n### Sync Command Execution Functions\n\n##### `pq.exec(commandText:string)`\n\n__sync__ sends a command to the backend and blocks until a result is received.\n\n- `commandText` is a required string of the query.\n\n##### `pq.execParams(commandText:string, parameters:array[string])`\n\n__snyc__ sends a command and parameters to the backend and blocks until a result is received.\n\n- `commandText` is a required string of the query.\n- `parameters` is a required array of string values corresponding to each parameter in the commandText.\n\n##### `pq.prepare(statementName:string, commandText:string, nParams:int)`\n__sync__ sends a named statement to the server to be prepared for later execution. blocks until a result from the prepare operation is received.\n\n- `statementName` is a required string of name of the statement to prepare.\n- `commandText` is a required string of the query.\n- `nParams` is a count of the number of parameters in the commandText.\n\n##### `pq.execPrepared(statementName:string, parameters:array[string])`\n__sync__ sends a command to the server to execute a previously prepared statement. blocks until the results are returned.\n\n- `statementName` is a required string of the name of the prepared statement.\n- `parameters` are the parameters to pass to the prepared statement.\n\n### Async Command Execution Functions\n\nIn libpq the async command execution functions _only_ dispatch a request to the backend to run a query.  They do not start result fetching on their own.  Because libpq is a C api there is a somewhat complicated "dance" to retrieve the result information in a non-blocking way.  node-libpq attempts to do as little as possible to abstract over this; therefore, the following functions are only part of the story.  For a complete tutorial on how to dispatch & retrieve results from libpq in an async way you can [view the complete approach here](https://github.com/brianc/node-pg-native/blob/master/index.js#L105)\n\n##### `pq.sendQuery(commandText:string):boolean`\n__async__ sends a query to the server to be processed.\n\n- `commandText` is a required string containing the query text.\n\nReturns `true` if the command was sent succesfully or `false` if it failed to send.\n\n##### `pq.sendQueryParams(commandText:string, parameters:array[string]):boolean`\n__async__ sends a query and to the server to be processed.\n\n- `commandText` is a required string containing the query text.\n- `parameters` is an array of parameters as strings used in the parameterized query.\n\nReturns `true` if the command was sent succesfully or `false` if it failed to send.\n\n##### `pq.sendPrepare(statementName:string, commandText:string, nParams:int):boolean`\n__async__ sends a request to the backend to prepare a named statement with the given name.\n\n- `statementName` is a required string of name of the statement to prepare.\n- `commandText` is a required string of the query.\n- `nParams` is a count of the number of parameters in the commandText.\n\nReturns `true` if the command was sent succesfully or `false` if it failed to send.\n\n##### `pq.sendQueryPrepared(statementName:string, parameters:array[string]):boolean`\n__async__ sends a request to execute a previously prepared statement.\n\n- `statementName` is a required string of the name of the prepared statement.\n- `parameters` are the parameters to pass to the prepared statement.\n\n##### `pq.getResult():boolean`\nParses received data from the server into a `PGresult` struct and sets a pointer internally to the connection object to this result.  __warning__: this function will __block__ if libpq is waiting on async results to be returned from the server.  Call `pq.isBusy()` to determine if this command will block.\n\nReturns `true` if libpq was able to read buffered data & parse a result object.  Returns `false` if there are no results waiting to be parsed.  Generally doing async style queries you\'ll call this repeadedly until it returns false and then use the result accessor methods to pull results out of the current result set.\n\n### Result accessor functions\n\nAfter a command is run in either sync or async mode & the results have been received, node-libpq stores the results internally and provides you access to the results via the standard libpq methods.  The difference here is libpq will return a pointer to a PGresult structure which you access via libpq functions, but node-libpq stores the most recent result within itself and passes the opaque PGresult structure to the libpq methods.  This is to avoid passing around a whole bunch of pointers to unmanaged memory and keeps the burden of properly allocating and freeing memory within node-libpq.\n\n##### `pq.resultStatus():string`\n\nReturns either `PGRES_COMMAND_OK` or `PGRES_FATAL_ERROR` depending on the status of the last executed command.\n\n##### `pq.resultErrorMessage():string`\n\nRetrieves the error message from the result.  This will return `null` if the result does not have an error.\n\n##### `pq.resultErrorFields():object`\n\nRetrieves detailed error information from the current result object. Very similar to `PQresultErrorField()` except instead of passing a fieldCode and retrieving a single field, retrieves all fields from the error at once on a single object.  The object returned is a simple hash, _not_ an instance of an error object.  Example: if you wanted to access `PG_DIAG_MESSAGE_DETAIL` you would do the following:\n\n```js\nconsole.log(pq.errorFields().messageDetail)\n```\n\n##### `pq.clear()`\n\nManually frees the memory associated with a `PGresult` pointer.  Generally this is called for you, but if you absolutely want to free the pointer yourself, you can.\n\n##### `pq.ntuples():int`\n\nRetrieve the number of tuples (rows) from the result.\n\n##### `pq.nfields():int`\n\nRetrieve the number of fields (columns) from the result.\n\n##### `pq.fname(fieldNumber:int):string`\n\nRetrieve the name of the field (column) at the given offset. Offset starts at 0.\n\n##### `pq.ftype(fieldNumber:int):int`\n\nRetrieve the `Oid` of the field (column) at the given offset. Offset starts at 0.\n\n##### `pq.getvalue(tupleNumber:int, fieldNumber:int):string`\n\nRetrieve the text value at a given tuple (row) and field (column) offset. Both offsets start at 0.  A null value is returned as the empty string `\'\'`.\n\n##### `pq.getisnull(tupleNumber:int, fieldNumber:int):boolean`\n\nReturns `true` if the value at the given offsets is actually `null`.  Otherwise returns `false`.  This is because `pq.getvalue()` returns an empty string for both an actual empty string and for a `null` value.  Weird, huh?\n\n##### `pq.cmdStatus():string`\n\nReturns the status string associated with a result.  Something akin to `INSERT 3 0` if you inserted 3 rows.\n\n##### `pq.cmdTuples():string`\n\nReturns the number of tuples (rows) affected by the command. Even though this is a number, it is returned as a string to mirror libpq\'s behavior.\n\n### Async socket access\n\nThese functions don\'t have a direct match within libpq.  They exist to allow you to monitor the readability or writability of the libpq socket based on your platforms equivilant to `select()`.  This allows you to perform async I/O completely from JavaScript.\n\n##### `pq.startReader()`\n\nThis uses libuv to start a read watcher on the socket open to the backend.  As soon as this socket becomes readable the `pq` instance will emit a `readable` event.  It is up to you to call `pq.consumeInput()` one or more times to clear this read notification or it will continue to emit read events over and over and over.  The exact flow is outlined [here] under the documentation for `PQisBusy`.\n\n##### `pq.stopReader()`\n\nTells libuv to stop the read watcher on the connection socket.\n\n##### `pq.writable(callback:function)`\n\nCall this to make sure the socket has flushed all data to the operating system.  Once the socket is writable, your callback will be called.  Usefully when using `PQsetNonBlocking` and `PQflush` for async writing.\n\n### More async methods\n\nThese are all documented in detail within the [libpq documentation](http://www.postgresql.org/docs/9.3/static/libpq-async.html) and function almost identically.\n\n##### `pq.consumeInput():boolean`\n\nReads waiting data from the socket.  If the socket is not readable and you call this it will __block__ so be careful and only call it within the `readable` callback for the most part.\n\nReturns `true` if data was read.  Returns `false` if there was an error.  You can access error details with `pq.errorMessage()`.\n\n##### `pq.isBusy():boolean`\n\nReturns `true` if calling `pq.consumeInput()` would block waiting for more data.  Returns `false` if all data has been read from the socket.  Once this returns `false` it is safe to call `pq.getResult()`\n\n##### `pq.setNonBlocking(nonBlocking:boolean):boolean`\n\nToggle the socket blocking on _write_.  Returns `true` if the socket\'s state was succesfully toggled.  Returns `false` if there was an error.\n\n- `nonBlocking` is `true` to set the connection to use non-blocking writes. `false` to use blocking writes.\n\n##### `pq.flush():int`\n\nFlushes buffered data to the socket.  Returns `1` if socket is not write-ready at which case you should call `pq.writable` with a callback and wait for the socket to be writable and then call `pq.flush()` again.  Returns `0` if all data was flushed.  Returns `-1` if there was an error.\n\n### listen/notify\n\n##### `pq.notifies():object`\n\nChecks for `NOTIFY` messages that have come in.  If any have been received they will be in the following format:\n\n```js\nvar msg = {\n  relname: \'name of channel\',\n  extra: \'message passed to notify command\',\n  be_pid: 130\n}\n```\n\n### COPY IN/OUT\n\n##### `pq.putCopyData(buffer:Buffer):int`\n\nAfter issuing a successful command like `COPY table FROM stdin` you can start putting buffers directly into the databse with this function.\n\n- `buffer` Is a required node buffer of text data such as `Buffer(\'column1\\tcolumn2\\n\')`\n\nReturns `1` if sent succesfully. Returns `0` if the command would block (only if you have called `pq.setNonBlocking(true)`). Returns `-1` if there was an error sending the command.\n\n##### `pq.putCopyEnd([errorMessage:string])`\n\nSignals the backed your copy procedure is complete.  If you pass `errorMessage` it will be sent to the backend and effectively cancel the copy operation.\n\n- `errorMessage` is an _optional_ string you can pass to cancel the copy operation.\n\nReturns `1` if sent succesfully. Returns `0` if the command would block (only if you have called `pq.setNonBlocking(true)`). Returns `-1` if there was an error sending the command.\n\n\n##### `pq.getCopyData(async:boolean):Buffer or int`\n\nAfter issuing a successfuly command like `COPY table TO stdout` gets copy data from the connection.\n\nReturns a node buffer if there is data available.\n\nReturns `0` if the copy is still in progress (only if you have called `pq.setNonBlocking(true)`). Returns `-1` if the copy is completed. Returns `-2` if there was an error.\n\n- `async` is a boolean. Pass `false` to __block__ waiting for data from the backend. _defaults to `false`_\n\n### Misc Functions\n\n##### `pq.escapeLiteral(input:string):string`\n\nExact copy of the `PQescapeLiteral` function within libpq.  Requires an established connection but does not perform any I/O.\n\n##### `pq.escapeIdentifier(input:string):string`\n\nExact copy of the `PQescapeIdentifier` function within libpq.  Requires an established connection but does not perform any I/O.\n\n##### `pq.cancel():true -or- string`\n\nIssues a request to cancel the currently executing query _on this instance of libpq_.  Returns `true` if the cancel request was sent.  Returns a `string` error message if the cancel request failed for any reason. The string will contain the error message provided by libpq.\n\n## testing\n\n```sh\n$ npm test\n```\n\nTo run the tests you need a PostgreSQL backend reachable by typing `psql` with no connection parameters in your terminal. The tests use [environment variables](http://www.postgresql.org/docs/9.3/static/libpq-envars.html) to connect to the backend. \n\nAn example of supplying a specific host the tests:\n\n```sh\n$ PGHOST=blabla.mydatabasehost.com npm test\n```\n\n\n## license\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Brian M. Carlson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n',
151 silly resolved     readmeFilename: 'README.md',
151 silly resolved     bugs: { url: 'https://github.com/brianc/node-libpq/issues' },
151 silly resolved     homepage: 'https://github.com/brianc/node-libpq',
151 silly resolved     _id: 'libpq@1.5.1',
151 silly resolved     _shasum: 'a66c94cfbb5b09fd5f15f8931e82bd7a29c96c54',
151 silly resolved     _from: 'libpq@^1.5.0',
151 silly resolved     _resolved: 'https://registry.npmjs.org/libpq/-/libpq-1.5.1.tgz' } ]
152 info install pg-types@1.6.0 into /Users/arobinson/Documents/Projects/controls/node_modules/pg-native
153 info install readable-stream@1.0.31 into /Users/arobinson/Documents/Projects/controls/node_modules/pg-native
154 info install libpq@1.5.1 into /Users/arobinson/Documents/Projects/controls/node_modules/pg-native
155 info installOne pg-types@1.6.0
156 info installOne readable-stream@1.0.31
157 info installOne libpq@1.5.1
158 info /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/pg-types unbuild
159 info /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream unbuild
160 info /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq unbuild
161 verbose tar unpack /Users/arobinson/.npm/pg-types/1.6.0/package.tgz
162 silly lockFile febfc987--pg-native-node-modules-pg-types tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/pg-types
163 verbose lock tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/pg-types /Users/arobinson/.npm/febfc987--pg-native-node-modules-pg-types.lock
164 silly lockFile 4d6fdc7b-n-npm-pg-types-1-6-0-package-tgz tar:///Users/arobinson/.npm/pg-types/1.6.0/package.tgz
165 verbose lock tar:///Users/arobinson/.npm/pg-types/1.6.0/package.tgz /Users/arobinson/.npm/4d6fdc7b-n-npm-pg-types-1-6-0-package-tgz.lock
166 verbose tar unpack /Users/arobinson/.npm/readable-stream/1.0.31/package.tgz
167 silly lockFile 8d1db32d-ive-node-modules-readable-stream tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream
168 verbose lock tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream /Users/arobinson/.npm/8d1db32d-ive-node-modules-readable-stream.lock
169 silly lockFile 2c98cc92-adable-stream-1-0-31-package-tgz tar:///Users/arobinson/.npm/readable-stream/1.0.31/package.tgz
170 verbose lock tar:///Users/arobinson/.npm/readable-stream/1.0.31/package.tgz /Users/arobinson/.npm/2c98cc92-adable-stream-1-0-31-package-tgz.lock
171 verbose tar unpack /Users/arobinson/.npm/libpq/1.5.1/package.tgz
172 silly lockFile 0db062e4-les-pg-native-node-modules-libpq tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq
173 verbose lock tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq /Users/arobinson/.npm/0db062e4-les-pg-native-node-modules-libpq.lock
174 silly lockFile 7f9ad1f6-nson-npm-libpq-1-5-1-package-tgz tar:///Users/arobinson/.npm/libpq/1.5.1/package.tgz
175 verbose lock tar:///Users/arobinson/.npm/libpq/1.5.1/package.tgz /Users/arobinson/.npm/7f9ad1f6-nson-npm-libpq-1-5-1-package-tgz.lock
176 silly gunzTarPerm modes [ '755', '644' ]
177 silly gunzTarPerm modes [ '755', '644' ]
178 silly gunzTarPerm modes [ '755', '644' ]
179 silly gunzTarPerm extractEntry package.json
180 silly gunzTarPerm extractEntry package.json
181 silly gunzTarPerm modified mode [ 'package.json', 436, 420 ]
182 silly gunzTarPerm extractEntry package.json
183 silly gunzTarPerm extractEntry .npmignore
184 silly gunzTarPerm extractEntry README.md
185 silly gunzTarPerm extractEntry .npmignore
186 silly gunzTarPerm extractEntry README.md
187 silly gunzTarPerm modified mode [ 'README.md', 436, 420 ]
188 silly gunzTarPerm extractEntry .npmignore
189 silly gunzTarPerm extractEntry README.md
190 silly gunzTarPerm extractEntry index.js
191 silly gunzTarPerm extractEntry .travis.yml
192 silly gunzTarPerm extractEntry index.js
193 silly gunzTarPerm extractEntry LICENSE
194 silly gunzTarPerm modified mode [ 'LICENSE', 436, 420 ]
195 silly gunzTarPerm extractEntry transform.js
196 silly gunzTarPerm extractEntry Makefile
197 silly gunzTarPerm extractEntry lib/arrayParser.js
198 silly gunzTarPerm extractEntry binding.gyp
199 silly gunzTarPerm extractEntry .travis.yml
200 silly gunzTarPerm extractEntry duplex.js
201 silly gunzTarPerm extractEntry readable.js
202 silly gunzTarPerm modified mode [ 'readable.js', 436, 420 ]
203 silly gunzTarPerm extractEntry lib/binaryParsers.js
204 silly gunzTarPerm extractEntry lib/textParsers.js
205 silly gunzTarPerm extractEntry test/array.js
206 silly gunzTarPerm extractEntry test/assert.js
207 silly gunzTarPerm extractEntry test/dates.js
208 silly gunzTarPerm extractEntry test/index.js
209 silly gunzTarPerm extractEntry passthrough.js
210 silly gunzTarPerm extractEntry writable.js
211 silly gunzTarPerm extractEntry Makefile
212 silly gunzTarPerm extractEntry src/addon.cc
213 silly gunzTarPerm extractEntry lib/_stream_duplex.js
214 silly gunzTarPerm modified mode [ 'lib/_stream_duplex.js', 436, 420 ]
215 silly gunzTarPerm extractEntry lib/_stream_passthrough.js
216 silly gunzTarPerm modified mode [ 'lib/_stream_passthrough.js', 436, 420 ]
217 silly gunzTarPerm extractEntry src/addon.h
218 silly gunzTarPerm extractEntry src/connect-async-worker.cc
219 silly gunzTarPerm extractEntry lib/_stream_readable.js
220 silly gunzTarPerm modified mode [ 'lib/_stream_readable.js', 436, 420 ]
221 silly gunzTarPerm extractEntry src/connect-async-worker.h
222 silly gunzTarPerm extractEntry src/connection.cc
223 silly gunzTarPerm extractEntry lib/_stream_transform.js
224 silly gunzTarPerm modified mode [ 'lib/_stream_transform.js', 436, 420 ]
225 silly gunzTarPerm extractEntry lib/_stream_writable.js
226 silly gunzTarPerm modified mode [ 'lib/_stream_writable.js', 436, 420 ]
227 silly gunzTarPerm extractEntry src/connection.h
228 silly gunzTarPerm extractEntry test/async-connection.js
229 silly gunzTarPerm extractEntry test/error-info.js
230 silly gunzTarPerm extractEntry test/escaping.js
231 silly gunzTarPerm extractEntry test/helper.js
232 silly gunzTarPerm extractEntry test/index.js
233 silly gunzTarPerm extractEntry test/error-conditions.js
234 silly gunzTarPerm extractEntry test/many-connections.js
235 silly gunzTarPerm extractEntry test/sync-prepare.js
236 silly gunzTarPerm extractEntry test/multiple-queries.js
237 silly gunzTarPerm extractEntry test/non-blocking-controls.js
238 silly gunzTarPerm extractEntry test/notification.js
239 silly gunzTarPerm extractEntry test/copy-out.js
240 silly gunzTarPerm extractEntry test/result-accessors.js
241 silly gunzTarPerm extractEntry test/copy-in.js
242 silly gunzTarPerm extractEntry test/socket.js
243 silly lockFile febfc987--pg-native-node-modules-pg-types tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/pg-types
244 silly lockFile febfc987--pg-native-node-modules-pg-types tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/pg-types
245 silly lockFile 4d6fdc7b-n-npm-pg-types-1-6-0-package-tgz tar:///Users/arobinson/.npm/pg-types/1.6.0/package.tgz
246 silly lockFile 4d6fdc7b-n-npm-pg-types-1-6-0-package-tgz tar:///Users/arobinson/.npm/pg-types/1.6.0/package.tgz
247 silly gunzTarPerm extractEntry test/construction.js
248 silly gunzTarPerm extractEntry test/sync-integration.js
249 silly lockFile 8d1db32d-ive-node-modules-readable-stream tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream
250 silly lockFile 8d1db32d-ive-node-modules-readable-stream tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream
251 silly lockFile 2c98cc92-adable-stream-1-0-31-package-tgz tar:///Users/arobinson/.npm/readable-stream/1.0.31/package.tgz
252 silly lockFile 2c98cc92-adable-stream-1-0-31-package-tgz tar:///Users/arobinson/.npm/readable-stream/1.0.31/package.tgz
253 info preinstall pg-types@1.6.0
254 verbose readDependencies using package.json deps
255 verbose readDependencies using package.json deps
256 silly resolved []
257 verbose about to build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/pg-types
258 info build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/pg-types
259 verbose linkStuff [ false,
259 verbose linkStuff   false,
259 verbose linkStuff   false,
259 verbose linkStuff   '/Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules' ]
260 info linkStuff pg-types@1.6.0
261 verbose linkBins pg-types@1.6.0
262 verbose linkMans pg-types@1.6.0
263 verbose rebuildBundles pg-types@1.6.0
264 info install pg-types@1.6.0
265 info preinstall readable-stream@1.0.31
266 info postinstall pg-types@1.6.0
267 silly gunzTarPerm extractEntry test/cancel.js
268 silly gunzTarPerm extractEntry test/sync-parameters.js
269 verbose readDependencies using package.json deps
270 verbose readDependencies using package.json deps
271 verbose cache add [ 'core-util-is@~1.0.0', null ]
272 verbose cache add name=undefined spec="core-util-is@~1.0.0" args=["core-util-is@~1.0.0",null]
273 verbose parsed url { protocol: null,
273 verbose parsed url   slashes: null,
273 verbose parsed url   auth: null,
273 verbose parsed url   host: null,
273 verbose parsed url   port: null,
273 verbose parsed url   hostname: null,
273 verbose parsed url   hash: null,
273 verbose parsed url   search: null,
273 verbose parsed url   query: null,
273 verbose parsed url   pathname: 'core-util-is@~1.0.0',
273 verbose parsed url   path: 'core-util-is@~1.0.0',
273 verbose parsed url   href: 'core-util-is@~1.0.0' }
274 verbose cache add name="core-util-is" spec="~1.0.0" args=["core-util-is","~1.0.0"]
275 verbose parsed url { protocol: null,
275 verbose parsed url   slashes: null,
275 verbose parsed url   auth: null,
275 verbose parsed url   host: null,
275 verbose parsed url   port: null,
275 verbose parsed url   hostname: null,
275 verbose parsed url   hash: null,
275 verbose parsed url   search: null,
275 verbose parsed url   query: null,
275 verbose parsed url   pathname: '~1.0.0',
275 verbose parsed url   path: '~1.0.0',
275 verbose parsed url   href: '~1.0.0' }
276 verbose addNamed [ 'core-util-is', '~1.0.0' ]
277 verbose addNamed [ null, '>=1.0.0-0 <1.1.0-0' ]
278 silly lockFile 577b60c4-core-util-is-1-0-0 core-util-is@~1.0.0
279 verbose lock core-util-is@~1.0.0 /Users/arobinson/.npm/577b60c4-core-util-is-1-0-0.lock
280 verbose cache add [ 'isarray@0.0.1', null ]
281 verbose cache add name=undefined spec="isarray@0.0.1" args=["isarray@0.0.1",null]
282 verbose parsed url { protocol: null,
282 verbose parsed url   slashes: null,
282 verbose parsed url   auth: null,
282 verbose parsed url   host: null,
282 verbose parsed url   port: null,
282 verbose parsed url   hostname: null,
282 verbose parsed url   hash: null,
282 verbose parsed url   search: null,
282 verbose parsed url   query: null,
282 verbose parsed url   pathname: 'isarray@0.0.1',
282 verbose parsed url   path: 'isarray@0.0.1',
282 verbose parsed url   href: 'isarray@0.0.1' }
283 verbose cache add name="isarray" spec="0.0.1" args=["isarray","0.0.1"]
284 verbose parsed url { protocol: null,
284 verbose parsed url   slashes: null,
284 verbose parsed url   auth: null,
284 verbose parsed url   host: null,
284 verbose parsed url   port: null,
284 verbose parsed url   hostname: null,
284 verbose parsed url   hash: null,
284 verbose parsed url   search: null,
284 verbose parsed url   query: null,
284 verbose parsed url   pathname: '0.0.1',
284 verbose parsed url   path: '0.0.1',
284 verbose parsed url   href: '0.0.1' }
285 verbose addNamed [ 'isarray', '0.0.1' ]
286 verbose addNamed [ '0.0.1', '0.0.1' ]
287 silly lockFile 9efe11b1-isarray-0-0-1 isarray@0.0.1
288 verbose lock isarray@0.0.1 /Users/arobinson/.npm/9efe11b1-isarray-0-0-1.lock
289 verbose cache add [ 'string_decoder@~0.10.x', null ]
290 verbose cache add name=undefined spec="string_decoder@~0.10.x" args=["string_decoder@~0.10.x",null]
291 verbose parsed url { protocol: null,
291 verbose parsed url   slashes: null,
291 verbose parsed url   auth: null,
291 verbose parsed url   host: null,
291 verbose parsed url   port: null,
291 verbose parsed url   hostname: null,
291 verbose parsed url   hash: null,
291 verbose parsed url   search: null,
291 verbose parsed url   query: null,
291 verbose parsed url   pathname: 'string_decoder@~0.10.x',
291 verbose parsed url   path: 'string_decoder@~0.10.x',
291 verbose parsed url   href: 'string_decoder@~0.10.x' }
292 verbose cache add name="string_decoder" spec="~0.10.x" args=["string_decoder","~0.10.x"]
293 verbose parsed url { protocol: null,
293 verbose parsed url   slashes: null,
293 verbose parsed url   auth: null,
293 verbose parsed url   host: null,
293 verbose parsed url   port: null,
293 verbose parsed url   hostname: null,
293 verbose parsed url   hash: null,
293 verbose parsed url   search: null,
293 verbose parsed url   query: null,
293 verbose parsed url   pathname: '~0.10.x',
293 verbose parsed url   path: '~0.10.x',
293 verbose parsed url   href: '~0.10.x' }
294 verbose addNamed [ 'string_decoder', '~0.10.x' ]
295 verbose addNamed [ null, '>=0.10.0-0 <0.11.0-0' ]
296 silly lockFile 8f75c97d-string-decoder-0-10-x string_decoder@~0.10.x
297 verbose lock string_decoder@~0.10.x /Users/arobinson/.npm/8f75c97d-string-decoder-0-10-x.lock
298 silly addNameRange { name: 'core-util-is',
298 silly addNameRange   range: '>=1.0.0-0 <1.1.0-0',
298 silly addNameRange   hasData: false }
299 silly addNameRange { name: 'string_decoder',
299 silly addNameRange   range: '>=0.10.0-0 <0.11.0-0',
299 silly addNameRange   hasData: false }
300 verbose url raw core-util-is
301 verbose url resolving [ 'https://registry.npmjs.org/', './core-util-is' ]
302 verbose url resolved https://registry.npmjs.org/core-util-is
303 info trying registry request attempt 1 at 15:34:15
304 verbose etag "1IEFH2SDX7S1RE0I69IZJ9NC3"
305 http GET https://registry.npmjs.org/core-util-is
306 verbose cache add [ 'inherits@~2.0.1', null ]
307 verbose cache add name=undefined spec="inherits@~2.0.1" args=["inherits@~2.0.1",null]
308 verbose parsed url { protocol: null,
308 verbose parsed url   slashes: null,
308 verbose parsed url   auth: null,
308 verbose parsed url   host: null,
308 verbose parsed url   port: null,
308 verbose parsed url   hostname: null,
308 verbose parsed url   hash: null,
308 verbose parsed url   search: null,
308 verbose parsed url   query: null,
308 verbose parsed url   pathname: 'inherits@~2.0.1',
308 verbose parsed url   path: 'inherits@~2.0.1',
308 verbose parsed url   href: 'inherits@~2.0.1' }
309 verbose cache add name="inherits" spec="~2.0.1" args=["inherits","~2.0.1"]
310 verbose parsed url { protocol: null,
310 verbose parsed url   slashes: null,
310 verbose parsed url   auth: null,
310 verbose parsed url   host: null,
310 verbose parsed url   port: null,
310 verbose parsed url   hostname: null,
310 verbose parsed url   hash: null,
310 verbose parsed url   search: null,
310 verbose parsed url   query: null,
310 verbose parsed url   pathname: '~2.0.1',
310 verbose parsed url   path: '~2.0.1',
310 verbose parsed url   href: '~2.0.1' }
311 verbose addNamed [ 'inherits', '~2.0.1' ]
312 verbose addNamed [ null, '>=2.0.1-0 <2.1.0-0' ]
313 silly lockFile 098ef39f-inherits-2-0-1 inherits@~2.0.1
314 verbose lock inherits@~2.0.1 /Users/arobinson/.npm/098ef39f-inherits-2-0-1.lock
315 verbose url raw isarray
316 verbose url resolving [ 'https://registry.npmjs.org/', './isarray' ]
317 verbose url resolved https://registry.npmjs.org/isarray
318 info trying registry request attempt 1 at 15:34:15
319 verbose etag "2TF3AG3A54QISXO2B2EC5CMU7"
320 http GET https://registry.npmjs.org/isarray
321 verbose url raw string_decoder
322 verbose url resolving [ 'https://registry.npmjs.org/', './string_decoder' ]
323 verbose url resolved https://registry.npmjs.org/string_decoder
324 info trying registry request attempt 1 at 15:34:15
325 verbose etag "8Q1R40T1ZXPPASQVVH9UCIXG4"
326 http GET https://registry.npmjs.org/string_decoder
327 silly addNameRange { name: 'inherits', range: '>=2.0.1-0 <2.1.0-0', hasData: false }
328 verbose url raw inherits
329 verbose url resolving [ 'https://registry.npmjs.org/', './inherits' ]
330 verbose url resolved https://registry.npmjs.org/inherits
331 info trying registry request attempt 1 at 15:34:15
332 verbose etag "7QS52SZ574G3U90LKG7KHWVM3"
333 http GET https://registry.npmjs.org/inherits
334 silly gunzTarPerm extractEntry test/async-socket.js
335 silly gunzTarPerm extractEntry test/sync.js
336 silly gunzTarPerm extractEntry test/load.js
337 silly gunzTarPerm extractEntry test/mocha.opts
338 http 304 https://registry.npmjs.org/inherits
339 silly registry.get cb [ 304,
339 silly registry.get   { date: 'Fri, 06 Feb 2015 20:34:15 GMT',
339 silly registry.get     server: 'Apache',
339 silly registry.get     via: '1.1 varnish',
339 silly registry.get     'last-modified': 'Fri, 06 Feb 2015 20:34:07 GMT',
339 silly registry.get     'cache-control': 'max-age=60',
339 silly registry.get     etag: '"7QS52SZ574G3U90LKG7KHWVM3"',
339 silly registry.get     age: '9',
339 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
339 silly registry.get     'x-cache': 'HIT',
339 silly registry.get     'x-cache-hits': '4',
339 silly registry.get     'x-timer': 'S1423254855.658632,VS0,VE0',
339 silly registry.get     vary: 'Accept',
339 silly registry.get     'content-length': '0',
339 silly registry.get     'keep-alive': 'timeout=10, max=50',
339 silly registry.get     connection: 'Keep-Alive' } ]
340 verbose etag inherits from cache
341 http 304 https://registry.npmjs.org/core-util-is
342 silly registry.get cb [ 304,
342 silly registry.get   { date: 'Fri, 06 Feb 2015 20:34:15 GMT',
342 silly registry.get     server: 'Apache',
342 silly registry.get     via: '1.1 varnish',
342 silly registry.get     'last-modified': 'Fri, 06 Feb 2015 20:33:32 GMT',
342 silly registry.get     'cache-control': 'max-age=60',
342 silly registry.get     etag: '"1IEFH2SDX7S1RE0I69IZJ9NC3"',
342 silly registry.get     age: '52',
342 silly registry.get     'x-served-by': 'cache-jfk1030-JFK',
342 silly registry.get     'x-cache': 'HIT',
342 silly registry.get     'x-cache-hits': '14',
342 silly registry.get     'x-timer': 'S1423254855.657624,VS0,VE0',
342 silly registry.get     vary: 'Accept',
342 silly registry.get     'content-length': '0',
342 silly registry.get     'keep-alive': 'timeout=10, max=50',
342 silly registry.get     connection: 'Keep-Alive' } ]
343 verbose etag core-util-is from cache
344 http 304 https://registry.npmjs.org/isarray
345 silly registry.get cb [ 304,
345 silly registry.get   { date: 'Fri, 06 Feb 2015 20:34:15 GMT',
345 silly registry.get     server: 'Apache',
345 silly registry.get     via: '1.1 varnish',
345 silly registry.get     'last-modified': 'Fri, 06 Feb 2015 20:34:05 GMT',
345 silly registry.get     'cache-control': 'max-age=60',
345 silly registry.get     etag: '"2TF3AG3A54QISXO2B2EC5CMU7"',
345 silly registry.get     age: '10',
345 silly registry.get     'x-served-by': 'cache-jfk1035-JFK',
345 silly registry.get     'x-cache': 'HIT',
345 silly registry.get     'x-cache-hits': '4',
345 silly registry.get     'x-timer': 'S1423254855.660501,VS0,VE0',
345 silly registry.get     vary: 'Accept',
345 silly registry.get     'content-length': '0',
345 silly registry.get     'keep-alive': 'timeout=10, max=50',
345 silly registry.get     connection: 'Keep-Alive' } ]
346 verbose etag isarray from cache
347 http 304 https://registry.npmjs.org/string_decoder
348 silly registry.get cb [ 304,
348 silly registry.get   { date: 'Fri, 06 Feb 2015 20:34:15 GMT',
348 silly registry.get     server: 'Apache',
348 silly registry.get     via: '1.1 varnish',
348 silly registry.get     'last-modified': 'Fri, 06 Feb 2015 20:33:48 GMT',
348 silly registry.get     'cache-control': 'max-age=60',
348 silly registry.get     etag: '"8Q1R40T1ZXPPASQVVH9UCIXG4"',
348 silly registry.get     age: '32',
348 silly registry.get     'x-served-by': 'cache-jfk1026-JFK',
348 silly registry.get     'x-cache': 'HIT',
348 silly registry.get     'x-cache-hits': '9',
348 silly registry.get     'x-timer': 'S1423254855.658899,VS0,VE0',
348 silly registry.get     vary: 'Accept',
348 silly registry.get     'content-length': '0',
348 silly registry.get     'keep-alive': 'timeout=10, max=50',
348 silly registry.get     connection: 'Keep-Alive' } ]
349 verbose etag string_decoder from cache
350 silly addNameRange number 2 { name: 'inherits', range: '>=2.0.1-0 <2.1.0-0', hasData: true }
351 silly addNameRange versions [ 'inherits', [ '1.0.0', '2.0.0', '2.0.1' ] ]
352 verbose addNamed [ 'inherits', '2.0.1' ]
353 verbose addNamed [ '2.0.1', '2.0.1' ]
354 silly lockFile 2b2e8f1b-inherits-2-0-1 inherits@2.0.1
355 verbose lock inherits@2.0.1 /Users/arobinson/.npm/2b2e8f1b-inherits-2-0-1.lock
356 silly addNameRange number 2 { name: 'core-util-is',
356 silly addNameRange   range: '>=1.0.0-0 <1.1.0-0',
356 silly addNameRange   hasData: true }
357 silly addNameRange versions [ 'core-util-is', [ '1.0.0', '1.0.1' ] ]
358 verbose addNamed [ 'core-util-is', '1.0.1' ]
359 verbose addNamed [ '1.0.1', '1.0.1' ]
360 silly lockFile 40ef24cf-core-util-is-1-0-1 core-util-is@1.0.1
361 verbose lock core-util-is@1.0.1 /Users/arobinson/.npm/40ef24cf-core-util-is-1-0-1.lock
362 silly lockFile 2b2e8f1b-inherits-2-0-1 inherits@2.0.1
363 silly lockFile 2b2e8f1b-inherits-2-0-1 inherits@2.0.1
364 silly lockFile 098ef39f-inherits-2-0-1 inherits@~2.0.1
365 silly lockFile 098ef39f-inherits-2-0-1 inherits@~2.0.1
366 silly lockFile 40ef24cf-core-util-is-1-0-1 core-util-is@1.0.1
367 silly lockFile 40ef24cf-core-util-is-1-0-1 core-util-is@1.0.1
368 silly lockFile 577b60c4-core-util-is-1-0-0 core-util-is@~1.0.0
369 silly lockFile 577b60c4-core-util-is-1-0-0 core-util-is@~1.0.0
370 silly addNameRange number 2 { name: 'string_decoder',
370 silly addNameRange   range: '>=0.10.0-0 <0.11.0-0',
370 silly addNameRange   hasData: true }
371 silly addNameRange versions [ 'string_decoder',
371 silly addNameRange   [ '0.0.0',
371 silly addNameRange     '0.0.1',
371 silly addNameRange     '0.10.24',
371 silly addNameRange     '0.11.10',
371 silly addNameRange     '0.10.25',
371 silly addNameRange     '0.11.10-1',
371 silly addNameRange     '0.10.25-1',
371 silly addNameRange     '0.10.31' ] ]
372 verbose addNamed [ 'string_decoder', '0.10.31' ]
373 verbose addNamed [ '0.10.31', '0.10.31' ]
374 silly lockFile 0a9a4818-string-decoder-0-10-31 string_decoder@0.10.31
375 verbose lock string_decoder@0.10.31 /Users/arobinson/.npm/0a9a4818-string-decoder-0-10-31.lock
376 silly lockFile 9efe11b1-isarray-0-0-1 isarray@0.0.1
377 silly lockFile 9efe11b1-isarray-0-0-1 isarray@0.0.1
378 silly lockFile 0a9a4818-string-decoder-0-10-31 string_decoder@0.10.31
379 silly lockFile 0a9a4818-string-decoder-0-10-31 string_decoder@0.10.31
380 silly lockFile 8f75c97d-string-decoder-0-10-x string_decoder@~0.10.x
381 silly lockFile 8f75c97d-string-decoder-0-10-x string_decoder@~0.10.x
382 silly lockFile 0db062e4-les-pg-native-node-modules-libpq tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq
383 silly lockFile 0db062e4-les-pg-native-node-modules-libpq tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq
384 silly lockFile 7f9ad1f6-nson-npm-libpq-1-5-1-package-tgz tar:///Users/arobinson/.npm/libpq/1.5.1/package.tgz
385 silly lockFile 7f9ad1f6-nson-npm-libpq-1-5-1-package-tgz tar:///Users/arobinson/.npm/libpq/1.5.1/package.tgz
386 silly resolved [ { name: 'inherits',
386 silly resolved     description: 'Browser-friendly inheritance fully compatible with standard node.js inherits()',
386 silly resolved     version: '2.0.1',
386 silly resolved     keywords:
386 silly resolved      [ 'inheritance',
386 silly resolved        'class',
386 silly resolved        'klass',
386 silly resolved        'oop',
386 silly resolved        'object-oriented',
386 silly resolved        'inherits',
386 silly resolved        'browser',
386 silly resolved        'browserify' ],
386 silly resolved     main: './inherits.js',
386 silly resolved     browser: './inherits_browser.js',
386 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/inherits' },
386 silly resolved     license: 'ISC',
386 silly resolved     scripts: { test: 'node test' },
386 silly resolved     readme: 'Browser-friendly inheritance fully compatible with standard node.js\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).\n\nThis package exports standard `inherits` from node.js `util` module in\nnode environment, but also provides alternative browser-friendly\nimplementation through [browser\nfield](https://gist.github.com/shtylman/4339901). Alternative\nimplementation is a literal copy of standard one located in standalone\nmodule to avoid requiring of `util`. It also has a shim for old\nbrowsers with no `Object.create` support.\n\nWhile keeping you sure you are using standard `inherits`\nimplementation in node.js environment, it allows bundlers such as\n[browserify](https://github.com/substack/node-browserify) to not\ninclude full `util` package to your client code if all you need is\njust `inherits` function. It worth, because browser shim for `util`\npackage is large and `inherits` is often the single function you need\nfrom it.\n\nIt\'s recommended to use this package instead of\n`require(\'util\').inherits` for any code that has chances to be used\nnot only in node.js but in browser too.\n\n## usage\n\n```js\nvar inherits = require(\'inherits\');\n// then use exactly as the standard one\n```\n\n## note on version ~1.0\n\nVersion ~1.0 had completely different motivation and is not compatible\nneither with 2.0 nor with standard node.js `inherits`.\n\nIf you are using version ~1.0 and planning to switch to ~2.0, be\ncareful:\n\n* new version uses `super_` instead of `super` for referencing\n  superclass\n* new version overwrites current prototype while old one preserves any\n  existing fields on it\n',
386 silly resolved     readmeFilename: 'README.md',
386 silly resolved     bugs: { url: 'https://github.com/isaacs/inherits/issues' },
386 silly resolved     homepage: 'https://github.com/isaacs/inherits',
386 silly resolved     _id: 'inherits@2.0.1',
386 silly resolved     _shasum: 'b17d08d326b4423e568eff719f91b0b1cbdf69f1',
386 silly resolved     _from: 'inherits@~2.0.1',
386 silly resolved     _resolved: 'https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz' },
386 silly resolved   { name: 'core-util-is',
386 silly resolved     version: '1.0.1',
386 silly resolved     description: 'The `util.is*` functions introduced in Node v0.12.',
386 silly resolved     main: 'lib/util.js',
386 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/core-util-is' },
386 silly resolved     keywords:
386 silly resolved      [ 'util',
386 silly resolved        'isBuffer',
386 silly resolved        'isArray',
386 silly resolved        'isNumber',
386 silly resolved        'isString',
386 silly resolved        'isRegExp',
386 silly resolved        'isThis',
386 silly resolved        'isThat',
386 silly resolved        'polyfill' ],
386 silly resolved     author:
386 silly resolved      { name: 'Isaac Z. Schlueter',
386 silly resolved        email: 'i@izs.me',
386 silly resolved        url: 'http://blog.izs.me/' },
386 silly resolved     license: 'MIT',
386 silly resolved     bugs: { url: 'https://github.com/isaacs/core-util-is/issues' },
386 silly resolved     readme: '# core-util-is\n\nThe `util.is*` functions introduced in Node v0.12.\n',
386 silly resolved     readmeFilename: 'README.md',
386 silly resolved     homepage: 'https://github.com/isaacs/core-util-is',
386 silly resolved     _id: 'core-util-is@1.0.1',
386 silly resolved     _shasum: '6b07085aef9a3ccac6ee53bf9d3df0c1521a5538',
386 silly resolved     _from: 'core-util-is@~1.0.0',
386 silly resolved     _resolved: 'https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.1.tgz',
386 silly resolved     scripts: {} },
386 silly resolved   { name: 'isarray',
386 silly resolved     description: 'Array#isArray for older browsers',
386 silly resolved     version: '0.0.1',
386 silly resolved     repository:
386 silly resolved      { type: 'git',
386 silly resolved        url: 'git://github.com/juliangruber/isarray.git' },
386 silly resolved     homepage: 'https://github.com/juliangruber/isarray',
386 silly resolved     main: 'index.js',
386 silly resolved     scripts: { test: 'tap test/*.js' },
386 silly resolved     dependencies: {},
386 silly resolved     devDependencies: { tap: '*' },
386 silly resolved     keywords: [ 'browser', 'isarray', 'array' ],
386 silly resolved     author:
386 silly resolved      { name: 'Julian Gruber',
386 silly resolved        email: 'mail@juliangruber.com',
386 silly resolved        url: 'http://juliangruber.com' },
386 silly resolved     license: 'MIT',
386 silly resolved     readme: '\n# isarray\n\n`Array#isArray` for older browsers.\n\n## Usage\n\n```js\nvar isArray = require(\'isarray\');\n\nconsole.log(isArray([])); // => true\nconsole.log(isArray({})); // => false\n```\n\n## Installation\n\nWith [npm](http://npmjs.org) do\n\n```bash\n$ npm install isarray\n```\n\nThen bundle for the browser with\n[browserify](https://github.com/substack/browserify).\n\nWith [component](http://component.io) do\n\n```bash\n$ component install juliangruber/isarray\n```\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n',
386 silly resolved     readmeFilename: 'README.md',
386 silly resolved     bugs: { url: 'https://github.com/juliangruber/isarray/issues' },
386 silly resolved     _id: 'isarray@0.0.1',
386 silly resolved     _shasum: '8a18acfca9a8f4177e09abfc6038939b05d1eedf',
386 silly resolved     _from: 'isarray@0.0.1',
386 silly resolved     _resolved: 'https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz' },
386 silly resolved   { name: 'string_decoder',
386 silly resolved     version: '0.10.31',
386 silly resolved     description: 'The string_decoder module from Node core',
386 silly resolved     main: 'index.js',
386 silly resolved     dependencies: {},
386 silly resolved     devDependencies: { tap: '~0.4.8' },
386 silly resolved     scripts: { test: 'tap test/simple/*.js' },
386 silly resolved     repository:
386 silly resolved      { type: 'git',
386 silly resolved        url: 'git://github.com/rvagg/string_decoder.git' },
386 silly resolved     homepage: 'https://github.com/rvagg/string_decoder',
386 silly resolved     keywords: [ 'string', 'decoder', 'browser', 'browserify' ],
386 silly resolved     license: 'MIT',
386 silly resolved     readme: '**string_decoder.js** (`require(\'string_decoder\')`) from Node.js core\n\nCopyright Joyent, Inc. and other Node contributors. See LICENCE file for details.\n\nVersion numbers match the versions found in Node core, e.g. 0.10.24 matches Node 0.10.24, likewise 0.11.10 matches Node 0.11.10. **Prefer the stable version over the unstable.**\n\nThe *build/* directory contains a build script that will scrape the source from the [joyent/node](https://github.com/joyent/node) repo given a specific Node version.',
386 silly resolved     readmeFilename: 'README.md',
386 silly resolved     bugs: { url: 'https://github.com/rvagg/string_decoder/issues' },
386 silly resolved     _id: 'string_decoder@0.10.31',
386 silly resolved     _shasum: '62e203bc41766c6c28c9fc84301dab1c5310fa94',
386 silly resolved     _from: 'string_decoder@~0.10.x',
386 silly resolved     _resolved: 'https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz' } ]
387 info install inherits@2.0.1 into /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream
388 info install core-util-is@1.0.1 into /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream
389 info install isarray@0.0.1 into /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream
390 info install string_decoder@0.10.31 into /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream
391 info installOne inherits@2.0.1
392 info installOne core-util-is@1.0.1
393 info installOne isarray@0.0.1
394 info installOne string_decoder@0.10.31
395 info /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/inherits unbuild
396 info /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/core-util-is unbuild
397 info /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/isarray unbuild
398 info /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/string_decoder unbuild
399 verbose tar unpack /Users/arobinson/.npm/inherits/2.0.1/package.tgz
400 silly lockFile 29985262-ble-stream-node-modules-inherits tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/inherits
401 verbose lock tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/inherits /Users/arobinson/.npm/29985262-ble-stream-node-modules-inherits.lock
402 silly lockFile 37e25cb0-n-npm-inherits-2-0-1-package-tgz tar:///Users/arobinson/.npm/inherits/2.0.1/package.tgz
403 verbose lock tar:///Users/arobinson/.npm/inherits/2.0.1/package.tgz /Users/arobinson/.npm/37e25cb0-n-npm-inherits-2-0-1-package-tgz.lock
404 verbose tar unpack /Users/arobinson/.npm/core-util-is/1.0.1/package.tgz
405 silly lockFile 345833d6-stream-node-modules-core-util-is tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/core-util-is
406 verbose lock tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/core-util-is /Users/arobinson/.npm/345833d6-stream-node-modules-core-util-is.lock
407 silly lockFile f4ca6182-m-core-util-is-1-0-1-package-tgz tar:///Users/arobinson/.npm/core-util-is/1.0.1/package.tgz
408 verbose lock tar:///Users/arobinson/.npm/core-util-is/1.0.1/package.tgz /Users/arobinson/.npm/f4ca6182-m-core-util-is-1-0-1-package-tgz.lock
409 verbose tar unpack /Users/arobinson/.npm/isarray/0.0.1/package.tgz
410 silly lockFile 43304bd4-able-stream-node-modules-isarray tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/isarray
411 verbose lock tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/isarray /Users/arobinson/.npm/43304bd4-able-stream-node-modules-isarray.lock
412 silly lockFile 65c94fa9-on-npm-isarray-0-0-1-package-tgz tar:///Users/arobinson/.npm/isarray/0.0.1/package.tgz
413 verbose lock tar:///Users/arobinson/.npm/isarray/0.0.1/package.tgz /Users/arobinson/.npm/65c94fa9-on-npm-isarray-0-0-1-package-tgz.lock
414 verbose tar unpack /Users/arobinson/.npm/string_decoder/0.10.31/package.tgz
415 silly lockFile 587d160e-ream-node-modules-string-decoder tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/string_decoder
416 verbose lock tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/string_decoder /Users/arobinson/.npm/587d160e-ream-node-modules-string-decoder.lock
417 silly lockFile c3470d87-ring-decoder-0-10-31-package-tgz tar:///Users/arobinson/.npm/string_decoder/0.10.31/package.tgz
418 verbose lock tar:///Users/arobinson/.npm/string_decoder/0.10.31/package.tgz /Users/arobinson/.npm/c3470d87-ring-decoder-0-10-31-package-tgz.lock
419 silly gunzTarPerm modes [ '755', '644' ]
420 silly gunzTarPerm modes [ '755', '644' ]
421 silly gunzTarPerm modes [ '755', '644' ]
422 silly gunzTarPerm modes [ '755', '644' ]
423 info preinstall libpq@1.5.1
424 silly gunzTarPerm extractEntry package.json
425 silly gunzTarPerm extractEntry package.json
426 silly gunzTarPerm extractEntry package.json
427 silly gunzTarPerm extractEntry package.json
428 silly gunzTarPerm modified mode [ 'package.json', 436, 420 ]
429 verbose readDependencies using package.json deps
430 verbose readDependencies using package.json deps
431 silly gunzTarPerm extractEntry README.md
432 silly gunzTarPerm extractEntry LICENSE
433 silly gunzTarPerm extractEntry README.md
434 silly gunzTarPerm extractEntry util.js
435 silly gunzTarPerm extractEntry README.md
436 silly gunzTarPerm extractEntry index.js
437 silly gunzTarPerm extractEntry .npmignore
438 silly gunzTarPerm modified mode [ '.npmignore', 436, 420 ]
439 silly gunzTarPerm extractEntry README.md
440 silly gunzTarPerm modified mode [ 'README.md', 436, 420 ]
441 verbose cache add [ 'nan@1.5.0', null ]
442 verbose cache add name=undefined spec="nan@1.5.0" args=["nan@1.5.0",null]
443 verbose parsed url { protocol: null,
443 verbose parsed url   slashes: null,
443 verbose parsed url   auth: null,
443 verbose parsed url   host: null,
443 verbose parsed url   port: null,
443 verbose parsed url   hostname: null,
443 verbose parsed url   hash: null,
443 verbose parsed url   search: null,
443 verbose parsed url   query: null,
443 verbose parsed url   pathname: 'nan@1.5.0',
443 verbose parsed url   path: 'nan@1.5.0',
443 verbose parsed url   href: 'nan@1.5.0' }
444 verbose cache add name="nan" spec="1.5.0" args=["nan","1.5.0"]
445 verbose parsed url { protocol: null,
445 verbose parsed url   slashes: null,
445 verbose parsed url   auth: null,
445 verbose parsed url   host: null,
445 verbose parsed url   port: null,
445 verbose parsed url   hostname: null,
445 verbose parsed url   hash: null,
445 verbose parsed url   search: null,
445 verbose parsed url   query: null,
445 verbose parsed url   pathname: '1.5.0',
445 verbose parsed url   path: '1.5.0',
445 verbose parsed url   href: '1.5.0' }
446 verbose addNamed [ 'nan', '1.5.0' ]
447 verbose addNamed [ '1.5.0', '1.5.0' ]
448 silly lockFile d0ecca87-nan-1-5-0 nan@1.5.0
449 verbose lock nan@1.5.0 /Users/arobinson/.npm/d0ecca87-nan-1-5-0.lock
450 verbose cache add [ 'bindings@1.2.1', null ]
451 verbose cache add name=undefined spec="bindings@1.2.1" args=["bindings@1.2.1",null]
452 verbose parsed url { protocol: null,
452 verbose parsed url   slashes: null,
452 verbose parsed url   auth: null,
452 verbose parsed url   host: null,
452 verbose parsed url   port: null,
452 verbose parsed url   hostname: null,
452 verbose parsed url   hash: null,
452 verbose parsed url   search: null,
452 verbose parsed url   query: null,
452 verbose parsed url   pathname: 'bindings@1.2.1',
452 verbose parsed url   path: 'bindings@1.2.1',
452 verbose parsed url   href: 'bindings@1.2.1' }
453 verbose cache add name="bindings" spec="1.2.1" args=["bindings","1.2.1"]
454 verbose parsed url { protocol: null,
454 verbose parsed url   slashes: null,
454 verbose parsed url   auth: null,
454 verbose parsed url   host: null,
454 verbose parsed url   port: null,
454 verbose parsed url   hostname: null,
454 verbose parsed url   hash: null,
454 verbose parsed url   search: null,
454 verbose parsed url   query: null,
454 verbose parsed url   pathname: '1.2.1',
454 verbose parsed url   path: '1.2.1',
454 verbose parsed url   href: '1.2.1' }
455 verbose addNamed [ 'bindings', '1.2.1' ]
456 verbose addNamed [ '1.2.1', '1.2.1' ]
457 silly lockFile e9060511-bindings-1-2-1 bindings@1.2.1
458 verbose lock bindings@1.2.1 /Users/arobinson/.npm/e9060511-bindings-1-2-1.lock
459 verbose url raw nan
460 verbose url resolving [ 'https://registry.npmjs.org/', './nan' ]
461 verbose url resolved https://registry.npmjs.org/nan
462 info trying registry request attempt 1 at 15:34:15
463 verbose etag "E91GIN9R7S0EBLG0K4VX7ZGGE"
464 http GET https://registry.npmjs.org/nan
465 verbose url raw bindings
466 verbose url resolving [ 'https://registry.npmjs.org/', './bindings' ]
467 verbose url resolved https://registry.npmjs.org/bindings
468 info trying registry request attempt 1 at 15:34:15
469 verbose etag "BJGP1201ZXLWX88VO1W0N0YSR"
470 http GET https://registry.npmjs.org/bindings
471 silly gunzTarPerm extractEntry inherits.js
472 silly gunzTarPerm extractEntry inherits_browser.js
473 silly gunzTarPerm extractEntry float.patch
474 silly gunzTarPerm extractEntry lib/util.js
475 silly gunzTarPerm extractEntry LICENSE
476 silly gunzTarPerm modified mode [ 'LICENSE', 436, 420 ]
477 silly gunzTarPerm extractEntry index.js
478 silly gunzTarPerm modified mode [ 'index.js', 436, 420 ]
479 silly gunzTarPerm extractEntry build/build.js
480 silly gunzTarPerm extractEntry component.json
481 silly gunzTarPerm extractEntry test.js
482 silly lockFile 43304bd4-able-stream-node-modules-isarray tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/isarray
483 silly lockFile 43304bd4-able-stream-node-modules-isarray tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/isarray
484 silly lockFile 65c94fa9-on-npm-isarray-0-0-1-package-tgz tar:///Users/arobinson/.npm/isarray/0.0.1/package.tgz
485 silly lockFile 65c94fa9-on-npm-isarray-0-0-1-package-tgz tar:///Users/arobinson/.npm/isarray/0.0.1/package.tgz
486 silly lockFile 587d160e-ream-node-modules-string-decoder tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/string_decoder
487 silly lockFile 587d160e-ream-node-modules-string-decoder tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/string_decoder
488 silly lockFile c3470d87-ring-decoder-0-10-31-package-tgz tar:///Users/arobinson/.npm/string_decoder/0.10.31/package.tgz
489 silly lockFile c3470d87-ring-decoder-0-10-31-package-tgz tar:///Users/arobinson/.npm/string_decoder/0.10.31/package.tgz
490 silly lockFile 29985262-ble-stream-node-modules-inherits tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/inherits
491 silly lockFile 29985262-ble-stream-node-modules-inherits tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/inherits
492 info preinstall isarray@0.0.1
493 silly lockFile 345833d6-stream-node-modules-core-util-is tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/core-util-is
494 silly lockFile 345833d6-stream-node-modules-core-util-is tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/core-util-is
495 silly lockFile 37e25cb0-n-npm-inherits-2-0-1-package-tgz tar:///Users/arobinson/.npm/inherits/2.0.1/package.tgz
496 silly lockFile 37e25cb0-n-npm-inherits-2-0-1-package-tgz tar:///Users/arobinson/.npm/inherits/2.0.1/package.tgz
497 silly lockFile f4ca6182-m-core-util-is-1-0-1-package-tgz tar:///Users/arobinson/.npm/core-util-is/1.0.1/package.tgz
498 silly lockFile f4ca6182-m-core-util-is-1-0-1-package-tgz tar:///Users/arobinson/.npm/core-util-is/1.0.1/package.tgz
499 verbose readDependencies using package.json deps
500 verbose readDependencies using package.json deps
501 silly resolved []
502 verbose about to build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/isarray
503 info build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/isarray
504 verbose linkStuff [ false,
504 verbose linkStuff   false,
504 verbose linkStuff   false,
504 verbose linkStuff   '/Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules' ]
505 info linkStuff isarray@0.0.1
506 verbose linkBins isarray@0.0.1
507 verbose linkMans isarray@0.0.1
508 verbose rebuildBundles isarray@0.0.1
509 info install isarray@0.0.1
510 info postinstall isarray@0.0.1
511 info preinstall string_decoder@0.10.31
512 info preinstall inherits@2.0.1
513 verbose readDependencies using package.json deps
514 verbose readDependencies using package.json deps
515 silly resolved []
516 verbose about to build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/string_decoder
517 info build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/string_decoder
518 verbose linkStuff [ false,
518 verbose linkStuff   false,
518 verbose linkStuff   false,
518 verbose linkStuff   '/Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules' ]
519 info linkStuff string_decoder@0.10.31
520 verbose linkBins string_decoder@0.10.31
521 verbose linkMans string_decoder@0.10.31
522 verbose rebuildBundles string_decoder@0.10.31
523 verbose readDependencies using package.json deps
524 info preinstall core-util-is@1.0.1
525 info install string_decoder@0.10.31
526 verbose readDependencies using package.json deps
527 silly resolved []
528 verbose about to build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/inherits
529 info build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/inherits
530 verbose linkStuff [ false,
530 verbose linkStuff   false,
530 verbose linkStuff   false,
530 verbose linkStuff   '/Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules' ]
531 info linkStuff inherits@2.0.1
532 verbose linkBins inherits@2.0.1
533 verbose linkMans inherits@2.0.1
534 verbose rebuildBundles inherits@2.0.1
535 info install inherits@2.0.1
536 info postinstall string_decoder@0.10.31
537 verbose readDependencies using package.json deps
538 info postinstall inherits@2.0.1
539 verbose readDependencies using package.json deps
540 silly resolved []
541 verbose about to build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/core-util-is
542 info build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules/core-util-is
543 verbose linkStuff [ false,
543 verbose linkStuff   false,
543 verbose linkStuff   false,
543 verbose linkStuff   '/Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream/node_modules' ]
544 info linkStuff core-util-is@1.0.1
545 verbose linkBins core-util-is@1.0.1
546 verbose linkMans core-util-is@1.0.1
547 verbose rebuildBundles core-util-is@1.0.1
548 info install core-util-is@1.0.1
549 info postinstall core-util-is@1.0.1
550 verbose about to build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream
551 info build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/readable-stream
552 verbose linkStuff [ false,
552 verbose linkStuff   false,
552 verbose linkStuff   false,
552 verbose linkStuff   '/Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules' ]
553 info linkStuff readable-stream@1.0.31
554 verbose linkBins readable-stream@1.0.31
555 verbose linkMans readable-stream@1.0.31
556 verbose rebuildBundles readable-stream@1.0.31
557 verbose rebuildBundles [ 'core-util-is', 'inherits', 'isarray', 'string_decoder' ]
558 info install readable-stream@1.0.31
559 info postinstall readable-stream@1.0.31
560 http 304 https://registry.npmjs.org/nan
561 silly registry.get cb [ 304,
561 silly registry.get   { date: 'Fri, 06 Feb 2015 20:34:15 GMT',
561 silly registry.get     server: 'Apache',
561 silly registry.get     via: '1.1 varnish',
561 silly registry.get     'last-modified': 'Fri, 06 Feb 2015 20:34:10 GMT',
561 silly registry.get     'cache-control': 'max-age=60',
561 silly registry.get     etag: '"E91GIN9R7S0EBLG0K4VX7ZGGE"',
561 silly registry.get     age: '25',
561 silly registry.get     'x-served-by': 'cache-jfk1027-JFK',
561 silly registry.get     'x-cache': 'HIT',
561 silly registry.get     'x-cache-hits': '2',
561 silly registry.get     'x-timer': 'S1423254855.758140,VS0,VE0',
561 silly registry.get     vary: 'Accept',
561 silly registry.get     'content-length': '0',
561 silly registry.get     'keep-alive': 'timeout=10, max=50',
561 silly registry.get     connection: 'Keep-Alive' } ]
562 verbose etag nan from cache
563 silly lockFile d0ecca87-nan-1-5-0 nan@1.5.0
564 silly lockFile d0ecca87-nan-1-5-0 nan@1.5.0
565 http 304 https://registry.npmjs.org/bindings
566 silly registry.get cb [ 304,
566 silly registry.get   { date: 'Fri, 06 Feb 2015 20:34:15 GMT',
566 silly registry.get     server: 'Apache',
566 silly registry.get     via: '1.1 varnish',
566 silly registry.get     'last-modified': 'Fri, 06 Feb 2015 20:34:15 GMT',
566 silly registry.get     'cache-control': 'max-age=60',
566 silly registry.get     etag: '"BJGP1201ZXLWX88VO1W0N0YSR"',
566 silly registry.get     age: '9',
566 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
566 silly registry.get     'x-cache': 'HIT',
566 silly registry.get     'x-cache-hits': '1',
566 silly registry.get     'x-timer': 'S1423254855.761668,VS0,VE0',
566 silly registry.get     vary: 'Accept',
566 silly registry.get     'content-length': '0',
566 silly registry.get     'keep-alive': 'timeout=10, max=50',
566 silly registry.get     connection: 'Keep-Alive' } ]
567 verbose etag bindings from cache
568 silly lockFile e9060511-bindings-1-2-1 bindings@1.2.1
569 silly lockFile e9060511-bindings-1-2-1 bindings@1.2.1
570 silly resolved [ { name: 'nan',
570 silly resolved     version: '1.5.0',
570 silly resolved     description: 'Native Abstractions for Node.js: C++ header for Node 0.8->0.12 compatibility',
570 silly resolved     main: 'include_dirs.js',
570 silly resolved     repository: { type: 'git', url: 'git://github.com/rvagg/nan.git' },
570 silly resolved     scripts:
570 silly resolved      { test: 'tap --gc test/js/*-test.js',
570 silly resolved        'rebuild-tests': 'node-gyp rebuild --directory test' },
570 silly resolved     contributors:
570 silly resolved      [ [Object],
570 silly resolved        [Object],
570 silly resolved        [Object],
570 silly resolved        [Object],
570 silly resolved        [Object],
570 silly resolved        [Object],
570 silly resolved        [Object] ],
570 silly resolved     devDependencies:
570 silly resolved      { bindings: '~1.2.1',
570 silly resolved        'node-gyp': '~1.0.2',
570 silly resolved        tap: '~0.4.13',
570 silly resolved        xtend: '~4.0.0' },
570 silly resolved     license: 'MIT',
570 silly resolved     readme: 'Native Abstractions for Node.js\n===============================\n\n**A header file filled with macro and utility goodness for making add-on development for Node.js easier across versions 0.8, 0.10 and 0.11, and eventually 0.12.**\n\n***Current version: 1.5.0***\n\n*(See [CHANGELOG.md](https://github.com/rvagg/nan/blob/master/CHANGELOG.md) for complete ChangeLog)*\n\n[![NPM](https://nodei.co/npm/nan.png?downloads=true&downloadRank=true)](https://nodei.co/npm/nan/) [![NPM](https://nodei.co/npm-dl/nan.png?months=6&height=3)](https://nodei.co/npm/nan/)\n\n[![Build Status](https://secure.travis-ci.org/rvagg/nan.png)](http://travis-ci.org/rvagg/nan)\n[![Build status](https://ci.appveyor.com/api/projects/status/kh73pbm9dsju7fgh)](https://ci.appveyor.com/project/RodVagg/nan)\n\nThanks to the crazy changes in V8 (and some in Node core), keeping native addons compiling happily across versions, particularly 0.10 to 0.11/0.12, is a minor nightmare. The goal of this project is to store all logic necessary to develop native Node.js addons without having to inspect `NODE_MODULE_VERSION` and get yourself into a macro-tangle.\n\nThis project also contains some helper utilities that make addon development a bit more pleasant.\n\n * **[News & Updates](#news)**\n * **[Usage](#usage)**\n * **[Example](#example)**\n * **[API](#api)**\n\n<a name="news"></a>\n## News & Updates\n\n### Jan-2015: 1.5.0 release\n\n* Support [io.js](https://github.com/iojs/io.js) thanks to [Ben Noordhuis](bnoordhuis)\n* Rewritten NanNew internals thanks to [David Siegel](agnat)\n* NanAsyncWorker now supports progress reporting thanks to [Brett Lawson](brett19)\n\n### Aug-2014: 1.3.0 release\n\n* `NanCString()` and `NanRawString()` have been deprecated in favour of new <a href="#api_nan_ascii_string"><b><code>NanAsciiString</code></b></a>, <a href="#api_nan_utf8_string"><b><code>NanUtf8String</code></b></a> and <a href="#api_nan_ucs2_string"><b><code>NanUcs2String</code></b></a>. These classes manage the underlying memory for you in a safer way than just handing off an allocated array. You should now `*NanAsciiString(handle)` to access the raw `char` data, you can also allocate on the heap if you need to keep a reference.\n* Two more <a href="#api_nan_make_callback"><b><code>NanMakeCallback</code></b></a> overloads have been added to for parity with Node core.\n* You can now `NanNew(std::string)` (use `NanNew<std::string&>(std::string&)` to pass by reference)\n* <a href="#api_nan_set_template"><b><code>NanSetTemplate</code></b></a>, <a href="#api_nan_set_prototype_template"><b><code>NanSetPrototypeTemplate</code></b></a> and <a href="#api_nan_set_instance_template"><b><code>NanSetInstanceTemplate</code></b></a> have been added.\n\n### May-2014: 1.1.0 release\n\n* We\'ve deprecated `NanSymbol()`, you should just use `NanNew<String>()` now.\n* `NanNull()`, `NanUndefined()`, `NanTrue()`, `NanFalse()` all return `Local`s now.\n* `nan_isolate` is gone, it was intended to be internal-only but if you were using it then you should switch to `v8::Isolate::GetCurrent()`.\n* `NanNew()` has received some additional overload-love so you should be able to give it many kinds of values without specifying the `<Type>`.\n* Lots of small fixes and additions to expand the V8 API coverage, *use the source, Luke*.\n\n\n### May-2014: Major changes for V8 3.25 / Node 0.11.13\n\nNode 0.11.11 and 0.11.12 were both broken releases for native add-ons, you simply can\'t properly compile against either of them for different reasons. But we now have a 0.11.13 release that jumps a couple of versions of V8 ahead and includes some more, major (traumatic) API changes.\n\nBecause we are now nearing Node 0.12 and estimate that the version of V8 we are using in Node 0.11.13 will be close to the API we get for 0.12, we have taken the opportunity to not only *fix* NAN for 0.11.13 but make some major changes to improve the NAN API.\n\nWe have **removed support for Node 0.11 versions prior to 0.11.13**. As usual, our tests are run against (and pass) the last 5 versions of Node 0.8 and Node 0.10. We also include Node 0.11.13 obviously.\n\nThe major change is something that [Benjamin Byholm](kkoopa) has put many hours in to. We now have a fantastic new `NanNew<T>(args)` interface for creating new `Local`s, this replaces `NanNewLocal()` and much more. If you look in [./nan.h](nan.h) you\'ll see a large number of overloaded versions of this method. In general you should be able to `NanNew<Type>(arguments)` for any type you want to make a `Local` from. This includes `Persistent` types, so we now have a `Local<T> NanNew(const Persistent<T> arg)` to replace `NanPersistentToLocal()`.\n\nWe also now have `NanUndefined()`, `NanNull()`, `NanTrue()` and `NanFalse()`. Mainly because of the new requirement for an `Isolate` argument for each of the native V8 versions of this.\n\nV8 has now introduced an `EscapableHandleScope` from which you `scope.Escape(Local<T> value)` to *return* a value from a one scope to another. This replaces the standard `HandleScope` and `scope.Close(Local<T> value)`, although `HandleScope` still exists for when you don\'t need to return a handle to the caller. For NAN we are exposing it as `NanEscapableScope()` and `NanEscapeScope()`, while `NanScope()` is still how you create a new scope that doesn\'t need to return handles. For older versions of Node/V8, it\'ll still map to the older `HandleScope` functionality.\n\n`NanFromV8String()` was deprecated and has now been removed. You should use `NanCString()` or `NanRawString()` instead.\n\nBecause `node::MakeCallback()` now takes an `Isolate`, and because it doesn\'t exist in older versions of Node, we\'ve introduced `NanMakeCallback()`. You should *always* use this when calling a JavaScript function from C++.\n\nThere\'s lots more, check out the Changelog in nan.h or look through [#86](https://github.com/rvagg/nan/pull/86) for all the gory details.\n\n### Dec-2013: NanCString and NanRawString\n\nTwo new functions have been introduced to replace the functionality that\'s been provided by `NanFromV8String` until now. NanCString has sensible defaults so it\'s super easy to fetch a null-terminated c-style string out of a `v8::String`. `NanFromV8String` is still around and has defaults that allow you to pass a single handle to fetch a `char*` while `NanRawString` requires a little more attention to arguments.\n\n### Nov-2013: Node 0.11.9+ breaking V8 change\n\nThe version of V8 that\'s shipping with Node 0.11.9+ has changed the signature for new `Local`s to: `v8::Local<T>::New(isolate, value)`, i.e. introducing the `isolate` argument and therefore breaking all new `Local` declarations for previous versions. NAN 0.6+ now includes a `NanNewLocal<T>(value)` that can be used in place to work around this incompatibility and maintain compatibility with 0.8->0.11.9+ (minus a few early 0.11 releases).\n\nFor example, if you wanted to return a `null` on a callback you will have to change the argument from `v8::Local<v8::Value>::New(v8::Null())` to `NanNewLocal<v8::Value>(v8::Null())`.\n\n### Nov-2013: Change to binding.gyp `"include_dirs"` for NAN\n\nInclusion of NAN in a project\'s binding.gyp is now greatly simplified. You can now just use `"<!(node -e \\"require(\'nan\')\\")"` in your `"include_dirs"`, see example below (note Windows needs the quoting around `require` to be just right: `"require(\'nan\')"` with appropriate `\\` escaping).\n\n<a name="usage"></a>\n## Usage\n\nSimply add **NAN** as a dependency in the *package.json* of your Node addon:\n\n``` bash\n$ npm install --save nan\n```\n\nPull in the path to **NAN** in your *binding.gyp* so that you can use `#include <nan.h>` in your *.cpp* files:\n\n``` python\n"include_dirs" : [\n    "<!(node -e \\"require(\'nan\')\\")"\n]\n```\n\nThis works like a `-I<path-to-NAN>` when compiling your addon.\n\n<a name="example"></a>\n## Example\n\nSee **[LevelDOWN](https://github.com/rvagg/node-leveldown/pull/48)** for a full example of **NAN** in use.\n\nFor a simpler example, see the **[async pi estimation example](https://github.com/rvagg/nan/tree/master/examples/async_pi_estimate)** in the examples directory for full code and an explanation of what this Monte Carlo Pi estimation example does. Below are just some parts of the full example that illustrate the use of **NAN**.\n\nFor another example, see **[nan-example-eol](https://github.com/CodeCharmLtd/nan-example-eol)**. It shows newline detection implemented as a native addon.\n\nCompare to the current 0.10 version of this example, found in the [node-addon-examples](https://github.com/rvagg/node-addon-examples/tree/master/9_async_work) repository and also a 0.11 version of the same found [here](https://github.com/kkoopa/node-addon-examples/tree/5c01f58fc993377a567812597e54a83af69686d7/9_async_work).\n\nNote that there is no embedded version sniffing going on here and also the async work is made much simpler, see below for details on the `NanAsyncWorker` class.\n\n```c++\n// addon.cc\n#include <node.h>\n#include <nan.h>\n// ...\n\nusing v8::FunctionTemplate;\nusing v8::Handle;\nusing v8::Object;\nusing v8::String;\n\nvoid InitAll(Handle<Object> exports) {\n  exports->Set(NanNew<String>("calculateSync"),\n    NanNew<FunctionTemplate>(CalculateSync)->GetFunction());\n\n  exports->Set(NanNew<String>("calculateAsync"),\n    NanNew<FunctionTemplate>(CalculateAsync)->GetFunction());\n}\n\nNODE_MODULE(addon, InitAll)\n```\n\n```c++\n// sync.h\n#include <node.h>\n#include <nan.h>\n\nNAN_METHOD(CalculateSync);\n```\n\n```c++\n// sync.cc\n#include <node.h>\n#include <nan.h>\n#include "./sync.h"\n// ...\n\nusing v8::Number;\n\n// Simple synchronous access to the `Estimate()` function\nNAN_METHOD(CalculateSync) {\n  NanScope();\n\n  // expect a number as the first argument\n  int points = args[0]->Uint32Value();\n  double est = Estimate(points);\n\n  NanReturnValue(NanNew<Number>(est));\n}\n```\n\n```c++\n// async.h\n#include <node.h>\n#include <nan.h>\n\nNAN_METHOD(CalculateAsync);\n```\n\n```c++\n// async.cc\n#include <node.h>\n#include <nan.h>\n#include "./async.h"\n\n// ...\n\nusing v8::Function;\nusing v8::Local;\nusing v8::Null;\nusing v8::Number;\nusing v8::Value;\n\nclass PiWorker : public NanAsyncWorker {\n public:\n  PiWorker(NanCallback *callback, int points)\n    : NanAsyncWorker(callback), points(points) {}\n  ~PiWorker() {}\n\n  // Executed inside the worker-thread.\n  // It is not safe to access V8, or V8 data structures\n  // here, so everything we need for input and output\n  // should go on `this`.\n  void Execute () {\n    estimate = Estimate(points);\n  }\n\n  // Executed when the async work is complete\n  // this function will be run inside the main event loop\n  // so it is safe to use V8 again\n  void HandleOKCallback () {\n    NanScope();\n\n    Local<Value> argv[] = {\n        NanNull()\n      , NanNew<Number>(estimate)\n    };\n\n    callback->Call(2, argv);\n  };\n\n private:\n  int points;\n  double estimate;\n};\n\n// Asynchronous access to the `Estimate()` function\nNAN_METHOD(CalculateAsync) {\n  NanScope();\n\n  int points = args[0]->Uint32Value();\n  NanCallback *callback = new NanCallback(args[1].As<Function>());\n\n  NanAsyncQueueWorker(new PiWorker(callback, points));\n  NanReturnUndefined();\n}\n```\n\n<a name="api"></a>\n## API\n\n * <a href="#api_nan_method"><b><code>NAN_METHOD</code></b></a>\n * <a href="#api_nan_getter"><b><code>NAN_GETTER</code></b></a>\n * <a href="#api_nan_setter"><b><code>NAN_SETTER</code></b></a>\n * <a href="#api_nan_property_getter"><b><code>NAN_PROPERTY_GETTER</code></b></a>\n * <a href="#api_nan_property_setter"><b><code>NAN_PROPERTY_SETTER</code></b></a>\n * <a href="#api_nan_property_enumerator"><b><code>NAN_PROPERTY_ENUMERATOR</code></b></a>\n * <a href="#api_nan_property_deleter"><b><code>NAN_PROPERTY_DELETER</code></b></a>\n * <a href="#api_nan_property_query"><b><code>NAN_PROPERTY_QUERY</code></b></a>\n * <a href="#api_nan_index_getter"><b><code>NAN_INDEX_GETTER</code></b></a>\n * <a href="#api_nan_index_setter"><b><code>NAN_INDEX_SETTER</code></b></a>\n * <a href="#api_nan_index_enumerator"><b><code>NAN_INDEX_ENUMERATOR</code></b></a>\n * <a href="#api_nan_index_deleter"><b><code>NAN_INDEX_DELETER</code></b></a>\n * <a href="#api_nan_index_query"><b><code>NAN_INDEX_QUERY</code></b></a>\n * <a href="#api_nan_gc_callback"><b><code>NAN_GC_CALLBACK</code></b></a>\n * <a href="#api_nan_weak_callback"><b><code>NAN_WEAK_CALLBACK</code></b></a>\n * <a href="#api_nan_deprecated"><b><code>NAN_DEPRECATED</code></b></a>\n * <a href="#api_nan_inline"><b><code>NAN_INLINE</code></b></a>\n * <a href="#api_nan_new"><b><code>NanNew</code></b></a>\n * <a href="#api_nan_undefined"><b><code>NanUndefined</code></b></a>\n * <a href="#api_nan_null"><b><code>NanNull</code></b></a>\n * <a href="#api_nan_true"><b><code>NanTrue</code></b></a>\n * <a href="#api_nan_false"><b><code>NanFalse</code></b></a>\n * <a href="#api_nan_return_value"><b><code>NanReturnValue</code></b></a>\n * <a href="#api_nan_return_undefined"><b><code>NanReturnUndefined</code></b></a>\n * <a href="#api_nan_return_null"><b><code>NanReturnNull</code></b></a>\n * <a href="#api_nan_return_empty_string"><b><code>NanReturnEmptyString</code></b></a>\n * <a href="#api_nan_return_this"><b><code>NanReturnThis</code></b></a>\n * <a href="#api_nan_return_holder"><b><code>NanReturnHolder</code></b></a>\n * <a href="#api_nan_scope"><b><code>NanScope</code></b></a>\n * <a href="#api_nan_escapable_scope"><b><code>NanEscapableScope</code></b></a>\n * <a href="#api_nan_escape_scope"><b><code>NanEscapeScope</code></b></a>\n * <a href="#api_nan_locker"><b><code>NanLocker</code></b></a>\n * <a href="#api_nan_unlocker"><b><code>NanUnlocker</code></b></a>\n * <a href="#api_nan_get_internal_field_pointer"><b><code>NanGetInternalFieldPointer</code></b></a>\n * <a href="#api_nan_set_internal_field_pointer"><b><code>NanSetInternalFieldPointer</code></b></a>\n * <a href="#api_nan_object_wrap_handle"><b><code>NanObjectWrapHandle</code></b></a>\n * <del><a href="#api_nan_symbol"><b><code>NanSymbol</code></b></a></del>\n * <a href="#api_nan_get_pointer_safe"><b><code>NanGetPointerSafe</code></b></a>\n * <a href="#api_nan_set_pointer_safe"><b><code>NanSetPointerSafe</code></b></a>\n * <del><a href="#api_nan_raw_string"><b><code>NanRawString</code></b></a></del>\n * <del><a href="#api_nan_c_string"><b><code>NanCString</code></b></a></del>\n * <a href="#api_nan_ascii_string"><b><code>NanAsciiString</code></b></a>\n * <a href="#api_nan_utf8_string"><b><code>NanUtf8String</code></b></a>\n * <a href="#api_nan_ucs2_string"><b><code>NanUcs2String</code></b></a>\n * <a href="#api_nan_boolean_option_value"><b><code>NanBooleanOptionValue</code></b></a>\n * <a href="#api_nan_uint32_option_value"><b><code>NanUInt32OptionValue</code></b></a>\n * <a href="#api_nan_error"><b><code>NanError</code></b>, <b><code>NanTypeError</code></b>, <b><code>NanRangeError</code></b></a>\n * <a href="#api_nan_throw_error"><b><code>NanThrowError</code></b>, <b><code>NanThrowTypeError</code></b>, <b><code>NanThrowRangeError</code></b>, <b><code>NanThrowError(Handle<Value>)</code></b>, <b><code>NanThrowError(Handle<Value>, int)</code></b></a>\n * <a href="#api_nan_new_buffer_handle"><b><code>NanNewBufferHandle(char *, size_t, FreeCallback, void *)</code></b>, <b><code>NanNewBufferHandle(char *, uint32_t)</code></b>, <b><code>NanNewBufferHandle(uint32_t)</code></b></a>\n * <a href="#api_nan_buffer_use"><b><code>NanBufferUse(char *, uint32_t)</code></b></a>\n * <a href="#api_nan_new_context_handle"><b><code>NanNewContextHandle</code></b></a>\n * <a href="#api_nan_get_current_context"><b><code>NanGetCurrentContext</code></b></a>\n * <a href="#api_nan_has_instance"><b><code>NanHasInstance</code></b></a>\n * <a href="#api_nan_dispose_persistent"><b><code>NanDisposePersistent</code></b></a>\n * <a href="#api_nan_assign_persistent"><b><code>NanAssignPersistent</code></b></a>\n * <a href="#api_nan_make_weak_persistent"><b><code>NanMakeWeakPersistent</code></b></a>\n * <a href="#api_nan_set_template"><b><code>NanSetTemplate</code></b></a>\n * <a href="#api_nan_set_prototype_template"><b><code>NanSetPrototypeTemplate</code></b></a>\n * <a href="#api_nan_set_instance_template"><b><code>NanSetInstanceTemplate</code></b></a>\n * <a href="#api_nan_make_callback"><b><code>NanMakeCallback</code></b></a>\n * <a href="#api_nan_compile_script"><b><code>NanCompileScript</code></b></a>\n * <a href="#api_nan_run_script"><b><code>NanRunScript</code></b></a>\n * <a href="#api_nan_adjust_external_memory"><b><code>NanAdjustExternalMemory</code></b></a>\n * <a href="#api_nan_add_gc_epilogue_callback"><b><code>NanAddGCEpilogueCallback</code></b></a>\n * <a href="#api_nan_add_gc_prologue_callback"><b><code>NanAddGCPrologueCallback</code></b></a>\n * <a href="#api_nan_remove_gc_epilogue_callback"><b><code>NanRemoveGCEpilogueCallback</code></b></a>\n * <a href="#api_nan_remove_gc_prologue_callback"><b><code>NanRemoveGCPrologueCallback</code></b></a>\n * <a href="#api_nan_get_heap_statistics"><b><code>NanGetHeapStatistics</code></b></a>\n * <a href="#api_nan_callback"><b><code>NanCallback</code></b></a>\n * <a href="#api_nan_async_worker"><b><code>NanAsyncWorker</code></b></a>\n * <a href="#api_nan_async_queue_worker"><b><code>NanAsyncQueueWorker</code></b></a>\n\n<a name="api_nan_method"></a>\n### NAN_METHOD(methodname)\n\nUse `NAN_METHOD` to define your V8 accessible methods:\n\n```c++\n// .h:\nclass Foo : public node::ObjectWrap {\n  ...\n\n  static NAN_METHOD(Bar);\n  static NAN_METHOD(Baz);\n}\n\n\n// .cc:\nNAN_METHOD(Foo::Bar) {\n  ...\n}\n\nNAN_METHOD(Foo::Baz) {\n  ...\n}\n```\n\nThe reason for this macro is because of the method signature change in 0.11:\n\n```c++\n// 0.10 and below:\nHandle<Value> name(const Arguments& args)\n\n// 0.11 and above\nvoid name(const FunctionCallbackInfo<Value>& args)\n```\n\nThe introduction of `FunctionCallbackInfo` brings additional complications:\n\n<a name="api_nan_getter"></a>\n### NAN_GETTER(methodname)\n\nUse `NAN_GETTER` to declare your V8 accessible getters. You get a `Local<String>` `property` and an appropriately typed `args` object that can act like the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_GETTER`.\n\n<a name="api_nan_setter"></a>\n### NAN_SETTER(methodname)\n\nUse `NAN_SETTER` to declare your V8 accessible setters. Same as `NAN_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_property_getter"></a>\n### NAN_PROPERTY_GETTER(cbname)\nUse `NAN_PROPERTY_GETTER` to declare your V8 accessible property getters. You get a `Local<String>` `property` and an appropriately typed `args` object that can act similar to the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_GETTER`.\n\n<a name="api_nan_property_setter"></a>\n### NAN_PROPERTY_SETTER(cbname)\nUse `NAN_PROPERTY_SETTER` to declare your V8 accessible property setters. Same as `NAN_PROPERTY_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_property_enumerator"></a>\n### NAN_PROPERTY_ENUMERATOR(cbname)\nUse `NAN_PROPERTY_ENUMERATOR` to declare your V8 accessible property enumerators. You get an appropriately typed `args` object like the `args` argument to a `NAN_PROPERTY_GETTER` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_ENUMERATOR`.\n\n<a name="api_nan_property_deleter"></a>\n### NAN_PROPERTY_DELETER(cbname)\nUse `NAN_PROPERTY_DELETER` to declare your V8 accessible property deleters. Same as `NAN_PROPERTY_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_DELETER`.\n\n<a name="api_nan_property_query"></a>\n### NAN_PROPERTY_QUERY(cbname)\nUse `NAN_PROPERTY_QUERY` to declare your V8 accessible property queries. Same as `NAN_PROPERTY_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_QUERY`.\n\n<a name="api_nan_index_getter"></a>\n### NAN_INDEX_GETTER(cbname)\nUse `NAN_INDEX_GETTER` to declare your V8 accessible index getters. You get a `uint32_t` `index` and an appropriately typed `args` object that can act similar to the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_GETTER`.\n\n<a name="api_nan_index_setter"></a>\n### NAN_INDEX_SETTER(cbname)\nUse `NAN_INDEX_SETTER` to declare your V8 accessible index setters. Same as `NAN_INDEX_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_index_enumerator"></a>\n### NAN_INDEX_ENUMERATOR(cbname)\nUse `NAN_INDEX_ENUMERATOR` to declare your V8 accessible index enumerators. You get an appropriately typed `args` object like the `args` argument to a `NAN_INDEX_GETTER` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_ENUMERATOR`.\n\n<a name="api_nan_index_deleter"></a>\n### NAN_INDEX_DELETER(cbname)\nUse `NAN_INDEX_DELETER` to declare your V8 accessible index deleters. Same as `NAN_INDEX_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_DELETER`.\n\n<a name="api_nan_index_query"></a>\n### NAN_INDEX_QUERY(cbname)\nUse `NAN_INDEX_QUERY` to declare your V8 accessible index queries. Same as `NAN_INDEX_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_QUERY`.\n\n<a name="api_nan_gc_callback"></a>\n### NAN_GC_CALLBACK(cbname)\nUse `NAN_GC_CALLBACK` to declare your callbacks for `NanAddGCEpilogueCallback` and `NanAddGCPrologueCallback`. You get arguments `GCType type` and `GCCallbackFlags flags`.\n\n```c++\nstatic Persistent<Function> callback;\n\nNAN_GC_CALLBACK(gcPrologueCallback) {\n  Local<Value> argv[] = {NanNew("prologue")};\n  NanMakeCallback(NanGetCurrentContext()->Global(), NanNew(callback), 1, argv);\n}\n\nNAN_METHOD(Hook) {\n  NanScope();\n  NanAssignPersistent(callback, args[0].As<Function>());\n  NanAddGCPrologueCallback(gcPrologueCallback);\n  NanReturnValue(args.Holder());\n}\n```\n\n<a name="api_nan_weak_callback"></a>\n### NAN_WEAK_CALLBACK(cbname)\n\nUse `NAN_WEAK_CALLBACK` to define your V8 WeakReference callbacks. There is an argument object `const _NanWeakCallbackData<T, P> &data` allowing access to the weak object and the supplied parameter through its `GetValue` and `GetParameter` methods. You can even access the weak callback info object through the `GetCallbackInfo()`method, but you probably should not. `Revive()` keeps the weak object alive until the next GC round.\n\n```c++\nNAN_WEAK_CALLBACK(weakCallback) {\n  int *parameter = data.GetParameter();\n  NanMakeCallback(NanGetCurrentContext()->Global(), data.GetValue(), 0, NULL);\n  if ((*parameter)++ == 0) {\n    data.Revive();\n  } else {\n    delete parameter;\n  }\n}\n```\n\n<a name="api_nan_deprecated"></a>\n### NAN_DEPRECATED\nDeclares a function as deprecated.\n\n```c++\nstatic NAN_DEPRECATED NAN_METHOD(foo) {\n  ...\n}\n```\n\n<a name="api_nan_inline"></a>\n### NAN_INLINE\nInlines a function.\n\n```c++\nNAN_INLINE int foo(int bar) {\n  ...\n}\n```\n\n<a name="api_nan_new"></a>\n### Local&lt;T&gt; NanNew&lt;T&gt;( ... )\n\nUse `NanNew` to construct almost all v8 objects (bound `Script`s are constructed with <a href="#api_nan_compile_script">`NanCompileScript(Handle)`</a>) and make new local handles.\n\n```c++\nLocal<String> s = NanNew<String>("value");\n\n...\n\nPersistent<Object> o;\n\n...\n\nLocal<Object> lo = NanNew(o);\n\n```\n\n<a name="api_nan_undefined"></a>\n### Local&lt;Primitive&gt; NanUndefined()\n\nUse instead of `Undefined()`\n\n<a name="api_nan_null"></a>\n### Local&lt;Primitive&gt; NanNull()\n\nUse instead of `Null()`\n\n<a name="api_nan_true"></a>\n### Local&lt;Boolean&gt; NanTrue()\n\nUse instead of `True()`\n\n<a name="api_nan_false"></a>\n### Local&lt;Boolean&gt; NanFalse()\n\nUse instead of `False()`\n\n<a name="api_nan_return_value"></a>\n### NanReturnValue(Handle&lt;Value&gt;)\n\nUse `NanReturnValue` when you want to return a value from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  ...\n\n  NanReturnValue(NanNew<String>("FooBar!"));\n}\n```\n\nNo `return` statement required.\n\n<a name="api_nan_return_undefined"></a>\n### NanReturnUndefined()\n\nUse `NanReturnUndefined` when you don\'t want to return anything from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnUndefined();\n}\n```\n\n<a name="api_nan_return_null"></a>\n### NanReturnNull()\n\nUse `NanReturnNull` when you want to return `Null` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnNull();\n}\n```\n\n<a name="api_nan_return_empty_string"></a>\n### NanReturnEmptyString()\n\nUse `NanReturnEmptyString` when you want to return an empty `String` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnEmptyString();\n}\n```\n\n<a name="api_nan_return_this"></a>\n### NanReturnThis()\n\nUse `NanReturnThis` when you want to return `This` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnThis();\n}\n```\n\n<a name="api_nan_return_holder"></a>\n### NanReturnHolder()\n\nUse `NanReturnHolder` when you want to return `Holder` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnHolder();\n}\n```\n\n<a name="api_nan_scope"></a>\n### NanScope()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanScope()` necessary, use it in place of `HandleScope scope` when you do not wish to return handles (`Handle` or `Local`) to the surrounding scope (or in functions directly exposed to V8, as they do not return values in the normal sense):\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanScope();\n\n  NanReturnValue(NanNew<String>("FooBar!"));\n}\n```\n\nThis method is not directly exposed to V8, nor does it return a handle, so it uses an unescapable scope:\n\n```c++\nbool Foo::Bar() {\n  NanScope();\n\n  Local<Boolean> val = NanFalse();\n  ...\n  return val->Value();\n}\n```\n\n<a name="api_nan_escapable_scope"></a>\n### NanEscapableScope()\n\nThe separation of handle scopes into escapable and inescapable scopes makes `NanEscapableScope()` necessary, use it in place of `HandleScope scope` when you later wish to return a handle (`Handle` or `Local`) from the scope, this is for internal functions not directly exposed to V8:\n\n```c++\nHandle<String> Foo::Bar() {\n  NanEscapableScope();\n\n  return NanEscapeScope(NanNew<String>("FooBar!"));\n}\n```\n\n<a name="api_nan_escape_scope"></a>\n### Local&lt;T&gt; NanEscapeScope(Handle&lt;T&gt; value);\nUse together with `NanEscapableScope` to escape the scope. Corresponds to `HandleScope::Close` or `EscapableHandleScope::Escape`.\n\n<a name="api_nan_locker"></a>\n### NanLocker()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanLocker()` necessary, use it in place of `Locker locker`:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanLocker();\n  ...\n  NanUnlocker();\n}\n```\n\n<a name="api_nan_unlocker"></a>\n### NanUnlocker()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanUnlocker()` necessary, use it in place of `Unlocker unlocker`:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanLocker();\n  ...\n  NanUnlocker();\n}\n```\n\n<a name="api_nan_get_internal_field_pointer"></a>\n### void * NanGetInternalFieldPointer(Handle&lt;Object&gt;, int)\n\nGets a pointer to the internal field with at `index` from a V8 `Object` handle.\n\n```c++\nLocal<Object> obj;\n...\nNanGetInternalFieldPointer(obj, 0);\n```\n<a name="api_nan_set_internal_field_pointer"></a>\n### void NanSetInternalFieldPointer(Handle&lt;Object&gt;, int, void *)\n\nSets the value of the internal field at `index` on a V8 `Object` handle.\n\n```c++\nstatic Persistent<Function> dataWrapperCtor;\n...\nLocal<Object> wrapper = NanNew(dataWrapperCtor)->NewInstance();\nNanSetInternalFieldPointer(wrapper, 0, this);\n```\n\n<a name="api_nan_object_wrap_handle"></a>\n### Local&lt;Object&gt; NanObjectWrapHandle(Object)\n\nWhen you want to fetch the V8 object handle from a native object you\'ve wrapped with Node\'s `ObjectWrap`, you should use `NanObjectWrapHandle`:\n\n```c++\nNanObjectWrapHandle(iterator)->Get(NanNew<String>("end"))\n```\n\n<a name="api_nan_symbol"></a>\n### ~~Local&lt;String&gt; NanSymbol(const char *)~~\n\nDeprecated. Use `NanNew<String>` instead.\n~~Use to create string symbol objects (i.e. `v8::String::NewSymbol(x)`), for getting and setting object properties, or names of objects.~~\n\n```c++\nbool foo = false;\nif (obj->Has(NanNew<String>("foo")))\n  foo = optionsObj->Get(NanNew<String>("foo"))->BooleanValue()\n```\n\n<a name="api_nan_get_pointer_safe"></a>\n### Type NanGetPointerSafe(Type *[, Type])\n\nA helper for getting values from optional pointers. If the pointer is `NULL`, the function returns the optional default value, which defaults to `0`.  Otherwise, the function returns the value the pointer points to.\n\n```c++\nchar *plugh(uint32_t *optional) {\n  char res[] = "xyzzy";\n  uint32_t param = NanGetPointerSafe<uint32_t>(optional, 0x1337);\n  switch (param) {\n    ...\n  }\n  NanSetPointerSafe<uint32_t>(optional, 0xDEADBEEF);\n}  \n```\n\n<a name="api_nan_set_pointer_safe"></a>\n### bool NanSetPointerSafe(Type *, Type)\n\nA helper for setting optional argument pointers. If the pointer is `NULL`, the function simply returns `false`.  Otherwise, the value is assigned to the variable the pointer points to.\n\n```c++\nconst char *plugh(size_t *outputsize) {\n  char res[] = "xyzzy";\n  if !(NanSetPointerSafe<size_t>(outputsize, strlen(res) + 1)) {\n    ...\n  }\n\n  ...\n}\n```\n\n<a name="api_nan_raw_string"></a>\n### ~~void* NanRawString(Handle&lt;Value&gt;, enum Nan::Encoding, size_t *, void *, size_t, int)~~\n\nDeprecated. Use something else.\n\n~~When you want to convert a V8 `String` to a `char*` buffer, use `NanRawString`. You have to supply an encoding as well as a pointer to a variable that will be assigned the number of bytes in the returned string. It is also possible to supply a buffer and its length to the function in order not to have a new buffer allocated. The final argument allows setting `String::WriteOptions`.\nJust remember that you\'ll end up with an object that you\'ll need to `delete[]` at some point unless you supply your own buffer:~~\n\n```c++\nsize_t count;\nvoid* decoded = NanRawString(args[1], Nan::BASE64, &count, NULL, 0, String::HINT_MANY_WRITES_EXPECTED);\n...\ndelete[] reinterpret_cast<char*>(decoded);\n```\n\n<a name="api_nan_c_string"></a>\n### ~~char* NanCString(Handle&lt;Value&gt;, size_t *[, char *, size_t, int])~~\n\nDeprecated. Use `String::Utf8Value` or `NanUtf8String` instead.\n\n~~When you want to convert a V8 `String` to a null-terminated C `char*` use `NanCString`. The resulting `char*` will be UTF-8-encoded, and you need to supply a pointer to a variable that will be assigned the number of bytes in the returned string. It is also possible to supply a buffer and its length to the function in order not to have a new buffer allocated. The final argument allows optionally setting `String::WriteOptions`, which default to `v8::String::NO_OPTIONS`.\nJust remember that you\'ll end up with an object that you\'ll need to `delete[]` at some point unless you supply your own buffer:~~\n\n```c++\nsize_t count;\nchar* name = NanCString(args[0], &count);\n...\ndelete[] name;\n```\n\n<a name="api_nan_ascii_string"></a>\n### NanAsciiString\n\nContrary to the name, this is not actually an ASCII string, it is a one-byte string with no particular encoding. Do not use unless you actually need this incorrect legacy behavior. Consider fixing your broken code instead. If you actually have a proper ASCII-string, use UTF-8, which is a proper superset of ASCII.\nConvert a `String` to zero-terminated, sort-of Ascii-encoded `char *`. The underlying buffer is freed when the owner object goes out of scope, so make a copy or heap allocation if you need it to stick around.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanAsciiString(arg[0])));\n}\n```\n\n####*WRONG*:\nthe buffer `str` points to has been freed when `baz` was destroyed:\n```c++\nstatic char *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  NanAsciiString baz(arg[0]);\n\n  str = *baz;\n  NanReturnUndefined(); // baz goes out of scope, freeing str\n}\n\n...\n\nprintf(str); // use-after-free error\n```\n\n####*RIGHT*:\n```c++\nstatic NanAsciiString *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  str = new NanAsciiString(arg[0]);\n  NanReturnUndefined();\n}\n\n...\n\nprintf(**str);\n```\n\n<a name="api_nan_utf8_string"></a>\n### NanUtf8String\n\nEquivalent to `String::Utf8Value`, it only exists for the sake of completeness.\nConvert a `String` to zero-terminated, Utf8-encoded `char *`. The underlying buffer is freed when the owner object goes out of scope, so make a copy or heap allocation if you need it to stick around.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanUtf8String(arg[0])));\n}\n```\n\n####*WRONG*:\nthe buffer `str` points to has been freed when `baz` was destroyed:\n```c++\nstatic char *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  NanUtf8String baz(arg[0]);\n\n  str = *baz;\n  NanReturnUndefined(); // baz goes out of scope, freeing str\n}\n\n...\n\nprintf(str); // use-after-free error\n```\n\n####*RIGHT*:\n```c++\nstatic NanUtf8String *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  str = new NanUtf8String(arg[0]);\n  NanReturnUndefined();\n}\n\n...\n\nprintf(**str);\n```\n\n\n<a name="api_nan_ucs2_string"></a>\n### NanUcs2String\n\nEquivalent to `String::Value`, it only exists for the sake of completeness.\nConvert a `String` to zero-terminated, Ucs2-encoded `uint16_t *`. The underlying buffer is freed when the owner object goes out of scope, so make a copy or heap allocation if you need it to stick around.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanUcs2String(arg[0])));\n}\n```\n\n####*WRONG*:\nthe buffer `str` points to has been freed when `baz` was destroyed:\n```c++\nstatic char *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  NanUcs2String baz(arg[0]);\n\n  str = *baz;\n  NanReturnUndefined(); // baz goes out of scope, freeing str\n}\n\n...\n\nprintf(str); // use-after-free error\n```\n\n####*RIGHT*:\n```c++\nstatic NanUcs2String *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  str = new NanUcs2String(arg[0]);\n  NanReturnUndefined();\n}\n\n...\n\nprintf(**str);\n```\n\n<a name="api_nan_boolean_option_value"></a>\n### bool NanBooleanOptionValue(Handle&lt;Value&gt;, Handle&lt;String&gt;[, bool])\n\nWhen you have an "options" object that you need to fetch properties from, boolean options can be fetched with this pair. They check first if the object exists (`IsEmpty`), then if the object has the given property (`Has`) then they get and convert/coerce the property to a `bool`.\n\nThe optional last parameter is the *default* value, which is `false` if left off:\n\n```c++\n// `foo` is false unless the user supplies a truthy value for it\nbool foo = NanBooleanOptionValue(optionsObj, NanNew<String>("foo"));\n// `bar` is true unless the user supplies a falsy value for it\nbool bar = NanBooleanOptionValueDefTrue(optionsObj, NanNew<String>("bar"), true);\n```\n\n<a name="api_nan_uint32_option_value"></a>\n### uint32_t NanUInt32OptionValue(Handle&lt;Value&gt;, Handle&lt;String&gt;, uint32_t)\n\nSimilar to `NanBooleanOptionValue`, use `NanUInt32OptionValue` to fetch an integer option from your options object. Can be any kind of JavaScript `Number` and it will be coerced to an unsigned 32-bit integer.\n\nRequires all 3 arguments as a default is not optional:\n\n```c++\nuint32_t count = NanUInt32OptionValue(optionsObj, NanNew<String>("count"), 1024);\n```\n\n<a name="api_nan_error"></a>\n### NanError(message), NanTypeError(message), NanRangeError(message)\n\nFor making `Error`, `TypeError` and `RangeError` objects.\n\n```c++\nLocal<Value> res = NanError("you must supply a callback argument");\n```\n\n<a name="api_nan_throw_error"></a>\n### NanThrowError(message), NanThrowTypeError(message), NanThrowRangeError(message), NanThrowError(Local&lt;Value&gt;), NanThrowError(Local&lt;Value&gt;, int)\n\nFor throwing `Error`, `TypeError` and `RangeError` objects.\n\n```c++\nNanThrowError("you must supply a callback argument");\n```\n\nCan also handle any custom object you may want to throw. If used with the error code argument, it will add the supplied error code to the error object as a property called `code`.\n\n<a name="api_nan_new_buffer_handle"></a>\n### Local&lt;Object&gt; NanNewBufferHandle(char *, uint32_t), Local&lt;Object&gt; NanNewBufferHandle(uint32_t)\n\nThe `Buffer` API has changed a little in Node 0.11, this helper provides consistent access to `Buffer` creation:\n\n```c++\nNanNewBufferHandle((char*)value.data(), value.size());\n```\n\nCan also be used to initialize a `Buffer` with just a `size` argument.\n\nCan also be supplied with a `NanFreeCallback` and a hint for the garbage collector.\n\n<a name="api_nan_buffer_use"></a>\n### Local&lt;Object&gt; NanBufferUse(char*, uint32_t)\n\n`Buffer::New(char*, uint32_t)` prior to 0.11 would make a copy of the data.\nWhile it was possible to get around this, it required a shim by passing a\ncallback. So the new API `Buffer::Use(char*, uint32_t)` was introduced to remove\nneeding to use this shim.\n\n`NanBufferUse` uses the `char*` passed as the backing data, and will free the\nmemory automatically when the weak callback is called. Keep this in mind, as\ncareless use can lead to "double free or corruption" and other cryptic failures.\n\n<a name="api_nan_has_instance"></a>\n### bool NanHasInstance(Persistent&lt;FunctionTemplate&gt;&, Handle&lt;Value&gt;)\n\nCan be used to check the type of an object to determine it is of a particular class you have already defined and have a `Persistent<FunctionTemplate>` handle for.\n\n<a name="api_nan_new_context_handle"></a>\n### Local&lt;Context&gt; NanNewContextHandle([ExtensionConfiguration*, Handle&lt;ObjectTemplate&gt;, Handle&lt;Value&gt;])\nCreates a new `Local<Context>` handle.\n\n```c++\nLocal<FunctionTemplate> ftmpl = NanNew<FunctionTemplate>();\nLocal<ObjectTemplate> otmpl = ftmpl->InstanceTemplate();\nLocal<Context> ctx =  NanNewContextHandle(NULL, otmpl);\n```\n\n<a name="api_nan_get_current_context"></a>\n### Local&lt;Context&gt; NanGetCurrentContext()\n\nGets the current context.\n\n```c++\nLocal<Context> ctx = NanGetCurrentContext();\n```\n\n<a name="api_nan_dispose_persistent"></a>\n### void NanDisposePersistent(Persistent&lt;T&gt; &)\n\nUse `NanDisposePersistent` to dispose a `Persistent` handle.\n\n```c++\nNanDisposePersistent(persistentHandle);\n```\n\n<a name="api_nan_assign_persistent"></a>\n### NanAssignPersistent(handle, object)\n\nUse `NanAssignPersistent` to assign a non-`Persistent` handle to a `Persistent` one. You can no longer just declare a `Persistent` handle and assign directly to it later, you have to `Reset` it in Node 0.11, so this makes it easier.\n\nIn general it is now better to place anything you want to protect from V8\'s garbage collector as properties of a generic `Object` and then assign that to a `Persistent`. This works in older versions of Node also if you use `NanAssignPersistent`:\n\n```c++\nPersistent<Object> persistentHandle;\n\n...\n\nLocal<Object> obj = NanNew<Object>();\nobj->Set(NanNew<String>("key"), keyHandle); // where keyHandle might be a Local<String>\nNanAssignPersistent(persistentHandle, obj)\n```\n\n<a name="api_nan_make_weak_persistent"></a>\n### _NanWeakCallbackInfo&lt;T, P&gt;* NanMakeWeakPersistent(Handle&lt;T&gt;, P*, _NanWeakCallbackInfo&lt;T, P&gt;::Callback)\n\nCreates a weak persistent handle with the supplied parameter and `NAN_WEAK_CALLBACK`.\n\n```c++\nNAN_WEAK_CALLBACK(weakCallback) {\n\n...\n\n}\n\nLocal<Function> func;\n\n...\n\nint *parameter = new int(0);\nNanMakeWeakPersistent(func, parameter, &weakCallback);\n```\n\n<a name="api_nan_set_template"></a>\n### NanSetTemplate(templ, name, value [, attributes])\n\nUse to add properties on object and function templates.\n\n<a name="api_nan_set_prototype_template"></a>\n### NanSetPrototypeTemplate(templ, name, value [, attributes])\n\nUse to add prototype properties on function templates.\n\n<a name="api_nan_set_instance_template"></a>\n### NanSetInstanceTemplate(templ, name, value [, attributes])\n\nUse to add instance properties on function templates.\n\n<a name="api_nan_make_callback"></a>\n### NanMakeCallback(target, func, argc, argv)\n\nUse instead of `node::MakeCallback` to call javascript functions. This (or `NanCallback`) is the only proper way of calling functions. You must _*never, ever*_ directly use `Function::Call`, it will lead to run-time failures.\n\n<a name="api_nan_compile_script"></a>\n### NanCompileScript(Handle<String> s [, const ScriptOrigin&amp; origin])\n\nUse to create new scripts bound to the current context.\n\n<a name="api_nan_run_script"></a>\n### NanRunScript(script)\n\nUse to run both bound and unbound scripts.\n\n<a name="api_nan_adjust_external_memory"></a>\n### NanAdjustExternalMemory(int change_in_bytes)\n\nSimply does `AdjustAmountOfExternalAllocatedMemory`, note that the argument and returned value have type `int`.\n\n<a name="api_nan_add_gc_epilogue_callback"></a>\n### NanAddGCEpilogueCallback(GCEpilogueCallback callback, GCType gc_type_filter=kGCTypeAll)\n\nSimply does `AddGCEpilogueCallback`\n\n<a name="api_nan_add_gc_prologue_callback"></a>\n### NanAddGCPrologueCallback(GCPrologueCallback callback, GCType gc_type_filter=kGCTypeAll)\n\nSimply does `AddGCPrologueCallback`\n\n<a name="api_nan_remove_gc_epilogue_callback"></a>\n### NanRemoveGCEpilogueCallback(GCEpilogueCallback callback)\n\nSimply does `RemoveGCEpilogueCallback`\n\n<a name="api_nan_remove_gc_prologue_callback"></a>\n### NanRemoveGCPrologueCallback(GCPrologueCallback callback)\n\nSimply does `RemoveGCPrologueCallback`\n\n<a name="api_nan_get_heap_statistics"></a>\n### NanGetHeapStatistics(HeapStatistics *heap_statistics)\n\nSimply does `GetHeapStatistics`\n\n<a name="api_nan_callback"></a>\n### NanCallback\n\nBecause of the difficulties imposed by the changes to `Persistent` handles in V8 in Node 0.11, creating `Persistent` versions of your `Handle<Function>` is annoyingly tricky. `NanCallback` makes it easier by taking your handle, making it persistent until the `NanCallback` is deleted and even providing a handy `Call()` method to fetch and execute the callback `Function`.\n\n```c++\nLocal<Function> callbackHandle = args[0].As<Function>();\nNanCallback *callback = new NanCallback(callbackHandle);\n// pass `callback` around and it\'s safe from GC until you:\ndelete callback;\n```\n\nYou can execute the callback like so:\n\n```c++\n// no arguments:\ncallback->Call(0, NULL);\n\n// an error argument:\nHandle<Value> argv[] = {\n  NanError(NanNew<String>("fail!"))\n};\ncallback->Call(1, argv);\n\n// a success argument:\nHandle<Value> argv[] = {\n  NanNull(),\n  NanNew<String>("w00t!")\n};\ncallback->Call(2, argv);\n```\n\n`NanCallback` also has a `Local<Function> GetFunction()` method that you can use\nto fetch a local handle to the underlying callback function, as well  as a\n`void SetFunction(Handle<Function>)` for setting the callback on the\n`NanCallback`. You can check if a `NanCallback` is empty with the `bool IsEmpty()` method. Additionally a generic constructor is available for using\n`NanCallback` without performing heap allocations.\n\n<a name="api_nan_async_worker"></a>\n### NanAsyncWorker\n\n`NanAsyncWorker` is an abstract class that you can subclass to have much of the annoying async queuing and handling taken care of for you. It can even store arbitrary V8 objects for you and have them persist while the async work is in progress.\n\nSee a rough outline of the implementation:\n\n```c++\nclass NanAsyncWorker {\npublic:\n  NanAsyncWorker (NanCallback *callback);\n\n  // Clean up persistent handles and delete the *callback\n  virtual ~NanAsyncWorker ();\n\n  // Check the `ErrorMessage()` and call HandleOKCallback()\n  // or HandleErrorCallback depending on whether it has been set or not\n  virtual void WorkComplete ();\n\n  // You must implement this to do some async work. If there is an\n  // error then use `SetErrorMessage()` to set an error message and the callback will\n  // be passed that string in an Error object\n  virtual void Execute ();\n\n  // Save a V8 object in a Persistent handle to protect it from GC\n  void SaveToPersistent(const char *key, Local<Object> &obj);\n\n  // Fetch a stored V8 object (don\'t call from within `Execute()`)\n  Local<Object> GetFromPersistent(const char *key);\n\n  // Get the error message (or NULL)\n  const char *ErrorMessage();\n\n  // Set an error message\n  void SetErrorMessage(const char *msg);\n\nprotected:\n  // Default implementation calls the callback function with no arguments.\n  // Override this to return meaningful data\n  virtual void HandleOKCallback ();\n\n  // Default implementation calls the callback function with an Error object\n  // wrapping the `errmsg` string\n  virtual void HandleErrorCallback ();\n};\n```\n\n<a name="api_nan_async_queue_worker"></a>\n### NanAsyncQueueWorker(NanAsyncWorker *)\n\n`NanAsyncQueueWorker` will run a `NanAsyncWorker` asynchronously via libuv. Both the *execute* and *after_work* steps are taken care of for you&mdash;most of the logic for this is embedded in `NanAsyncWorker`.\n\n### Contributors\n\nNAN is only possible due to the excellent work of the following contributors:\n\n<table><tbody>\n<tr><th align="left">Rod Vagg</th><td><a href="https://github.com/rvagg">GitHub/rvagg</a></td><td><a href="http://twitter.com/rvagg">Twitter/@rvagg</a></td></tr>\n<tr><th align="left">Benjamin Byholm</th><td><a href="https://github.com/kkoopa/">GitHub/kkoopa</a></td><td>-</td></tr>\n<tr><th align="left">Trevor Norris</th><td><a href="https://github.com/trevnorris">GitHub/trevnorris</a></td><td><a href="http://twitter.com/trevnorris">Twitter/@trevnorris</a></td></tr>\n<tr><th align="left">Nathan Rajlich</th><td><a href="https://github.com/TooTallNate">GitHub/TooTallNate</a></td><td><a href="http://twitter.com/TooTallNate">Twitter/@TooTallNate</a></td></tr>\n<tr><th align="left">Brett Lawson</th><td><a href="https://github.com/brett19">GitHub/brett19</a></td><td><a href="http://twitter.com/brett19x">Twitter/@brett19x</a></td></tr>\n<tr><th align="left">Ben Noordhuis</th><td><a href="https://github.com/bnoordhuis">GitHub/bnoordhuis</a></td><td><a href="http://twitter.com/bnoordhuis">Twitter/@bnoordhuis</a></td></tr>\n<tr><th align="left">David Siegel</th><td><a href="https://github.com/agnat">GitHub/agnat</a></td><td>-</td></tr>\n</tbody></table>\n\nLicence &amp; copyright\n-----------------------\n\nCopyright (c) 2014 NAN contributors (listed above).\n\nNative Abstractions for Node.js is licensed under an MIT license. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.\n',
570 silly resolved     readmeFilename: 'README.md',
570 silly resolved     bugs: { url: 'https://github.com/rvagg/nan/issues' },
570 silly resolved     homepage: 'https://github.com/rvagg/nan',
570 silly resolved     _id: 'nan@1.5.0',
570 silly resolved     _shasum: '2b3c05bc361f52e50aea2c49077783aa67c5b7fb',
570 silly resolved     _from: 'nan@1.5.0',
570 silly resolved     _resolved: 'https://registry.npmjs.org/nan/-/nan-1.5.0.tgz' },
570 silly resolved   { name: 'bindings',
570 silly resolved     description: 'Helper module for loading your native module\'s .node file',
570 silly resolved     keywords: [ 'native', 'addon', 'bindings', 'gyp', 'waf', 'c', 'c++' ],
570 silly resolved     version: '1.2.1',
570 silly resolved     author:
570 silly resolved      { name: 'Nathan Rajlich',
570 silly resolved        email: 'nathan@tootallnate.net',
570 silly resolved        url: 'http://tootallnate.net' },
570 silly resolved     repository:
570 silly resolved      { type: 'git',
570 silly resolved        url: 'git://github.com/TooTallNate/node-bindings.git' },
570 silly resolved     main: './bindings.js',
570 silly resolved     bugs: { url: 'https://github.com/TooTallNate/node-bindings/issues' },
570 silly resolved     homepage: 'https://github.com/TooTallNate/node-bindings',
570 silly resolved     license: 'MIT',
570 silly resolved     readme: 'node-bindings\n=============\n### Helper module for loading your native module\'s .node file\n\nThis is a helper module for authors of Node.js native addon modules.\nIt is basically the "swiss army knife" of `require()`ing your native module\'s\n`.node` file.\n\nThroughout the course of Node\'s native addon history, addons have ended up being\ncompiled in a variety of different places, depending on which build tool and which\nversion of node was used. To make matters worse, now the _gyp_ build tool can\nproduce either a _Release_ or _Debug_ build, each being built into different\nlocations.\n\nThis module checks _all_ the possible locations that a native addon would be built\nat, and returns the first one that loads successfully.\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install bindings\n```\n\nOr add it to the `"dependencies"` section of your _package.json_ file.\n\n\nExample\n-------\n\n`require()`ing the proper bindings file for the current node version, platform\nand architecture is as simple as:\n\n``` js\nvar bindings = require(\'bindings\')(\'binding.node\')\n\n// Use your bindings defined in your C files\nbindings.your_c_function()\n```\n\n\nNice Error Output\n-----------------\n\nWhen the `.node` file could not be loaded, `node-bindings` throws an Error with\na nice error message telling you exactly what was tried. You can also check the\n`err.tries` Array property.\n\n```\nError: Could not load the bindings file. Tried:\n → /Users/nrajlich/ref/build/binding.node\n → /Users/nrajlich/ref/build/Debug/binding.node\n → /Users/nrajlich/ref/build/Release/binding.node\n → /Users/nrajlich/ref/out/Debug/binding.node\n → /Users/nrajlich/ref/Debug/binding.node\n → /Users/nrajlich/ref/out/Release/binding.node\n → /Users/nrajlich/ref/Release/binding.node\n → /Users/nrajlich/ref/build/default/binding.node\n → /Users/nrajlich/ref/compiled/0.8.2/darwin/x64/binding.node\n    at bindings (/Users/nrajlich/ref/node_modules/bindings/bindings.js:84:13)\n    at Object.<anonymous> (/Users/nrajlich/ref/lib/ref.js:5:47)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    ...\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
570 silly resolved     readmeFilename: 'README.md',
570 silly resolved     _id: 'bindings@1.2.1',
570 silly resolved     _shasum: '14ad6113812d2d37d72e67b4cacb4bb726505f11',
570 silly resolved     _from: 'bindings@1.2.1',
570 silly resolved     _resolved: 'https://registry.npmjs.org/bindings/-/bindings-1.2.1.tgz' } ]
571 info install nan@1.5.0 into /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq
572 info install bindings@1.2.1 into /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq
573 info installOne nan@1.5.0
574 info installOne bindings@1.2.1
575 info /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/nan unbuild
576 info /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/bindings unbuild
577 verbose tar unpack /Users/arobinson/.npm/nan/1.5.0/package.tgz
578 silly lockFile e505de18-e-modules-libpq-node-modules-nan tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/nan
579 verbose lock tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/nan /Users/arobinson/.npm/e505de18-e-modules-libpq-node-modules-nan.lock
580 silly lockFile f5f053ee-binson-npm-nan-1-5-0-package-tgz tar:///Users/arobinson/.npm/nan/1.5.0/package.tgz
581 verbose lock tar:///Users/arobinson/.npm/nan/1.5.0/package.tgz /Users/arobinson/.npm/f5f053ee-binson-npm-nan-1-5-0-package-tgz.lock
582 verbose tar unpack /Users/arobinson/.npm/bindings/1.2.1/package.tgz
583 silly lockFile 2604bc7a-ules-libpq-node-modules-bindings tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/bindings
584 verbose lock tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/bindings /Users/arobinson/.npm/2604bc7a-ules-libpq-node-modules-bindings.lock
585 silly lockFile 5dcba82f-n-npm-bindings-1-2-1-package-tgz tar:///Users/arobinson/.npm/bindings/1.2.1/package.tgz
586 verbose lock tar:///Users/arobinson/.npm/bindings/1.2.1/package.tgz /Users/arobinson/.npm/5dcba82f-n-npm-bindings-1-2-1-package-tgz.lock
587 silly gunzTarPerm modes [ '755', '644' ]
588 silly gunzTarPerm modes [ '755', '644' ]
589 silly gunzTarPerm extractEntry package.json
590 silly gunzTarPerm modified mode [ 'package.json', 436, 420 ]
591 silly gunzTarPerm extractEntry package.json
592 silly gunzTarPerm extractEntry README.md
593 silly gunzTarPerm modified mode [ 'README.md', 436, 420 ]
594 silly gunzTarPerm extractEntry include_dirs.js
595 silly gunzTarPerm modified mode [ 'include_dirs.js', 436, 420 ]
596 silly gunzTarPerm extractEntry README.md
597 silly gunzTarPerm extractEntry bindings.js
598 silly gunzTarPerm extractEntry LICENSE.md
599 silly gunzTarPerm modified mode [ 'LICENSE.md', 436, 420 ]
600 silly gunzTarPerm extractEntry .dntrc
601 silly gunzTarPerm modified mode [ '.dntrc', 436, 420 ]
602 silly gunzTarPerm extractEntry appveyor.yml
603 silly gunzTarPerm modified mode [ 'appveyor.yml', 436, 420 ]
604 silly gunzTarPerm extractEntry build/config.gypi
605 silly gunzTarPerm modified mode [ 'build/config.gypi', 436, 420 ]
606 silly lockFile 2604bc7a-ules-libpq-node-modules-bindings tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/bindings
607 silly lockFile 2604bc7a-ules-libpq-node-modules-bindings tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/bindings
608 silly lockFile 5dcba82f-n-npm-bindings-1-2-1-package-tgz tar:///Users/arobinson/.npm/bindings/1.2.1/package.tgz
609 silly lockFile 5dcba82f-n-npm-bindings-1-2-1-package-tgz tar:///Users/arobinson/.npm/bindings/1.2.1/package.tgz
610 silly gunzTarPerm extractEntry nan.h
611 silly gunzTarPerm modified mode [ 'nan.h', 436, 420 ]
612 silly gunzTarPerm extractEntry nan_implementation_12_inl.h
613 silly gunzTarPerm modified mode [ 'nan_implementation_12_inl.h', 436, 420 ]
614 silly gunzTarPerm extractEntry nan_implementation_pre_12_inl.h
615 silly gunzTarPerm modified mode [ 'nan_implementation_pre_12_inl.h', 436, 420 ]
616 silly gunzTarPerm extractEntry nan_new.h
617 silly gunzTarPerm modified mode [ 'nan_new.h', 436, 420 ]
618 silly gunzTarPerm extractEntry CHANGELOG.md
619 silly gunzTarPerm modified mode [ 'CHANGELOG.md', 436, 420 ]
620 info preinstall bindings@1.2.1
621 verbose readDependencies using package.json deps
622 verbose readDependencies using package.json deps
623 silly resolved []
624 verbose about to build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/bindings
625 info build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/bindings
626 verbose linkStuff [ false,
626 verbose linkStuff   false,
626 verbose linkStuff   false,
626 verbose linkStuff   '/Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules' ]
627 info linkStuff bindings@1.2.1
628 verbose linkBins bindings@1.2.1
629 verbose linkMans bindings@1.2.1
630 verbose rebuildBundles bindings@1.2.1
631 info install bindings@1.2.1
632 info postinstall bindings@1.2.1
633 silly lockFile e505de18-e-modules-libpq-node-modules-nan tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/nan
634 silly lockFile e505de18-e-modules-libpq-node-modules-nan tar:///Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/nan
635 silly lockFile f5f053ee-binson-npm-nan-1-5-0-package-tgz tar:///Users/arobinson/.npm/nan/1.5.0/package.tgz
636 silly lockFile f5f053ee-binson-npm-nan-1-5-0-package-tgz tar:///Users/arobinson/.npm/nan/1.5.0/package.tgz
637 info preinstall nan@1.5.0
638 verbose readDependencies using package.json deps
639 verbose readDependencies using package.json deps
640 silly resolved []
641 verbose about to build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/nan
642 info build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules/nan
643 verbose linkStuff [ false,
643 verbose linkStuff   false,
643 verbose linkStuff   false,
643 verbose linkStuff   '/Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq/node_modules' ]
644 info linkStuff nan@1.5.0
645 verbose linkBins nan@1.5.0
646 verbose linkMans nan@1.5.0
647 verbose rebuildBundles nan@1.5.0
648 info install nan@1.5.0
649 info postinstall nan@1.5.0
650 verbose about to build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq
651 info build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq
652 verbose linkStuff [ false,
652 verbose linkStuff   false,
652 verbose linkStuff   false,
652 verbose linkStuff   '/Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules' ]
653 info linkStuff libpq@1.5.1
654 verbose linkBins libpq@1.5.1
655 verbose linkMans libpq@1.5.1
656 verbose rebuildBundles libpq@1.5.1
657 verbose rebuildBundles [ 'bindings', 'nan' ]
658 info install libpq@1.5.1
659 verbose unsafe-perm in lifecycle false
660 info libpq@1.5.1 Failed to exec install script
661 info /Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules/libpq unbuild
662 info preuninstall libpq@1.5.1
663 info uninstall libpq@1.5.1
664 verbose false,/Users/arobinson/Documents/Projects/controls/node_modules,/Users/arobinson/Documents/Projects/controls/node_modules/pg-native/node_modules unbuild libpq@1.5.1
665 info postuninstall libpq@1.5.1
666 verbose about to build /Users/arobinson/Documents/Projects/controls/node_modules/pg-native
667 info /Users/arobinson/Documents/Projects/controls/node_modules/pg-native unbuild
668 info preuninstall pg-native@1.8.0
669 info uninstall pg-native@1.8.0
670 verbose true,/Users/arobinson/Documents/Projects/controls/node_modules,/Users/arobinson/Documents/Projects/controls/node_modules unbuild pg-native@1.8.0
671 info postuninstall pg-native@1.8.0
672 error libpq@1.5.1 install: `node-gyp rebuild`
672 error Exit status 1
673 error Failed at the libpq@1.5.1 install script.
673 error This is most likely a problem with the libpq package,
673 error not with npm itself.
673 error Tell the author that this fails on your system:
673 error     node-gyp rebuild
673 error You can get their info via:
673 error     npm owner ls libpq
673 error There is likely additional logging output above.
674 error System Darwin 13.2.0
675 error command "node" "/usr/local/bin/npm" "install" "pg-native"
676 error cwd /Users/arobinson/Documents/Projects/controls
677 error node -v v0.10.28
678 error npm -v 1.4.9
679 error code ELIFECYCLE
680 verbose exit [ 1, true ]
