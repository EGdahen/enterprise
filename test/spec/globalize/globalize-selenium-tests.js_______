/***************************
 * Dropdown - Selenium Tests
 * These tests run using webdriverJS and Selenium, in a true browser environment
***************************/

var runner;

describe('Globalize [selenium]', function(){
/*

  this.timeout(99999999);

  var setLocale = function(locale, done) {
    var test = function () {
      return Globalize.locale(locale);
    };

    runner.client
       .execute(test, function(err, result) {
        globals.noError(err);
        should.exist(result);
        result.value.should.equal(locale);
      })
      .call(done);
  };

  //Start Server - Make a Web Driver Connection
  before(function(done){
    runner = globals.setup(undefined, '/tests/globalize');
    runner.client
      .execute('window.hnl = {};')
      // NOTE: Had to set a specific window size to prevent failures
      // in PhantomJS regarding UI element clicks.
      .windowHandleSize({
          width: 1024,
          height: 768
      })
      .call(done);
  });

  it('added lang to page', function(done) {
    runner.client
      .getAttribute('html', 'lang', function(err, attr) {
        attr.should.equal('en');
      }).call(done);
  });

  it('be able to get locale', function(done) {
    var test = function () {
      return Globalize.locale();
    };

    runner.client
       .execute(test, function(err, result) {
        globals.noError(err);
        should.exist(result);
        result.value.should.equal('en');
      })
      .call(done);
  });

  it('be able to set locale', function(done) {
    setLocale('de', done);
  });

  it('format dates - en', function(done) {
    setLocale('en', done);

    var test = function () {
      return Globalize.formatDate(new Date(2000, 10, 8));
    };

    runner.client
       .execute(test, function(err, result) {
        globals.noError(err);
        should.exist(result);
        result.value.should.equal('08/10/2000');
      }).call(done);
  });

  it('format dates - de', function(done) {
    var test = function () {
      Globalize.locale('de');
      return Globalize.formatDate(new Date(2000, 10, 8));
    };

    runner.client
       .execute(test, function(err, result) {
        globals.noError(err);
        should.exist(result);
        result.value.should.equal('08.10.00');
      }).call(done);
  });
*/
});
